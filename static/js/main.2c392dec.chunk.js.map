{"version":3,"sources":["main/ui/common/input/Input.module.scss","main/ui/pages/auth/register/Register.module.scss","main/ui/common/c3-SuperCheckbox/SuperCheckbox.module.css","main/ui/common/c1-SuperInputText/SuperInputText.module.css","main/ui/common/c2-SuperButton/SuperButton.module.css","App.module.scss","main/ui/navigation/Navigation.module.css","main/ui/content/Content.module.css","main/ui/common/button/Button.module.scss","main/ui/common/logo/Logo.module.scss","main/ui/common/titleh2/TitleH2.module.scss","main/ui/header/Header.module.css","main/ui/pages/auth/loginPage/LoginPage.module.scss","main/router/routes.ts","main/ui/content/components/profile/Profile.tsx","main/ui/content/components/notFound/NotFound.tsx","main/ui/content/components/passwordRecover/api-passwordRecover.ts","main/store/passwordRecover-reducer.ts","main/ui/content/components/passwordRecover/PasswordRecover.tsx","main/ui/content/components/passwordRecover/PasswordRecoverContainer.tsx","main/ui/content/components/newPassword/NewPassword.tsx","main/ui/common/c1-SuperInputText/SuperInputText.tsx","main/ui/common/c2-SuperButton/SuperButton.tsx","main/ui/common/c3-SuperCheckbox/SuperCheckbox.tsx","main/ui/content/components/presentation/Presentation.tsx","main/ui/content/components/login/api-login.ts","main/store/login-reducer.ts","main/ui/content/components/login/Login.tsx","main/ui/common/input/Input.tsx","main/ui/common/button/Button.tsx","main/ui/common/logo/Logo.tsx","main/ui/common/titleh2/TitleH2.tsx","main/ui/pages/auth/register/Register.tsx","main/ui/pages/auth/register/api/api-registr.ts","main/store/registration-reducer.ts","main/ui/pages/auth/register/api/RegistrationContainer.tsx","main/ui/content/Content.tsx","main/ui/header/Header.tsx","main/ui/navigation/Navigation.tsx","main/ui/pages/auth/loginPage/LoginPage.tsx","App.tsx","reportWebVitals.ts","main/store/app-reducer.ts","main/store/newPassword-reducer.ts","main/store/profile-reducer.ts","main/store/store.ts","index.tsx"],"names":["module","exports","routes","Profile","NotFound","instance","axios","create","withCredentials","baseURL","passwordRecoverAPI","email","post","from","message","initialState","isFetching","error","isFetchingAC","type","setErrorAC","PasswordRecover","props","placeholder","onChange","onChangeEmail","value","onClick","onclickHandler","PasswordRecoverContainer","useState","setEmail","useSelector","state","passwordRecover","dispatch","useDispatch","e","currentTarget","test","then","res","console","log","data","catch","response","finally","recoverTC","NewPassword","SuperInputText","onChangeText","onKeyPress","onEnter","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","Presentation","authAPI","password","rememberMe","user","LoginPage","setPassword","setRememberMe","payload","getAuthUserData","Input","wrapper","style","title","input__item","name","checkboxInput","id","checkboxLable","htmlFor","span","Button","btn","Logo","logo","href","TitleH2","Register","loginPage","inner","form","onEmailChange","onPasswordChange","marginTop","onPasswordConfirmChange","cancelClick","width","backgroundColor","color","marginRight","registrationButtonClock","regAPI","newUser","RegistrationContainer","passwordConfirm","setPasswordConfirm","setNewUserTC","Content","contentContainer","path","exact","render","to","Header","headerContainer","Navigation","navigationContainer","linksList","wrap","linkPassword","singUp","linkSingUp","App","app","content","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","login","newPassword","profile","registration","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c392dec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Input_wrapper__sgEY7\",\"label\":\"Input_label__2TTl5\",\"input__item\":\"Input_input__item__3jSC1\",\"icon\":\"Input_icon__1E6-D\",\"span\":\"Input_span__2Jcmt\",\"checkbox\":\"Input_checkbox__2bqf6\",\"checkboxInput\":\"Input_checkboxInput__P_T-B\",\"checkboxLable\":\"Input_checkboxLable__3VCdo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Register_loginPage__3xiEa\",\"wrapper\":\"Register_wrapper__3fFdv\",\"inner\":\"Register_inner__35eRX\",\"form\":\"Register_form__1wCvI\",\"btn\":\"Register_btn__1F_93\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"SuperCheckbox_label__3Uw_d\",\"checkbox\":\"SuperCheckbox_checkbox__g1cBY\",\"spanClassName\":\"SuperCheckbox_spanClassName__2SSWM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1S5Pe\",\"errorInput\":\"SuperInputText_errorInput__1pjFr\",\"error\":\"SuperInputText_error__38li9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2VowH\",\"red\":\"SuperButton_red__INs1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"App_content__INdBb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigationContainer\":\"Navigation_navigationContainer__3jxDD\",\"linksList\":\"Navigation_linksList__2vRX6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"Content_contentContainer__3_tBf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3YXc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__2s_vA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"TitleH2_title__1oyIA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Header_headerContainer__unZf7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"LoginPage_loginPage__hcNKt\",\"wrapper\":\"LoginPage_wrapper__1MyWC\",\"inner\":\"LoginPage_inner__3LI6D\",\"form\":\"LoginPage_form__2167u\",\"wrap\":\"LoginPage_wrap__67Q5A\",\"checkbox\":\"LoginPage_checkbox__1yU25\",\"checkboxInput\":\"LoginPage_checkboxInput__2IJIz\",\"checkboxLable\":\"LoginPage_checkboxLable__UkwD5\",\"linkPassword\":\"LoginPage_linkPassword__1IZ12\",\"btn\":\"LoginPage_btn__47WwK\",\"singUp\":\"LoginPage_singUp__2KldC\",\"span\":\"LoginPage_span__2D1Xl\",\"linkSingUp\":\"LoginPage_linkSingUp__2GvXi\"};","\r\nexport const routes = {\r\n    profile: \"/\",\r\n    login: \"/login\",\r\n    registration: \"/registration\",\r\n    notFound: \"/404\",\r\n    passwordRecover: \"/recover\",\r\n    newPassword: \"/newPassword\",\r\n    presentation: \"/presentation\",\r\n}","import React from \"react\";\r\n\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n        <div>\r\n            NotFound\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0'\r\n})\r\n\r\nconst from = 'shamashov87@mail.ru';\r\nconst message = `<div>password recover link: <a href='http://localhost:3000/#/set-new-password/$token$'>Link</a></div>`\r\n\r\nexport const passwordRecoverAPI = {\r\n    recover(email: string) {\r\n        return instance.post('auth/forgot', {email, from, message})\r\n    }\r\n}","import {Dispatch} from \"redux\"\r\nimport {passwordRecoverAPI} from \"../ui/content/components/passwordRecover/api-passwordRecover\";\r\n\r\nconst initialState = {\r\n    isFetching: false,\r\n    error: null as null | string\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const passwordRecoverReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"IS-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const isFetchingAC = (isFetching: boolean) => ({type: \"IS-FETCHING\", isFetching} as const)\r\nexport const setErrorAC = (error: string | null) => ({type: \"SET-ERROR\", error} as const)\r\n\r\nexport const recoverTC = (email: string) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(isFetchingAC(true))\r\n    passwordRecoverAPI.recover(email)\r\n        .then(res => {\r\n            console.log(res.data)\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response ? e.response.data.error : (e.message + \", more details in the console\")\r\n            dispatch(setErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\ntype ActionType = ReturnType<typeof isFetchingAC> | ReturnType<typeof setErrorAC>","import React, {ChangeEvent} from \"react\";\r\n\r\nexport type PasswordRecoverPropsType = {\r\n    email: string\r\n    error: string | null\r\n    onChangeEmail: (e: ChangeEvent<HTMLInputElement>) => void\r\n    onclickHandler: () => void\r\n}\r\nexport const PasswordRecover = (props: PasswordRecoverPropsType) => {\r\n    return (\r\n        <div>\r\n            <input type={'email'} placeholder={'Enter email'} onChange={props.onChangeEmail} value={props.email}/>\r\n            {props.error !== null ? <span>{props.error}</span> : null}\r\n            <button onClick={props.onclickHandler}>Send</button>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {recoverTC, setErrorAC} from \"../../../../store/passwordRecover-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport {PasswordRecover} from \"./PasswordRecover\";\r\n\r\n\r\nexport const PasswordRecoverContainer = () => {\r\n    const [email, setEmail] = useState(\"shamashov87@mail.ru\")\r\n\r\n    const isFetching = useSelector<AppRootStateType, boolean>((state) => state.passwordRecover.isFetching)\r\n    const error = useSelector<AppRootStateType, string | null>((state) => state.passwordRecover.error)\r\n    const dispatch = useDispatch();\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n        if (error !== null) {\r\n            dispatch(setErrorAC(null))\r\n        }\r\n    }\r\n\r\n    const onclickHandler = () => {\r\n        if (email === \"\") {\r\n            dispatch(setErrorAC('Required'))\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            dispatch(setErrorAC('Invalid email address'))\r\n        } else {\r\n            dispatch(recoverTC(email))\r\n            setEmail(\"\")\r\n        }\r\n    }\r\n\r\n    if (isFetching) {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n    return (\r\n        <PasswordRecover email={email}\r\n                         error={error}\r\n                         onChangeEmail={onChangeEmail}\r\n                         onclickHandler={onclickHandler}\r\n        />\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\n\r\n\r\nexport const NewPassword = () => {\r\n    return (\r\n        <div>\r\n            New Password\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}`; // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? `${s.default} ${s.red}` : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n       onChangeChecked && onChangeChecked(e.currentTarget.checked)// сделайте так чтоб работал onChange и onChangeChecked\r\n       onChange && onChange(e)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label className={s.label}>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children ? <span className={s.spanClassName}>{children}</span> : <span className={s.spanClassName}></span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n};\r\n\r\nexport default SuperCheckbox;\r\n","import React from \"react\";\r\nimport SuperInputText from \"../../../common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../../common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../../common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\n\r\nexport const Presentation = () => {\r\n    return (\r\n        <div>\r\n            <SuperInputText/>\r\n            <SuperButton/>\r\n            <SuperCheckbox/>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'http://localhost:7542/2.0/'\r\n})\r\n\r\n\r\nexport const authAPI = {\r\n\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post('auth/login', {email, password, rememberMe})\r\n\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../ui/content/components/login/api-login\";\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    user: {},\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_USER_DATA':\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserDataAC = (payload: InitialStateType) => ({type: 'SET_USER_DATA', payload}) as const\r\n\r\nexport const getAuthUserData = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(response => {\r\n                console.log(response.data)\r\n                dispatch(setAuthUserDataAC(response.data))\r\n            }\r\n        ).catch((e) => {\r\n        const error = e.response ? e.response.data.error : (e.message + \", more details in the console\")\r\n        console.log(error)\r\n    })\r\n}\r\nexport type setAuthUserDataType = ReturnType<typeof setAuthUserDataAC>\r\n\r\ntype ActionsType =\r\n    |  setAuthUserDataType\r\n\r\n\r\n\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {getAuthUserData} from \"../../../../store/login-reducer\";\r\nimport SuperInputText from \"../../../common/c1-SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../../common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperButton from \"../../../common/c2-SuperButton/SuperButton\";\r\n\r\nexport const LoginPage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    let [email, setEmail] = useState<string>('')\r\n    let [password, setPassword] = useState<string>('')\r\n    let [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.currentTarget.value)\r\n    }\r\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n    }\r\n    const onChangeRememberMe = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setRememberMe(e.currentTarget.checked)\r\n    }\r\n\r\n    let onclickHandler = () => {\r\n        dispatch(getAuthUserData(email, password, rememberMe))\r\n    }\r\n\r\n    return (<div>\r\n            <h4>SIGN IN</h4>\r\n            <SuperInputText type={'email'}\r\n                            placeholder={'Enter email'}\r\n                            onChange={onChangeEmail}/>\r\n            <SuperInputText type={'password'}\r\n                            placeholder={'Password'}\r\n                            onChange={onChangePassword}/>\r\n            <SuperCheckbox type={'checkbox'} onChange={onChangeRememberMe}>Remember me</SuperCheckbox>\r\n            <SuperButton onClick={onclickHandler}>Login</SuperButton>\r\n        </div>\r\n    );\r\n}","import s from \"./Input.module.scss\";\r\nimport Eye from \"./../../assets/images/loginPage/eye.svg\";\r\nimport EyeHide from \"./../../assets/images/loginPage/eyeHide.svg\";\r\nimport { ChangeEvent } from \"react\";\r\n\r\n\r\n\r\nexport const Input = (props: any) => {\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.onChange(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <form className={s.wrapper} style={props.style}>\r\n            <label className={s.label}>{props.title}</label>\r\n            <input className={s.input__item}\r\n                   type={props.type}\r\n                   name={props.name}\r\n                   placeholder={props.placeholder}\r\n                   value={props.value}\r\n                   onChange={onChangeHandler}/>\r\n\r\n          {/*  <img src={Eye} className={s.icon}/>*/}\r\n            {/* <img src={EyeHide} className={s.icon}/>  перечеркнутый глаз */}\r\n\r\n\r\n            {/* Глазик чекбокс */}\r\n            <div className={s.checkbox}>\r\n                <input className={s.checkboxInput} type=\"checkbox\" id={props.id}/>\r\n                <label className={s.checkboxLable} htmlFor={props.htmlFor}></label>\r\n            </div>\r\n\r\n                {/* Не получается заюзать((( */}\r\n                {/* <Eye\r\n                    id= \"checkbox2\"\r\n                    htmlFor= \"checkbox2\"\r\n                /> */}\r\n\r\n            <span className={s.span}>Input error</span>\r\n        </form>\r\n    )\r\n}","import s from \"./Button.module.scss\";\r\n\r\n\r\nexport const Button = (props: any) => {\r\n\r\n    return (\r\n        <button\r\n\t\t\tclassName={s.btn}\r\n\t\t\tstyle={props.style}\r\n\t\t\tonClick={props.onClick}\r\n\t\t> \r\n\t\t\t{props.value}\r\n\t\t</button>\r\n    );\r\n}","import s from \"./Logo.module.scss\";\r\n\r\nexport const Logo = (props: any) => {\r\n    return (\r\n        <a className={s.logo} style={props.style} href=\"#\">It-incubator</a>                  \r\n    )\r\n}","import s from \"./TitleH2.module.scss\";\r\n\r\nexport const TitleH2 = (props: any) => {\r\n    return (\r\n        <h2 className={s.title} style={props.style}>Sign In</h2>                 \r\n    )\r\n}","import s from \"./Register.module.scss\";\r\nimport {Input} from \"../../../common/input/Input\";\r\nimport {Button} from \"../../../common/button/Button\";\r\nimport {Logo} from \"../../../common/logo/Logo\";\r\nimport {TitleH2} from \"../../../common/titleh2/TitleH2\";\r\nimport {ChangeEvent} from \"react\";\r\n\r\ntype RegistrationPropsType = {\r\n    email: string\r\n    password: string\r\n    passwordConfirm: string\r\n    onEmailChange: (email: string) => void\r\n    onPasswordChange: (password: string) => void\r\n    onPasswordConfirmChange: (passwordConfirm: string) => void\r\n    registrationButtonClock: () => void\r\n    cancelClick: () => void\r\n}\r\n\r\nexport const Register = (props: RegistrationPropsType) => {\r\n\r\n    const emailChange = (value: string) => {\r\n        props.onEmailChange(value)\r\n    }\r\n\r\n    const passwordChange = (value: string) => {\r\n        props.onPasswordChange(value)\r\n    }\r\n\r\n    const passwordConfirmChange = (value: string) => {\r\n        props.onPasswordConfirmChange(value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.loginPage}>\r\n            <div className={s.wrapper}>\r\n                <div className={s.inner}>\r\n                    <Logo/>\r\n                    <TitleH2/>\r\n                    <div className={s.form}>\r\n                        <Input title=\"Email\"\r\n                               type=\"email\"\r\n                               name=\"email\"\r\n                               value={props.email}\r\n                               onChange={emailChange}/> {/* Нужно убрать глазик (логика) */}\r\n                        <Input title=\"Password\"\r\n                                type= \"password\"\r\n                                name=\"password\"\r\n                                id= \"checkbox3\"\r\n                               value={props.password}\r\n                               onChange={passwordChange}\r\n                                htmlFor= \"checkbox3\"\r\n                            style= {{marginTop:\"25px\"}} />\r\n                            <Input title=\"Confirm password\"\r\n                                type= \"password\"\r\n                                name=\"Confirm password\"\r\n                                   value={props.password}\r\n                                   onChange={passwordConfirmChange}\r\n                                id= \"checkbox4\"\r\n                                htmlFor= \"checkbox4\"\r\n                            style= {{marginTop:\"25px\"}} />\r\n                    </div>\r\n                    <form className={s.btn}>\r\n                        <Button value=\"Cancel\"\r\n                                onClick={props.cancelClick}\r\n                                style={{\r\n                                    width: \"124px\",\r\n                                    backgroundColor: \"#CDCEF4\",\r\n                                    color: \"#21268F\",\r\n                                    marginRight: \"36px\"\r\n                                }}/>\r\n                        <Button value=\"Register\"\r\n                                onClick={props.registrationButtonClock}\r\n                                style={{width: \"187px\"}}\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'http://localhost:7542/2.0/'\r\n})\r\n\r\nexport const regAPI = {\r\n\r\n    registration(email: string, password: string) {\r\n        return instance.post('auth/register', {email, password})\r\n\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {regAPI} from \"../ui/pages/auth/register/api/api-registr\";\r\n\r\nconst initialState = {\r\n    newUser: {}\r\n}\r\n\r\ntype newUserType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET_NEW_USER\": {\r\n            return {\r\n                ...state,\r\n                newUser: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setNewUserAC = (payload: InitialStateType) => ({type: 'SET_NEW_USER', payload}) as const\r\n\r\nexport const setNewUserTC = (email: string, password: string) => (dispatch: Dispatch) => {\r\n    debugger\r\n    regAPI.registration(email, password)\r\n        .then(response => {\r\n            console.log(response.data)\r\n            dispatch(setNewUserAC(response.data))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response ? e.response.data.error : (e.message + \", more details in the console\")\r\n            console.log(error)\r\n        })\r\n}\r\n\r\nexport type SetNewUserType = ReturnType<typeof setNewUserAC>;\r\n\r\ntype ActionType = SetNewUserType;","import {Register} from \"../Register\";\r\nimport {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setNewUserTC} from \"../../../../../store/registration-reducer\";\r\n\r\n\r\nexport const RegistrationContainer = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    let [email, setEmail] = useState<string>('');\r\n    let [password, setPassword] = useState<string>('');\r\n    let [passwordConfirm, setPasswordConfirm] = useState<string>('');\r\n\r\n    const onEmailChange = (email: string) => {\r\n        setEmail(email)\r\n    }\r\n    const onPasswordChange = (password: string) => {\r\n        setPassword(password)\r\n    }\r\n    const onPasswordConfirm = (passwordConfirm: string) => {\r\n        setPasswordConfirm(passwordConfirm)\r\n    }\r\n\r\n    const registrationButtonClick = () => {\r\n        if (password !== passwordConfirm) {\r\n            return\r\n        }\r\n        dispatch(setNewUserTC(email, password));\r\n        setEmail('');\r\n        setPassword('');\r\n        setPasswordConfirm('');\r\n\r\n    }\r\n    const cancelClick = () => {\r\n        setEmail('');\r\n        setPassword('');\r\n        setPasswordConfirm('');\r\n    }\r\n\r\n    return <Register email={email}\r\n                     password={password}\r\n                     passwordConfirm={passwordConfirm}\r\n                     onEmailChange={onEmailChange}\r\n                     onPasswordChange={onPasswordChange}\r\n                     onPasswordConfirmChange={onPasswordConfirm}\r\n                     registrationButtonClock={registrationButtonClick}\r\n                     cancelClick={cancelClick}\r\n    />\r\n\r\n}","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport s from \"./Content.module.css\"\r\nimport {routes} from \"../../router/routes\";\r\nimport {Profile} from \"./components/profile/Profile\";\r\nimport {NotFound} from \"./components/notFound/NotFound\";\r\nimport {PasswordRecoverContainer} from \"./components/passwordRecover/PasswordRecoverContainer\";\r\nimport {NewPassword} from \"./components/newPassword/NewPassword\";\r\nimport {Presentation} from \"./components/presentation/Presentation\";\r\nimport {LoginPage} from \"./components/login/Login\";\r\nimport {RegistrationContainer} from \"../pages/auth/register/api/RegistrationContainer\";\r\n\r\nexport const Content = () => {\r\n    return (\r\n        <div className={s.contentContainer}>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Redirect to={routes.login}/>}/>\r\n                <Route exact path={routes.login} render={() => <LoginPage/>} />\r\n                <Route exact path={routes.registration} render={() => <RegistrationContainer/>} />\r\n                <Route exact path={routes.profile} render={() => <Profile/>} />\r\n                <Route exact path={routes.passwordRecover} render={() => <PasswordRecoverContainer/>} />\r\n                <Route exact path={routes.newPassword} render={() => <NewPassword/>} />\r\n                <Route exact path={routes.presentation} render={() => <Presentation/>} />\r\n                <Route render={() => <NotFound/>} />\r\n\r\n                {/*<RegistrationContainer/>*/}\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./Header.module.css\"\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={s.headerContainer}>\r\n           <button>Login</button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Navigation.module.css\"\r\nimport {routes} from \"../../router/routes\";\r\n\r\n\r\nexport const Navigation = () => {\r\n    return (\r\n        <div className={s.navigationContainer}>\r\n            <h2>Navigation</h2>\r\n            <div className={s.linksList}>\r\n                <NavLink to={routes.login}>Login</NavLink>\r\n                <NavLink to={routes.registration}>Registration</NavLink>\r\n                <NavLink to={routes.profile}>Profile</NavLink>\r\n                <NavLink to={routes.notFound}>404</NavLink>\r\n                <NavLink to={routes.passwordRecover}>Password Recover</NavLink>\r\n                <NavLink to={routes.newPassword}>New Password</NavLink>\r\n                <NavLink to={routes.presentation}>Presentation</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import s from \"./LoginPage.module.scss\";\r\nimport { Input } from \"../../../common/input/Input\";\r\nimport { Button } from \"../../../common/button/Button\";\r\nimport { Logo } from \"../../../common/logo/Logo\";\r\nimport { TitleH2 } from \"../../../common/titleh2/TitleH2\";\r\n\r\n\r\n\r\n\r\nexport const LoginPage = () => {\r\n    return (\r\n        <div className={s.loginPage}>\r\n            <div className={s.wrapper}>\r\n                <div className={s.inner}>\r\n                    <Logo/>\r\n                    <TitleH2/>\r\n                    <div className={s.form}>\r\n                        <Input title=\"Email\"\r\n                                type= \"email\"\r\n                                name=\"email\" />   {/* Нужно убрать глазик (логика) */}\r\n                        <Input title=\"Password\"\r\n                                type= \"password\"\r\n                                name=\"password\"\r\n                                id= \"checkbox2\"\r\n                                htmlFor= \"checkbox2\"\r\n                                style= {{marginTop:\"25px\"}} />\r\n                    </div>\r\n                    <div className={s.wrap}>\r\n                        <div className={s.checkbox}>\r\n                            <input className={s.checkboxInput} type=\"checkbox\" id=\"checkbox1\"/>\r\n                            <label className={s.checkboxLable} htmlFor=\"checkbox1\">Rememder me</label>\r\n                        </div>\r\n                        <a className={s.linkPassword} href=\"#\">Forgot Password</a>\r\n                    </div>\r\n                    <div className={s.btn}>\r\n                        <Button value=\"Login\"/>\r\n                    </div>\r\n                    <div className={s.singUp}>\r\n                        <a className={s.span} href=\"#\">Don’t have an account?</a>\r\n                        <a className={s.linkSingUp} href=\"#\">Sign Up</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './App.module.scss';\r\n\r\nimport { Content } from './main/ui/content/Content';\r\nimport { Header } from './main/ui/header/Header';\r\nimport { Navigation } from './main/ui/navigation/Navigation';\r\nimport { Register } from './main/ui/pages/auth/register/Register';\r\nimport { LoginPage } from './main/ui/pages/auth/loginPage/LoginPage';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.app}>\r\n\r\n            {/* Осталось от фронта */}\r\n             <Header/>\r\n            <Navigation/>\r\n            <Content/>\r\n            \r\n\r\n            {/* Тут подключены сверстанные странички */}\r\n            <div className={s.content}>\r\n            <LoginPage/>\r\n            {/* <Register/>*/}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nconst initialState = {\r\n\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType = {\r\n    type: string\r\n}","\r\nconst initialState = {\r\n\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const newPasswordReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType = {\r\n    type: string\r\n}","\r\nconst initialState = {\r\n\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType = {\r\n    type: string\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from \"./app-reducer\";\r\nimport {loginReducer} from \"./login-reducer\";\r\nimport {newPasswordReducer} from \"./newPassword-reducer\";\r\nimport {passwordRecoverReducer} from \"./passwordRecover-reducer\";\r\nimport { profileReducer } from \"./profile-reducer\";\r\nimport {registrationReducer} from \"./registration-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login: loginReducer,\r\n    newPassword: newPasswordReducer,\r\n    passwordRecover: passwordRecoverReducer,\r\n    profile: profileReducer,\r\n    registration: registrationReducer\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./main/store/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <HashRouter>\r\n                <App/>\r\n            </HashRouter>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}