{"version":3,"sources":["main/ui/content/components/passwordRecover/forgotPassword/ForgotPassword.module.scss","main/ui/common/input/Input.module.scss","main/ui/pages/auth/register/Register.module.scss","App.module.scss","main/ui/navigation/Navigation.module.css","main/ui/content/Content.module.css","main/ui/common/button/Button.module.scss","main/ui/common/logo/Logo.module.scss","main/ui/common/titleh2/TitleH2.module.scss","main/ui/header/Header.module.css","main/router/routes.ts","main/ui/content/components/profile/Profile.tsx","main/ui/content/components/notFound/NotFound.tsx","main/ui/content/components/newPassword/NewPassword.tsx","main/ui/content/components/presentation/Presentation.tsx","main/ui/common/input/Input.tsx","main/ui/common/button/Button.tsx","main/ui/common/logo/Logo.tsx","main/ui/common/titleh2/TitleH2.tsx","main/ui/content/components/registration/Registration.tsx","main/ui/content/components/registration/api/api-registr.ts","main/store/registration-reducer.ts","main/ui/content/components/registration/RegistrationPage.tsx","main/ui/pages/auth/loginPage/api-login.ts","main/store/login-reducer.ts","main/ui/content/components/login/LoginPage.tsx","main/ui/content/components/login/LoginContainer.tsx","main/ui/content/components/passwordRecover/api-passwordRecover.ts","main/store/passwordRecover-reducer.ts","main/ui/content/components/passwordRecover/forgotPassword/ForgotPassword.tsx","main/ui/content/components/passwordRecover/PasswordRecoverContainer.tsx","main/ui/content/Content.tsx","main/ui/header/Header.tsx","main/ui/navigation/Navigation.tsx","App.tsx","reportWebVitals.ts","main/store/app-reducer.ts","main/store/newPassword-reducer.ts","main/store/profile-reducer.ts","main/store/store.ts","index.tsx","main/ui/content/components/login/LoginPage.module.scss"],"names":["module","exports","routes","Profile","NotFound","NewPassword","Presentation","Input","props","className","s","wrapper","style","label","title","input__item","type","name","placeholder","value","onChange","e","currentTarget","id","idName","checkbox","checkboxInput","changeVision","checkboxLable","htmlFor","span","error","Button","btn","onClick","Logo","logo","href","TitleH2","Registration","useState","passwordType","setPasswordType","passwordConfirmType","setPasswordConfirmType","loginPage","inner","form","email","emailError","onEmailChange","password","passwordError","onPasswordChange","marginTop","passwordConfirm","onPasswordConfirmChange","cancelClick","width","backgroundColor","color","marginRight","registrationButtonClick","instance","axios","create","withCredentials","baseURL","regAPI","post","initialState","newUser","setEmailErrorAC","setPasswordErrorAC","RegistrationPage","useSelector","state","registration","dispatch","useDispatch","setEmail","setPassword","setPasswordConfirm","test","length","then","response","console","log","data","payload","catch","message","setNewUserTC","authAPI","rememberMe","user","isFetching","isAuth","isFetchingAC","LoginPage","onChangeEmail","onChangePassword","wrap","linkPassword","to","onclickHandler","singUp","linkSingUp","LoginContainer","login","setRememberMe","finally","getAuthUserData","onChangeRememberMe","passwordRecoverAPI","from","setErrorAC","ForgotPassword","forgotPassword","text","link","PasswordRecoverContainer","passwordRecover","res","recoverTC","Content","contentContainer","path","exact","render","Header","headerContainer","Navigation","navigationContainer","linksList","App","app","content","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","newPassword","profile","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.31be1a4b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgotPassword\":\"ForgotPassword_forgotPassword__2MlHL\",\"wrapper\":\"ForgotPassword_wrapper__3bdcd\",\"inner\":\"ForgotPassword_inner__348n1\",\"form\":\"ForgotPassword_form__1KQ49\",\"text\":\"ForgotPassword_text__iVqTU\",\"btn\":\"ForgotPassword_btn__2aD94\",\"singUp\":\"ForgotPassword_singUp__305sf\",\"link\":\"ForgotPassword_link__3s4ac\",\"linkSingUp\":\"ForgotPassword_linkSingUp__3ybFi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Input_wrapper__sgEY7\",\"label\":\"Input_label__2TTl5\",\"input__item\":\"Input_input__item__3jSC1\",\"icon\":\"Input_icon__1E6-D\",\"span\":\"Input_span__2Jcmt\",\"checkbox\":\"Input_checkbox__2bqf6\",\"checkboxInput\":\"Input_checkboxInput__P_T-B\",\"checkboxLable\":\"Input_checkboxLable__3VCdo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Register_loginPage__3xiEa\",\"wrapper\":\"Register_wrapper__3fFdv\",\"inner\":\"Register_inner__35eRX\",\"form\":\"Register_form__1wCvI\",\"btn\":\"Register_btn__1F_93\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"App_content__INdBb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigationContainer\":\"Navigation_navigationContainer__3jxDD\",\"linksList\":\"Navigation_linksList__2vRX6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"Content_contentContainer__3_tBf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3YXc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__2s_vA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"TitleH2_title__1oyIA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Header_headerContainer__unZf7\"};","\r\nexport const routes = {\r\n    profile: \"/\",\r\n    login: \"/login\",\r\n    registration: \"/registration\",\r\n    notFound: \"/404\",\r\n    passwordRecover: \"/recover\",\r\n    newPassword: \"/newPassword/:token\",\r\n    presentation: \"/presentation\",\r\n}","import React from \"react\";\r\n\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n        <div>\r\n            NotFound\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\nexport const NewPassword = () => {\r\n    return (\r\n        <div>\r\n            New Password\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\nexport const Presentation = () => {\r\n    return (\r\n        <div>\r\n            Presentation\r\n        </div>\r\n    )\r\n}","import s from \"./Input.module.scss\";\r\nimport React, {ChangeEvent} from \"react\";\r\n\r\ntype InputPropsType = {\r\n    title?: string\r\n    type?: string\r\n    name?: string\r\n    value?: string\r\n    style?: {}\r\n    placeholder?: string\r\n    onChange?: (string: string) => void\r\n    id?: string\r\n    htmlFor?: string\r\n    error?: string | null\r\n    idName?: string\r\n    changeVision?: () => void\r\n}\r\n\r\nexport const Input = (props: InputPropsType) => {\r\n\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.onChange && props.onChange(e.currentTarget.value)\r\n    }\r\n\r\n    const ChangeTextVision = () => {\r\n        props.changeVision && props.changeVision()\r\n    }\r\n\r\n   /* function togglePassword() {\r\n\r\n        let input = document.getElementById('inputPassword');\r\n\r\n        if (input !== null) {\r\n            if (input.getAttribute('type') === 'password') {\r\n\r\n                input.setAttribute('type', 'text');\r\n            } else {\r\n\r\n                input.setAttribute('type', 'password');\r\n            }\r\n        }\r\n        return false;\r\n    }*/\r\n\r\n\r\n\r\n    return (\r\n        <form className={s.wrapper} style={props.style}>\r\n            <label className={s.label}>{props.title}</label>\r\n            <input className={s.input__item}\r\n                   type={props.type}\r\n                   name={props.name}\r\n                   placeholder={props.placeholder}\r\n                   value={props.value}\r\n                   onChange={onChangeHandler}\r\n                   id={props.idName}>\r\n            </input>\r\n\r\n            {/*Глазик чекбокс*/}\r\n            <div className={s.checkbox}>\r\n                <div>{props.idName === 'inputPassword'\r\n                    ? <><input className={s.checkboxInput} type=\"checkbox\" onChange={ChangeTextVision} id={props.id}/>\r\n                        <label className={s.checkboxLable} htmlFor={props.htmlFor}></label></>\r\n                    : null}</div>\r\n            </div>\r\n\r\n\r\n            <span className={s.span}>{props.error !== null ? <span>{props.error}</span> : null}</span>\r\n        </form>\r\n    )\r\n}","import s from \"./Button.module.scss\";\r\n\r\ntype ButtonPropsType = {\r\n\tstyle?: {}\r\n\tonClick: () => void\r\n\tvalue?: string\r\n}\r\n\r\nexport const Button = (props: ButtonPropsType) => {\r\n\r\n\tconst onClickHandler = () => {\r\n\t\tprops.onClick()\r\n\t}\r\n\r\n    return (\r\n        <button\r\n\t\t\tclassName={s.btn}\r\n\t\t\tstyle={props.style}\r\n\t\t\tonClick={onClickHandler}\r\n\t\t> \r\n\t\t\t{props.value}\r\n\t\t</button>\r\n    );\r\n}","import s from \"./Logo.module.scss\";\r\n\r\nexport const Logo = (props: any) => {\r\n    return (\r\n        <a className={s.logo} style={props.style} href=\"#\">It-incubator</a>                  \r\n    )\r\n}","import s from \"./TitleH2.module.scss\";\r\n\r\nexport const TitleH2 = (props: any) => {\r\n    return (\r\n        <h2 className={s.title} style={props.style}>{props.value}</h2>                 \r\n    )\r\n}","import s from \"./../../../../ui/pages/auth/register/Register.module.scss\";\r\nimport {Input} from \"../../../common/input/Input\";\r\nimport {Button} from \"../../../common/button/Button\";\r\nimport {Logo} from \"../../../common/logo/Logo\";\r\nimport {TitleH2} from \"../../../common/titleh2/TitleH2\";\r\nimport React, {useState} from \"react\";\r\n\r\ntype RegistrationPropsType = {\r\n    email: string\r\n    password: string\r\n    passwordConfirm: string\r\n    emailError: string | null\r\n    passwordError: string | null\r\n    onEmailChange: (email: string) => void\r\n    onPasswordChange: (password: string) => void\r\n    onPasswordConfirmChange: (passwordConfirm: string) => void\r\n    registrationButtonClick: () => void\r\n    cancelClick: () => void\r\n}\r\n\r\nexport const Registration = (props: RegistrationPropsType) => {\r\n\r\n    const emailChange = (value: string) => {\r\n        props.onEmailChange(value)\r\n    }\r\n\r\n    const passwordChange = (value: string) => {\r\n        props.onPasswordChange(value)\r\n    }\r\n\r\n    const passwordConfirmChange = (value: string) => {\r\n        props.onPasswordConfirmChange(value)\r\n    }\r\n\r\n\r\n    const [passwordType, setPasswordType] = useState<\"password\" | \"text\">(\"password\");\r\n    const [passwordConfirmType, setPasswordConfirmType] = useState<\"password\" | \"text\">(\"password\");\r\n\r\n    const togglePasswordType = () => {\r\n            if (passwordType === 'text') {\r\n                setPasswordType('password')\r\n            } else setPasswordType('text')\r\n    }\r\n\r\n    const togglePasswordConfirmType = () => {\r\n        if (passwordConfirmType === 'text') {\r\n            setPasswordConfirmType('password')\r\n        } else setPasswordConfirmType('text')\r\n    }\r\n\r\n    return (\r\n        <div className={s.loginPage}>\r\n            <div className={s.wrapper}>\r\n                <div className={s.inner}>\r\n                    <Logo/>\r\n                    <TitleH2/>\r\n                    <div className={s.form}>\r\n                        <Input title=\"Email\"\r\n                               type=\"email\"\r\n                               name=\"email\"\r\n                               value={props.email}\r\n                               error={props.emailError}\r\n                               onChange={emailChange}/> {/* Нужно убрать глазик (логика) */}\r\n\r\n                        <Input title=\"Password\"\r\n                               type={passwordType}\r\n                               name=\"password\"\r\n                               id= \"checkbox2\"\r\n                               htmlFor= \"checkbox2\"\r\n                               value={props.password}\r\n                               error={props.passwordError}\r\n                               onChange={passwordChange}\r\n                               changeVision={togglePasswordType}\r\n                               idName='inputPassword'\r\n                               style={{marginTop: \"25px\"}}/>\r\n\r\n                        <Input title=\"Confirm password\"\r\n                               type={passwordConfirmType}\r\n                               name=\"Confirm password\"\r\n                               idName='inputPassword'\r\n                               id= \"checkbox\"\r\n                               htmlFor= \"checkbox\"\r\n                               error={props.passwordError}\r\n                               value={props.passwordConfirm}\r\n                               onChange={passwordConfirmChange}\r\n                               changeVision={togglePasswordConfirmType}\r\n                               style={{marginTop: \"25px\"}}/>\r\n                    </div>\r\n                    <form className={s.btn}>\r\n                        <Button value=\"Cancel\"\r\n                                onClick={props.cancelClick}\r\n                                style={{\r\n                                    width: \"124px\",\r\n                                    backgroundColor: \"#CDCEF4\",\r\n                                    color: \"#21268F\",\r\n                                    marginRight: \"36px\"\r\n                                }}/>\r\n                        <Button value=\"Registration\"\r\n                                onClick={props.registrationButtonClick}\r\n                                style={{width: \"187px\"}}\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/'\r\n})\r\n\r\nexport const regAPI = {\r\n\r\n    registration(email: string, password: string) {\r\n        return instance.post('auth/register', {email, password})\r\n\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {regAPI} from \"../ui/content/components/registration/api/api-registr\";\r\n\r\nconst initialState = {\r\n    newUser: {},\r\n    emailError: null as null | string,\r\n    passwordError: null as null | string,\r\n}\r\n\r\ntype newUserType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET_NEW_USER\": {\r\n            return {\r\n                ...state,\r\n                newUser: action.payload\r\n            }\r\n        }\r\n        case \"SET-EMAIL-ERROR\":\r\n            return {...state,\r\n                emailError: action.error}\r\n        case \"SET-PASSWORD-ERROR\":\r\n            return {...state,\r\n                passwordError: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setNewUserAC = (payload: InitialStateType) => ({type: 'SET_NEW_USER', payload} as const)\r\nexport const setEmailErrorAC = (error: string | null) => ({type: \"SET-EMAIL-ERROR\", error} as const)\r\nexport const setPasswordErrorAC = (error: string | null) => ({type: \"SET-PASSWORD-ERROR\", error} as const)\r\n\r\nexport const setNewUserTC = (email: string, password: string) => (dispatch: Dispatch) => {\r\n    regAPI.registration(email, password)\r\n        .then(response => {\r\n            console.log(response.data)\r\n            dispatch(setNewUserAC(response.data))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response ? e.response.data.error : (e.message + \", more details in the console\")\r\n            dispatch(setEmailErrorAC(error))\r\n        })\r\n}\r\n\r\nexport type SetNewUserType = ReturnType<typeof setNewUserAC>;\r\n\r\ntype ActionType = SetNewUserType\r\n                | ReturnType<typeof setEmailErrorAC>\r\n                | ReturnType<typeof setPasswordErrorAC>;","import {Registration} from \"./Registration\";\r\nimport {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setNewUserTC} from \"../../../../store/registration-reducer\";\r\nimport {setEmailErrorAC, setPasswordErrorAC} from \"../../../../store/registration-reducer\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\n\r\n\r\nexport const RegistrationPage = () => {\r\n    const emailError = useSelector<AppRootStateType, string | null>((state) => state.registration.emailError)\r\n    const passwordError = useSelector<AppRootStateType, string | null>((state) => state.registration.passwordError)\r\n    const dispatch = useDispatch()\r\n\r\n    let [email, setEmail] = useState<string>('nya-admin@nya.nya');\r\n    let [password, setPassword] = useState<string>('1qazxcvBG');\r\n    let [passwordConfirm, setPasswordConfirm] = useState<string>('1qazxcvBG');\r\n\r\n    const onEmailChange = (email: string) => {\r\n        setEmail(email)\r\n        if (emailError !== null) {\r\n            dispatch(setEmailErrorAC(null))\r\n        }\r\n    }\r\n    const onPasswordChange = (password: string) => {\r\n        setPassword(password)\r\n        if (passwordError !== null) {\r\n            dispatch(setPasswordErrorAC(null))\r\n        }\r\n    }\r\n    const onPasswordConfirm = (passwordConfirm: string) => {\r\n        setPasswordConfirm(passwordConfirm)\r\n        if (passwordError !== null) {\r\n            dispatch(setPasswordErrorAC(null))\r\n        }\r\n    }\r\n\r\n    const registrationButtonClick = () => {\r\n        if (email === \"\") {\r\n            dispatch(setEmailErrorAC('Required'))\r\n        } else if (password === \"\") {\r\n            dispatch(setPasswordErrorAC('Required'))\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            dispatch(setEmailErrorAC('Invalid email address'))\r\n        } else if (password.length < 8) {\r\n            dispatch(setPasswordErrorAC('Password must be more 7 symbols'))\r\n        } else if (password !== passwordConfirm) {\r\n            dispatch(setPasswordErrorAC('Password & confirm password fields are not equally'));\r\n            setPassword('');\r\n            setPasswordConfirm('');\r\n        } else {\r\n            dispatch(setNewUserTC(email, password));\r\n            setEmail('');\r\n            setPassword('');\r\n            setPasswordConfirm('');\r\n        }\r\n    }\r\n\r\n    const cancelClick = () => {\r\n        setEmail('');\r\n        setPassword('');\r\n        setPasswordConfirm('');\r\n    }\r\n\r\n    return <Registration email={email}\r\n                         password={password}\r\n                         emailError={emailError}\r\n                         passwordError={passwordError}\r\n                         passwordConfirm={passwordConfirm}\r\n                         onEmailChange={onEmailChange}\r\n                         onPasswordChange={onPasswordChange}\r\n                         onPasswordConfirmChange={onPasswordConfirm}\r\n                         registrationButtonClick={registrationButtonClick}\r\n                         cancelClick={cancelClick}\r\n    />\r\n\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/'\r\n})\r\n\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.post(`auth/me`)\r\n    },\r\n\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post('auth/login', {email, password, rememberMe})\r\n\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../ui/pages/auth/loginPage/api-login\";\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    user: {},\r\n    isFetching: false,\r\n    emailError: null as null | string,\r\n    passwordError: null as null | string,\r\n    isAuth: false\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_USER_DATA':\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                isAuth: true\r\n            }\r\n        case \"IS-FETCHING\":\r\n            return {...state,\r\n                isFetching: action.isFetching}\r\n        case \"SET-EMAIL-ERROR\":\r\n            return {...state,\r\n                emailError: action.error}\r\n        case \"SET-PASSWORD-ERROR\":\r\n            return {...state,\r\n                passwordError: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserDataAC = (payload: InitialStateType) => ({type: 'SET_USER_DATA', payload}) as const\r\nexport const isFetchingAC = (isFetching: boolean) => ({type: \"IS-FETCHING\", isFetching} as const)\r\nexport const setEmailErrorAC = (error: string | null) => ({type: \"SET-EMAIL-ERROR\", error} as const)\r\nexport const setPasswordErrorAC = (error: string | null) => ({type: \"SET-PASSWORD-ERROR\", error} as const)\r\n\r\n\r\nexport const getAuthUserData = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\r\n    dispatch(isFetchingAC(true))\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(response => {\r\n                console.log(response.data)\r\n                dispatch(setAuthUserDataAC(response.data))\r\n            }\r\n        ).catch((e) => {\r\n        const error = e.response ? e.response.data.error : (e.message + \", more details in the console\")\r\n        console.log(error)\r\n        dispatch(setEmailErrorAC(error))\r\n    })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\n\r\nexport type ActionsType =\r\n    |  ReturnType<typeof setAuthUserDataAC>\r\n    |  ReturnType<typeof setEmailErrorAC>\r\n    |  ReturnType<typeof setPasswordErrorAC>\r\n    |  ReturnType<typeof isFetchingAC>\r\n\r\n\r\n\r\n","import s from \"./LoginPage.module.scss\";\r\nimport {Input} from \"../../../common/input/Input\";\r\nimport {Button} from \"../../../common/button/Button\";\r\nimport {Logo} from \"../../../common/logo/Logo\";\r\nimport {TitleH2} from \"../../../common/titleh2/TitleH2\";\r\nimport React, {ChangeEvent, useState} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {routes} from \"../../../../router/routes\";\r\n\r\ntype LoginPagePropsType = {\r\n    email: string\r\n    emailError: string | null\r\n    passwordError: string | null\r\n    password: string\r\n    rememberMe: boolean\r\n    onclickHandler: () => void\r\n    onChangeEmail: (email: string) => void\r\n    onChangePassword: (password: string)=> void\r\n    onChangeRememberMe: (rememberMe: boolean) => void\r\n\r\n}\r\n\r\nexport const LoginPage = (props:LoginPagePropsType) => {\r\n\r\n    const changeEmail = (value: string) => {\r\n        props.onChangeEmail(value)\r\n    }\r\n    const changePassword = (value: string) => {\r\n        props.onChangePassword(value)\r\n    }\r\n    const changeRememberMe = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.onChangeRememberMe(e.currentTarget.checked)\r\n    }\r\n\r\n    const [passwordType, setPasswordType] = useState<\"password\" | \"text\">(\"password\");\r\n\r\n    const togglePasswordType = () => {\r\n        if (passwordType === 'text') {\r\n            setPasswordType('password')\r\n        } else setPasswordType('text')\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.loginPage}>\r\n            <div className={s.wrapper}>\r\n                <div className={s.inner}>\r\n                    <Logo/>\r\n                    <TitleH2 value= \"Sign In\"/>\r\n                    <div className={s.form}>\r\n                        <Input title=\"Email\"\r\n                               type= \"email\"\r\n                               name=\"email\"\r\n                               error={props.emailError}\r\n                               placeholder={'email'}\r\n                               value={props.email}\r\n                               onChange={changeEmail}\r\n                               style= {{marginTop:\"25px\"}}\r\n                               idName={'inputEmail'}\r\n                        />\r\n\r\n                        {/* Нужно убрать глазик (логика) */}\r\n                        <Input title=\"Password\"\r\n                               // type= \"password\"\r\n                               type= {passwordType}\r\n                               name=\"password\"\r\n                               error={props.passwordError}\r\n                               placeholder={'password'}\r\n                               value={props.password}\r\n                               onChange={changePassword}\r\n                               style= {{marginTop:\"25px\"}}\r\n                               idName={'inputPassword'}\r\n                               id= \"checkbox2\"\r\n                               htmlFor= \"checkbox2\"\r\n                               changeVision={togglePasswordType}\r\n                        />\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className={s.wrap}>\r\n                        <div className={s.checkbox}>\r\n\r\n                            <input className={s.checkboxInput} type=\"checkbox\" id=\"checkbox1\"\r\n                            />\r\n                            <label className={s.checkboxLable} htmlFor=\"checkbox1\">Rememder me</label>\r\n                        </div>\r\n                        <NavLink className={s.linkPassword} to={routes.passwordRecover}>Forgot Password</NavLink>\r\n                        {/*<a className={s.linkPassword} href=\"\">Forgot Password</a>*/}\r\n                    </div>\r\n                    <div className={s.btn}>\r\n                        <Button value=\"Login\"\r\n                                onClick={props.onclickHandler}\r\n\r\n                        />\r\n                    </div>\r\n                    <div className={s.singUp}>\r\n                        <label className={s.span} >Don’t have an account?</label>\r\n                        <NavLink className={s.linkSingUp} to={routes.registration}>Sign Up</NavLink>\r\n                        {/*<a className={s.linkSingUp} href=\"#\">Sign Up</a>*/}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useDispatch, useSelector} from \"react-redux\"\r\nimport React, {useState} from \"react\";\r\nimport {getAuthUserData, setEmailErrorAC, setPasswordErrorAC} from \"../../../../store/login-reducer\";\r\nimport {LoginPage} from \"./LoginPage\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const LoginContainer = () => {\r\n\r\n    const isFetching = useSelector<AppRootStateType, boolean>((state) => state.login.isFetching)\r\n    const emailError = useSelector<AppRootStateType, string | null>((state) => state.login.emailError)\r\n    const passwordError = useSelector<AppRootStateType, string | null>((state) => state.login.passwordError)\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    let [email, setEmail] = useState<string>('nya-admin@nya.nya')\r\n    let [password, setPassword] = useState<string>('1qazxcvBG')\r\n    let [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const onChangeEmail = (email: string) => {\r\n        setEmail(email)\r\n        if (emailError !== null) {\r\n            dispatch(setEmailErrorAC(null))\r\n        }\r\n    }\r\n    const onChangePassword = (password: string) => {\r\n        setPassword(password)\r\n        if (passwordError !== null) {\r\n            dispatch(setPasswordErrorAC(null))\r\n        }\r\n    }\r\n    const onChangeRememberMe = (rememberMe: boolean) => {\r\n        setRememberMe(!rememberMe)\r\n    }\r\n\r\n    let onclickHandler = () => {\r\n        if (email === \"\") {\r\n            dispatch(setEmailErrorAC('Required'))\r\n        } else if (password === \"\") {\r\n            dispatch(setPasswordErrorAC('Required'))\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            dispatch(setEmailErrorAC('Invalid email address'))\r\n        } else if (password.length < 8) {\r\n            dispatch(setPasswordErrorAC('Password must be more 7 symbols'))\r\n        } else {\r\n            dispatch(getAuthUserData(email, password, rememberMe))\r\n            setEmail('')\r\n            setPassword('')\r\n            setRememberMe(false)\r\n        }\r\n    }\r\n\r\n    if (isFetching) {\r\n        return <div>Loading...</div>\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <LoginPage email={email}\r\n                      emailError={emailError}\r\n                      passwordError={passwordError}\r\n                      password={password}\r\n                      rememberMe={rememberMe}\r\n                      onclickHandler={onclickHandler}\r\n                      onChangeEmail={onChangeEmail}\r\n                      onChangePassword={onChangePassword}\r\n                      onChangeRememberMe={onChangeRememberMe}/>\r\n\r\n\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0'\r\n})\r\n\r\nconst from = 'shamashov87@mail.ru';\r\nconst message = `<div>password recover link: <a href='https://pavelmalta.github.io/friday-project/#/newPassword/$token$'>Link</a></div>`\r\n\r\nexport const passwordRecoverAPI = {\r\n    recover(email: string) {\r\n        return instance.post('auth/forgot', {email, from, message})\r\n    }\r\n}","import {Dispatch} from \"redux\"\r\nimport {passwordRecoverAPI} from \"../ui/content/components/passwordRecover/api-passwordRecover\";\r\n\r\nconst initialState = {\r\n    isFetching: false,\r\n    error: null as null | string\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const passwordRecoverReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"IS-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const isFetchingAC = (isFetching: boolean) => ({type: \"IS-FETCHING\", isFetching} as const)\r\nexport const setErrorAC = (error: string | null) => ({type: \"SET-ERROR\", error} as const)\r\n\r\nexport const recoverTC = (email: string) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(isFetchingAC(true))\r\n    passwordRecoverAPI.recover(email)\r\n        .then(res => {\r\n            console.log(res.data)\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response ? e.response.data.error : (e.message + \", more details in the console\")\r\n            dispatch(setErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\ntype ActionType = ReturnType<typeof isFetchingAC> | ReturnType<typeof setErrorAC>","import s from \"./ForgotPassword.module.scss\";\r\nimport {Input} from \"../../../../common/input/Input\";\r\nimport {Button} from \"../../../../common/button/Button\";\r\nimport {Logo} from \"../../../../common/logo/Logo\";\r\nimport {TitleH2} from \"../../../../common/titleh2/TitleH2\";\r\n\r\nexport type ForgotPasswordPropsType = {\r\n    email: string\r\n    error: string | null\r\n    onChangeEmail: (value: string) => void\r\n    onclickHandler: () => void\r\n    isFetching: boolean\r\n}\r\n\r\nexport const ForgotPassword = (props: ForgotPasswordPropsType) => {\r\n    return (\r\n        <div className={s.forgotPassword}>\r\n            <div className={s.wrapper}>\r\n                <div className={s.inner}>\r\n                    <Logo/>\r\n                    <TitleH2 value=\"Sign In\"/>\r\n                    <div className={s.form}>\r\n                        <Input title=\"Email\"\r\n                               type=\"email\"\r\n                               name=\"email\"\r\n                               value={props.email}\r\n                               onChange={props.onChangeEmail}\r\n                               error={props.error}\r\n                        /> {/*Нужно убрать глазик (логика)*/}\r\n                    </div>\r\n                    <span className={s.text}>Enter your email address and we will send you further instructions </span>\r\n                    <div className={s.btn}>\r\n                        {props.isFetching\r\n                            ? <span>Loading...</span>\r\n                            : <Button value=\"Send Instructions\"\r\n                                      onClick={props.onclickHandler}\r\n                            />}\r\n                    </div>\r\n                    <div className={s.singUp}>\r\n                        <a className={s.link} href=\"#\">Did you remember your password?</a>\r\n                        <a className={s.linkSingUp} href=\"#\">Try logging in</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport {recoverTC, setErrorAC} from \"../../../../store/passwordRecover-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport {ForgotPassword} from \"./forgotPassword/ForgotPassword\";\r\n\r\n\r\nexport const PasswordRecoverContainer = () => {\r\n    const [email, setEmail] = useState(\"shamashov87@mail.ru\")\r\n\r\n    const isFetching = useSelector<AppRootStateType, boolean>((state) => state.passwordRecover.isFetching)\r\n    const error = useSelector<AppRootStateType, string | null>((state) => state.passwordRecover.error)\r\n    const dispatch = useDispatch();\r\n\r\n    const onChangeEmail = (value: string) => {\r\n        setEmail(value)\r\n        if (error !== null) {\r\n            dispatch(setErrorAC(null))\r\n        }\r\n    }\r\n\r\n    const onclickHandler = () => {\r\n        if (email === \"\") {\r\n            dispatch(setErrorAC('Required'))\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            dispatch(setErrorAC('Invalid email address'))\r\n        } else {\r\n            dispatch(recoverTC(email))\r\n            setEmail(\"\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ForgotPassword email={email}\r\n                         error={error}\r\n                         onChangeEmail={onChangeEmail}\r\n                         onclickHandler={onclickHandler}\r\n                        isFetching={isFetching}\r\n        />\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport s from \"./Content.module.css\"\r\nimport {routes} from \"../../router/routes\";\r\nimport {Profile} from \"./components/profile/Profile\";\r\nimport {NotFound} from \"./components/notFound/NotFound\";\r\nimport {NewPassword} from \"./components/newPassword/NewPassword\";\r\nimport {Presentation} from \"./components/presentation/Presentation\";\r\nimport {RegistrationPage} from \"./components/registration/RegistrationPage\";\r\nimport {LoginContainer} from \"./components/login/LoginContainer\";\r\nimport {PasswordRecoverContainer} from \"./components/passwordRecover/PasswordRecoverContainer\";\r\n\r\n\r\nexport const Content = () => {\r\n    return (\r\n        <div className={s.contentContainer}>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Redirect to={routes.login}/>}/>\r\n                <Route exact path={routes.login} render={() => <LoginContainer/>} />\r\n                <Route exact path={routes.registration} render={() => <RegistrationPage/>} />\r\n                <Route exact path={routes.profile} render={() => <Profile/>} />\r\n                <Route exact path={routes.passwordRecover} render={() => <PasswordRecoverContainer/>} />\r\n                <Route exact path={routes.newPassword} render={() => <NewPassword/>} />\r\n                <Route exact path={routes.presentation} render={() => <Presentation/>} />\r\n                <Route render={() => <NotFound/>} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./Header.module.css\"\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={s.headerContainer}>\r\n           <button>Login</button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Navigation.module.css\"\r\nimport {routes} from \"../../router/routes\";\r\n\r\n\r\nexport const Navigation = () => {\r\n    return (\r\n        <div className={s.navigationContainer}>\r\n            <h2>Navigation</h2>\r\n            <div className={s.linksList}>\r\n                <NavLink to={routes.login}>Login</NavLink>\r\n                <NavLink to={routes.registration}>Registration</NavLink>\r\n                <NavLink to={routes.profile}>Profile</NavLink>\r\n                <NavLink to={routes.notFound}>404</NavLink>\r\n                <NavLink to={routes.passwordRecover}>Password Recover</NavLink>\r\n                <NavLink to={routes.newPassword}>New Password</NavLink>\r\n                <NavLink to={routes.presentation}>Presentation</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './App.module.scss';\r\nimport { Content } from './main/ui/content/Content';\r\nimport { Header } from './main/ui/header/Header';\r\nimport { Navigation } from './main/ui/navigation/Navigation';\r\nimport {RegistrationPage} from \"./main/ui/content/components/registration/RegistrationPage\";\r\n\r\n// Прошу не удалять я с этим работаю (Люба;))\r\nimport { LoginPage } from './main/ui/pages/auth/loginPage/LoginPage';\r\nimport { Register } from './main/ui/pages/auth/register/Register';\r\nimport { ForgotPassword } from './main/ui/content/components/passwordRecover/forgotPassword/ForgotPassword';\r\nimport { LoginPageTest } from './main/ui/pages/auth/loginPageTest/LoginPageTest';\r\nimport { CheckEmail } from './main/ui/pages/auth/сheckEmail/CheckEmail';\r\nimport { CreateNewPassword } from './main/ui/pages/auth/createNewPassword/CreateNewPassword';\r\nimport { Head } from './main/ui/common/head/Head';\r\n\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.app}>\r\n\r\n            {/* Осталось от фронта */}\r\n            <Header/>\r\n            <Navigation/>\r\n\r\n\r\n            {/* Тут подключены сверстанные странички */}\r\n            {/* <Head/> */}\r\n            <div className={s.content}>\r\n            <Content/>\r\n\r\n\r\n            {/* <LoginPage/> */}\r\n            {/* <Register/> */}\r\n            {/* <ForgotPassword/> */}\r\n            {/* <CheckEmail/> */}\r\n            {/* <CreateNewPassword/> */}\r\n\r\n\r\n\r\n            {/* <LoginPageTest/>  Material UI*/}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nconst initialState = {\r\n\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType = {\r\n    type: string\r\n}","\r\nconst initialState = {\r\n\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const newPasswordReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType = {\r\n    type: string\r\n}","\r\nconst initialState = {\r\n\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType = {\r\n    type: string\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from \"./app-reducer\";\r\nimport {loginReducer} from \"./login-reducer\";\r\nimport {newPasswordReducer} from \"./newPassword-reducer\";\r\nimport {passwordRecoverReducer} from \"./passwordRecover-reducer\";\r\nimport { profileReducer } from \"./profile-reducer\";\r\nimport {registrationReducer} from \"./registration-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login: loginReducer,\r\n    newPassword: newPasswordReducer,\r\n    passwordRecover: passwordRecoverReducer,\r\n    profile: profileReducer,\r\n    registration: registrationReducer\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./main/store/store\";\r\n\r\nReactDOM.render(\r\n\r\n\r\n            <HashRouter>\r\n                <Provider store={store}>\r\n                <App/>\r\n                </Provider>\r\n            </HashRouter>\r\n\r\n  ,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"LoginPage_loginPage__qEFAn\",\"wrapper\":\"LoginPage_wrapper__-2biH\",\"inner\":\"LoginPage_inner__2clEu\",\"form\":\"LoginPage_form__3-rTG\",\"wrap\":\"LoginPage_wrap__1xLgl\",\"checkbox\":\"LoginPage_checkbox__3bbTY\",\"checkboxInput\":\"LoginPage_checkboxInput__3OAOa\",\"checkboxLable\":\"LoginPage_checkboxLable__3Udfu\",\"linkPassword\":\"LoginPage_linkPassword__209Q3\",\"btn\":\"LoginPage_btn__2FN60\",\"singUp\":\"LoginPage_singUp__118j5\",\"span\":\"LoginPage_span__2Cd-O\",\"linkSingUp\":\"LoginPage_linkSingUp__2EW2I\"};"],"sourceRoot":""}