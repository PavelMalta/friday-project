{"version":3,"sources":["main/router/routes.ts","main/ui/content/components/profile/Profile.tsx","main/ui/content/components/newPassword/NewPassword.tsx","main/ui/content/components/presentation/Presentation.tsx","main/ui/common/input/Input.tsx","main/ui/common/button/Button.tsx","main/ui/common/logo/Logo.tsx","main/ui/common/titleh2/TitleH2.tsx","main/ui/content/components/registration/Registration.tsx","main/ui/content/components/registration/api/api-registr.ts","main/store/registration-reducer.ts","main/ui/content/components/registration/RegistrationPage.tsx","main/ui/content/components/login/api-login.ts","main/store/login-reducer.ts","main/ui/content/components/login/LoginPage.tsx","main/ui/content/components/login/LoginContainer.tsx","main/ui/content/components/passwordRecover/api-passwordRecover.ts","main/store/passwordRecover-reducer.ts","main/ui/content/components/passwordRecover/forgotPassword/ForgotPassword.tsx","main/ui/content/components/passwordRecover/PasswordRecoverContainer.tsx","main/ui/content/components/packs/api-packs.ts","main/store/packs-reducer.ts","main/ui/content/components/cards/api-cards.ts","main/store/cards-reducer.ts","main/ui/common/dropdown/Dropdown.tsx","main/ui/common/pagination/Pagination.tsx","main/ui/common/rangeSlider/RangeSlider.tsx","main/ui/common/search/Search.tsx","main/ui/common/sideButton/SideButton.tsx","main/ui/common/actions/Actions.tsx","main/ui/common/string/String.tsx","main/ui/content/components/packs/packsList/PacksList.tsx","main/ui/content/components/packs/Packs.tsx","main/ui/content/components/cards/cardsTable/CardsTable.tsx","main/ui/content/components/cards/Cards.tsx","main/ui/pages/error/Error.tsx","main/ui/content/Content.tsx","main/ui/header/Header.tsx","main/ui/assets/images/head/packList.svg","main/ui/assets/images/head/profole.svg","main/ui/common/head/tab/Tab.tsx","main/ui/common/head/Head.tsx","App.tsx","reportWebVitals.ts","main/store/app-reducer.ts","main/store/newPassword-reducer.ts","main/store/profile-reducer.ts","main/store/store.ts","index.tsx","main/ui/content/components/packs/packsList/PacksList.module.scss","main/ui/content/components/login/LoginPage.module.scss","main/ui/content/components/passwordRecover/forgotPassword/ForgotPassword.module.scss","main/ui/common/input/Input.module.scss","main/ui/common/head/tab/Tab.module.scss","main/ui/pages/auth/register/Register.module.scss","main/ui/common/dropdown/Dropdown.module.scss","main/ui/content/components/cards/cardsTable/CardsTable.module.css","main/ui/pages/error/Error.module.scss","main/ui/common/sideButton/SideButton.module.scss","App.module.scss","main/ui/common/search/Search.module.scss","main/ui/header/Header.module.css","main/ui/common/head/Head.module.scss","main/ui/content/Content.module.css","main/ui/common/button/Button.module.scss","main/ui/common/logo/Logo.module.scss","main/ui/common/titleh2/TitleH2.module.scss","main/ui/common/actions/Actions.module.scss"],"names":["routes","Profile","NewPassword","Presentation","Input","props","className","s","wrapper","style","label","title","input__item","type","name","placeholder","value","onChange","e","currentTarget","id","idName","checkbox","checkboxInput","changeVision","checkboxLable","htmlFor","span","error","Button","btn","onClick","Logo","logo","href","TitleH2","Registration","useState","passwordType","setPasswordType","passwordConfirmType","setPasswordConfirmType","loginPage","inner","form","email","emailError","onEmailChange","password","passwordError","onPasswordChange","marginTop","passwordConfirm","onPasswordConfirmChange","cancelClick","width","backgroundColor","color","marginRight","registrationButtonClick","instance","axios","create","withCredentials","baseURL","regAPI","post","initialState","newUser","setEmailErrorAC","setPasswordErrorAC","RegistrationPage","useSelector","state","registration","dispatch","useDispatch","setEmail","setPassword","setPasswordConfirm","test","length","then","response","console","log","data","payload","catch","message","setNewUserTC","authAPI","rememberMe","delete","user","isFetching","isAuth","userID","setAuthUserDataAC","isFetchingAC","setUserID","LoginPage","onChangeEmail","onChangePassword","wrap","linkPassword","to","onclickHandler","singUp","linkSingUp","LoginContainer","login","setRememberMe","_id","finally","getAuthUserData","onChangeRememberMe","passwordRecoverAPI","from","setErrorAC","ForgotPassword","forgotPassword","text","link","PasswordRecoverContainer","passwordRecover","res","recoverTC","packsAPI","packQueryParams","get","params","addPackPayload","cardsPack","idPack","updatePackPayload","put","packsTableData","cardPacks","cardPacksTotalCount","maxCardsCount","minCardsCount","page","pageCount","getPacksTC","cardsAPI","cardQueryParams","newCardPayload","card","cardID","updateCardPayload","cardsTableData","cards","cardsTotalCount","maxGrade","minGrade","cardsPackId","getCardsTC","Dropdown","dropdown","dropdownSelect","item","useStyles","makeStyles","theme","createStyles","root","PaginationRounded","classes","Pagination","count","shape","rail","height","track","thumb","boxSizing","border","valuetext","RangeSlider","React","setValue","Slider","event","newValue","valueLabelDisplay","aria-labelledby","getAriaValueText","Search","search","input","SideButton","sideButton","btnActive","Actions","packId","String","value1","value2","value3","value4","packUserId","userId","deletePack","updatePack","learnPack","PacksList","packsData","packs","packsList","aside","titleH3","rangeSlider","content","textAlign","padding","marginLeft","addNewPack","item1","item2","item3","item4","item5","map","cardsCount","date","updated","Date","toLocaleDateString","day","month","year","user_name","user_id","pagination","Packs","useEffect","PackID","cardsPack_id","CardsTable","cardsData","row","question","answer","grade","deleteCard","updateCard","v1","Cards","addCardTC","deleteCardTC","updateCardTC","Error","Content","contentContainer","path","exact","render","Header","headerContainer","navLinkContainer","Tab","icon","src","List","alt","Head","head","container","justifyContent","App","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","newPassword","profile","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.21301782.chunk.js","sourcesContent":["\r\nexport const routes = {\r\n    profile: \"/\",\r\n    login: \"/login\",\r\n    registration: \"/registration\",\r\n    notFound: \"/404\",\r\n    passwordRecover: \"/recover\",\r\n    newPassword: \"/newPassword/:token\",\r\n    presentation: \"/presentation\",\r\n    packs: \"/packs\",\r\n    cards: \"/cards\"\r\n}","import React from \"react\";\r\n\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\nexport const NewPassword = () => {\r\n    return (\r\n        <div>\r\n            New Password\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\nexport const Presentation = () => {\r\n    return (\r\n        <div>\r\n            Presentation\r\n        </div>\r\n    )\r\n}","import s from \"./Input.module.scss\";\r\nimport React, {ChangeEvent} from \"react\";\r\n\r\ntype InputPropsType = {\r\n    title?: string\r\n    type?: string\r\n    name?: string\r\n    value?: string\r\n    style?: {}\r\n    placeholder?: string\r\n    onChange?: (string: string) => void\r\n    id?: string\r\n    htmlFor?: string\r\n    error?: string | null\r\n    idName?: string\r\n    changeVision?: () => void\r\n}\r\n\r\nexport const Input = (props: InputPropsType) => {\r\n\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.onChange && props.onChange(e.currentTarget.value)\r\n    }\r\n\r\n    const ChangeTextVision = () => {\r\n        props.changeVision && props.changeVision()\r\n    }\r\n\r\n   /* function togglePassword() {\r\n\r\n        let input = document.getElementById('inputPassword');\r\n\r\n        if (input !== null) {\r\n            if (input.getAttribute('type') === 'password') {\r\n\r\n                input.setAttribute('type', 'text');\r\n            } else {\r\n\r\n                input.setAttribute('type', 'password');\r\n            }\r\n        }\r\n        return false;\r\n    }*/\r\n\r\n\r\n\r\n    return (\r\n        <form className={s.wrapper} style={props.style}>\r\n            <label className={s.label}>{props.title}</label>\r\n            <input className={s.input__item}\r\n                   type={props.type}\r\n                   name={props.name}\r\n                   placeholder={props.placeholder}\r\n                   value={props.value}\r\n                   onChange={onChangeHandler}\r\n                   id={props.idName}>\r\n            </input>\r\n\r\n            {/*Глазик чекбокс*/}\r\n            <div className={s.checkbox}>\r\n                <div>{props.idName === 'inputPassword'\r\n                    ? <><input className={s.checkboxInput} type=\"checkbox\" onChange={ChangeTextVision} id={props.id}/>\r\n                        <label className={s.checkboxLable} htmlFor={props.htmlFor}></label></>\r\n                    : null}</div>\r\n            </div>\r\n\r\n\r\n            <span className={s.span}>{props.error !== null ? <span>{props.error}</span> : null}</span>\r\n        </form>\r\n    )\r\n}","import s from \"./Button.module.scss\";\r\n\r\ntype ButtonPropsType = {\r\n\tstyle?: {}\r\n\tonClick: () => void\r\n\tvalue?: string\r\n}\r\n\r\nexport const Button = (props: ButtonPropsType) => {\r\n\r\n\tconst onClickHandler = () => {\r\n\t\tprops.onClick()\r\n\t}\r\n\r\n    return (\r\n        <button\r\n\t\t\tclassName={s.btn}\r\n\t\t\tstyle={props.style}\r\n\t\t\tonClick={onClickHandler}\r\n\t\t> \r\n\t\t\t{props.value}\r\n\t\t</button>\r\n    );\r\n}","import s from \"./Logo.module.scss\";\r\n\r\nexport const Logo = (props: any) => {\r\n    return (\r\n        <a className={s.logo} style={props.style} href=\"#\">It-incubator</a>                  \r\n    )\r\n}","import s from \"./TitleH2.module.scss\";\r\n\r\nexport const TitleH2 = (props: any) => {\r\n    return (\r\n        <h2 className={s.title} style={props.style}>{props.value}</h2>                 \r\n    )\r\n}","import s from \"./../../../../ui/pages/auth/register/Register.module.scss\";\r\nimport {Input} from \"../../../common/input/Input\";\r\nimport {Button} from \"../../../common/button/Button\";\r\nimport {Logo} from \"../../../common/logo/Logo\";\r\nimport {TitleH2} from \"../../../common/titleh2/TitleH2\";\r\nimport React, {useState} from \"react\";\r\n\r\ntype RegistrationPropsType = {\r\n    email: string\r\n    password: string\r\n    passwordConfirm: string\r\n    emailError: string | null\r\n    passwordError: string | null\r\n    onEmailChange: (email: string) => void\r\n    onPasswordChange: (password: string) => void\r\n    onPasswordConfirmChange: (passwordConfirm: string) => void\r\n    registrationButtonClick: () => void\r\n    cancelClick: () => void\r\n}\r\n\r\nexport const Registration = (props: RegistrationPropsType) => {\r\n\r\n    const emailChange = (value: string) => {\r\n        props.onEmailChange(value)\r\n    }\r\n\r\n    const passwordChange = (value: string) => {\r\n        props.onPasswordChange(value)\r\n    }\r\n\r\n    const passwordConfirmChange = (value: string) => {\r\n        props.onPasswordConfirmChange(value)\r\n    }\r\n\r\n\r\n    const [passwordType, setPasswordType] = useState<\"password\" | \"text\">(\"password\");\r\n    const [passwordConfirmType, setPasswordConfirmType] = useState<\"password\" | \"text\">(\"password\");\r\n\r\n    const togglePasswordType = () => {\r\n            if (passwordType === 'text') {\r\n                setPasswordType('password')\r\n            } else setPasswordType('text')\r\n    }\r\n\r\n    const togglePasswordConfirmType = () => {\r\n        if (passwordConfirmType === 'text') {\r\n            setPasswordConfirmType('password')\r\n        } else setPasswordConfirmType('text')\r\n    }\r\n\r\n    return (\r\n        <div className={s.loginPage}>\r\n            <div className={s.wrapper}>\r\n                <div className={s.inner}>\r\n                    <Logo/>\r\n                    <TitleH2/>\r\n                    <div className={s.form}>\r\n                        <Input title=\"Email\"\r\n                               type=\"email\"\r\n                               name=\"email\"\r\n                               value={props.email}\r\n                               error={props.emailError}\r\n                               onChange={emailChange}/> {/* Нужно убрать глазик (логика) */}\r\n\r\n                        <Input title=\"Password\"\r\n                               type={passwordType}\r\n                               name=\"password\"\r\n                               id= \"checkbox2\"\r\n                               htmlFor= \"checkbox2\"\r\n                               value={props.password}\r\n                               error={props.passwordError}\r\n                               onChange={passwordChange}\r\n                               changeVision={togglePasswordType}\r\n                               idName='inputPassword'\r\n                               style={{marginTop: \"25px\"}}/>\r\n\r\n                        <Input title=\"Confirm password\"\r\n                               type={passwordConfirmType}\r\n                               name=\"Confirm password\"\r\n                               idName='inputPassword'\r\n                               id= \"checkbox\"\r\n                               htmlFor= \"checkbox\"\r\n                               error={props.passwordError}\r\n                               value={props.passwordConfirm}\r\n                               onChange={passwordConfirmChange}\r\n                               changeVision={togglePasswordConfirmType}\r\n                               style={{marginTop: \"25px\"}}/>\r\n                    </div>\r\n                    <form className={s.btn}>\r\n                        <Button value=\"Cancel\"\r\n                                onClick={props.cancelClick}\r\n                                style={{\r\n                                    width: \"124px\",\r\n                                    backgroundColor: \"#CDCEF4\",\r\n                                    color: \"#21268F\",\r\n                                    marginRight: \"36px\"\r\n                                }}/>\r\n                        <Button value=\"Registration\"\r\n                                onClick={props.registrationButtonClick}\r\n                                style={{width: \"187px\"}}\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/'\r\n})\r\n\r\nexport const regAPI = {\r\n\r\n    registration(email: string, password: string) {\r\n        return instance.post('auth/register', {email, password})\r\n\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {regAPI} from \"../ui/content/components/registration/api/api-registr\";\r\n\r\nconst initialState = {\r\n    newUser: {},\r\n    emailError: null as null | string,\r\n    passwordError: null as null | string,\r\n}\r\n\r\ntype newUserType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET_NEW_USER\": {\r\n            return {\r\n                ...state,\r\n                newUser: action.payload\r\n            }\r\n        }\r\n        case \"SET-EMAIL-ERROR\":\r\n            return {...state,\r\n                emailError: action.error}\r\n        case \"SET-PASSWORD-ERROR\":\r\n            return {...state,\r\n                passwordError: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setNewUserAC = (payload: InitialStateType) => ({type: 'SET_NEW_USER', payload} as const)\r\nexport const setEmailErrorAC = (error: string | null) => ({type: \"SET-EMAIL-ERROR\", error} as const)\r\nexport const setPasswordErrorAC = (error: string | null) => ({type: \"SET-PASSWORD-ERROR\", error} as const)\r\n\r\nexport const setNewUserTC = (email: string, password: string) => (dispatch: Dispatch) => {\r\n    regAPI.registration(email, password)\r\n        .then(response => {\r\n            console.log(response.data)\r\n            dispatch(setNewUserAC(response.data))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response ? e.response.data.error : (e.message + \", more details in the console\")\r\n            dispatch(setEmailErrorAC(error))\r\n        })\r\n}\r\n\r\nexport type SetNewUserType = ReturnType<typeof setNewUserAC>;\r\n\r\ntype ActionType = SetNewUserType\r\n                | ReturnType<typeof setEmailErrorAC>\r\n                | ReturnType<typeof setPasswordErrorAC>;","import {Registration} from \"./Registration\";\r\nimport {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setNewUserTC} from \"../../../../store/registration-reducer\";\r\nimport {setEmailErrorAC, setPasswordErrorAC} from \"../../../../store/registration-reducer\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\n\r\n\r\nexport const RegistrationPage = () => {\r\n    const emailError = useSelector<AppRootStateType, string | null>((state) => state.registration.emailError)\r\n    const passwordError = useSelector<AppRootStateType, string | null>((state) => state.registration.passwordError)\r\n    const dispatch = useDispatch()\r\n\r\n    let [email, setEmail] = useState<string>('nya-admin@nya.nya');\r\n    let [password, setPassword] = useState<string>('1qazxcvBG');\r\n    let [passwordConfirm, setPasswordConfirm] = useState<string>('1qazxcvBG');\r\n\r\n    const onEmailChange = (email: string) => {\r\n        setEmail(email)\r\n        if (emailError !== null) {\r\n            dispatch(setEmailErrorAC(null))\r\n        }\r\n    }\r\n    const onPasswordChange = (password: string) => {\r\n        setPassword(password)\r\n        if (passwordError !== null) {\r\n            dispatch(setPasswordErrorAC(null))\r\n        }\r\n    }\r\n    const onPasswordConfirm = (passwordConfirm: string) => {\r\n        setPasswordConfirm(passwordConfirm)\r\n        if (passwordError !== null) {\r\n            dispatch(setPasswordErrorAC(null))\r\n        }\r\n    }\r\n\r\n    const registrationButtonClick = () => {\r\n        if (email === \"\") {\r\n            dispatch(setEmailErrorAC('Required'))\r\n        } else if (password === \"\") {\r\n            dispatch(setPasswordErrorAC('Required'))\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            dispatch(setEmailErrorAC('Invalid email address'))\r\n        } else if (password.length < 8) {\r\n            dispatch(setPasswordErrorAC('Password must be more 7 symbols'))\r\n        } else if (password !== passwordConfirm) {\r\n            dispatch(setPasswordErrorAC('Password & confirm password fields are not equally'));\r\n            setPassword('');\r\n            setPasswordConfirm('');\r\n        } else {\r\n            dispatch(setNewUserTC(email, password));\r\n            setEmail('');\r\n            setPassword('');\r\n            setPasswordConfirm('');\r\n        }\r\n    }\r\n\r\n    const cancelClick = () => {\r\n        setEmail('');\r\n        setPassword('');\r\n        setPasswordConfirm('');\r\n    }\r\n\r\n    return <Registration email={email}\r\n                         password={password}\r\n                         emailError={emailError}\r\n                         passwordError={passwordError}\r\n                         passwordConfirm={passwordConfirm}\r\n                         onEmailChange={onEmailChange}\r\n                         onPasswordChange={onPasswordChange}\r\n                         onPasswordConfirmChange={onPasswordConfirm}\r\n                         registrationButtonClick={registrationButtonClick}\r\n                         cancelClick={cancelClick}\r\n    />\r\n\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/'\r\n})\r\n\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.post(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post('auth/login', {email, password, rememberMe})\r\n\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/me')\r\n    }\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../ui/content/components/login/api-login\";\r\n\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    user: {},\r\n    isFetching: false,\r\n    emailError: null as null | string,\r\n    passwordError: null as null | string,\r\n    isAuth: false,\r\n    userID: \"\"\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_USER_DATA':\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                isAuth: true\r\n            }\r\n        case \"IS-FETCHING\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case \"SET-EMAIL-ERROR\":\r\n            return {\r\n                ...state,\r\n                emailError: action.error\r\n            }\r\n        case \"SET-PASSWORD-ERROR\":\r\n            return {\r\n                ...state,\r\n                passwordError: action.error\r\n            }\r\n        case \"SET-USER-ID\":\r\n            return {\r\n                ...state,\r\n                userID: action.userID\r\n            }\r\n        case \"LOGOUT\":\r\n            return {\r\n                ...state,\r\n                user: {},\r\n                isAuth: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserDataAC = (payload: InitialStateType) => ({type: 'SET_USER_DATA', payload}) as const\r\nexport const isFetchingAC = (isFetching: boolean) => ({type: \"IS-FETCHING\", isFetching} as const)\r\nexport const setEmailErrorAC = (error: string | null) => ({type: \"SET-EMAIL-ERROR\", error} as const)\r\nexport const setPasswordErrorAC = (error: string | null) => ({type: \"SET-PASSWORD-ERROR\", error} as const)\r\nexport const setUserID = (userID: string) => ({type: \"SET-USER-ID\", userID} as const)\r\nexport const logoutAC = () => ({type: \"LOGOUT\"} as const)\r\n\r\n\r\nexport const getAuthUserData = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\r\n    dispatch(isFetchingAC(true))\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(response => {\r\n                console.log(response.data)\r\n                dispatch(setAuthUserDataAC(response.data))\r\n                dispatch(setUserID(response.data._id))\r\n            }\r\n        ).catch((e) => {\r\n        const error = e.response ? e.response.data.error : (e.message + \", more details in the console\")\r\n        console.log(error)\r\n        dispatch(setEmailErrorAC(error))\r\n    })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\nexport const isAuthUserData = () => (dispatch: Dispatch) => {\r\n    authAPI.getAuth()\r\n        .then(response => {\r\n                dispatch(setAuthUserDataAC(response.data))\r\n                dispatch(setUserID(response.data._id))\r\n            }\r\n        ).catch((e) => {\r\n        const error = e.response ? e.response.data.error : (e.message + \", more details in the console\")\r\n        dispatch(setEmailErrorAC(error))\r\n    })\r\n}\r\n\r\nexport const logoutTC = () => (dispatch: Dispatch) => {\r\n    authAPI.logout()\r\n        .then(response => {\r\n                dispatch(logoutAC())\r\n            }\r\n        ).catch((e) => {\r\n        const error = e.response ? e.response.data.error : (e.message + \", more details in the console\")\r\n        dispatch(setEmailErrorAC(error))\r\n    })\r\n}\r\n\r\n\r\nexport type ActionsType =\r\n    | ReturnType<typeof setAuthUserDataAC>\r\n    | ReturnType<typeof setEmailErrorAC>\r\n    | ReturnType<typeof setPasswordErrorAC>\r\n    | ReturnType<typeof isFetchingAC>\r\n    | ReturnType<typeof setUserID>\r\n    | ReturnType<typeof logoutAC>\r\n\r\n\r\n\r\n","import s from \"./LoginPage.module.scss\";\r\nimport {Input} from \"../../../common/input/Input\";\r\nimport {Button} from \"../../../common/button/Button\";\r\nimport {Logo} from \"../../../common/logo/Logo\";\r\nimport {TitleH2} from \"../../../common/titleh2/TitleH2\";\r\nimport React, {ChangeEvent, useState} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {routes} from \"../../../../router/routes\";\r\n\r\ntype LoginPagePropsType = {\r\n    email: string\r\n    emailError: string | null\r\n    passwordError: string | null\r\n    password: string\r\n    rememberMe: boolean\r\n    onclickHandler: () => void\r\n    onChangeEmail: (email: string) => void\r\n    onChangePassword: (password: string)=> void\r\n    onChangeRememberMe: (rememberMe: boolean) => void\r\n\r\n}\r\n\r\nexport const LoginPage = (props:LoginPagePropsType) => {\r\n\r\n    const changeEmail = (value: string) => {\r\n        props.onChangeEmail(value)\r\n    }\r\n    const changePassword = (value: string) => {\r\n        props.onChangePassword(value)\r\n    }\r\n    const changeRememberMe = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.onChangeRememberMe(e.currentTarget.checked)\r\n    }\r\n\r\n    const [passwordType, setPasswordType] = useState<\"password\" | \"text\">(\"password\");\r\n\r\n    const togglePasswordType = () => {\r\n        if (passwordType === 'text') {\r\n            setPasswordType('password')\r\n        } else setPasswordType('text')\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.loginPage}>\r\n            <div className={s.wrapper}>\r\n                <div className={s.inner}>\r\n                    <Logo/>\r\n                    <TitleH2 value= \"Sign In\"/>\r\n                    <div className={s.form}>\r\n                        <Input title=\"Email\"\r\n                               type= \"email\"\r\n                               name=\"email\"\r\n                               error={props.emailError}\r\n                               placeholder={'email'}\r\n                               value={props.email}\r\n                               onChange={changeEmail}\r\n                               style= {{marginTop:\"25px\"}}\r\n                               idName={'inputEmail'}\r\n                        />\r\n\r\n                        {/* Нужно убрать глазик (логика) */}\r\n                        <Input title=\"Password\"\r\n                               // type= \"password\"\r\n                               type= {passwordType}\r\n                               name=\"password\"\r\n                               error={props.passwordError}\r\n                               placeholder={'password'}\r\n                               value={props.password}\r\n                               onChange={changePassword}\r\n                               style= {{marginTop:\"25px\"}}\r\n                               idName={'inputPassword'}\r\n                               id= \"checkbox2\"\r\n                               htmlFor= \"checkbox2\"\r\n                               changeVision={togglePasswordType}\r\n                        />\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className={s.wrap}>\r\n                        <div className={s.checkbox}>\r\n\r\n                            <input className={s.checkboxInput} type=\"checkbox\" id=\"checkbox1\"\r\n                            />\r\n                            <label className={s.checkboxLable} htmlFor=\"checkbox1\">Rememder me</label>\r\n                        </div>\r\n                        <NavLink className={s.linkPassword} to={routes.passwordRecover}>Forgot Password</NavLink>\r\n                        {/*<a className={s.linkPassword} href=\"\">Forgot Password</a>*/}\r\n                    </div>\r\n                    <div className={s.btn}>\r\n                        <Button value=\"Login\"\r\n                                onClick={props.onclickHandler}\r\n\r\n                        />\r\n                    </div>\r\n                    <div className={s.singUp}>\r\n                        <label className={s.span} >Don’t have an account?</label>\r\n                        <NavLink className={s.linkSingUp} to={routes.registration}>Sign Up</NavLink>\r\n                        {/*<a className={s.linkSingUp} href=\"#\">Sign Up</a>*/}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useDispatch, useSelector} from \"react-redux\"\r\nimport React, {useState} from \"react\";\r\nimport {getAuthUserData, setEmailErrorAC, setPasswordErrorAC} from \"../../../../store/login-reducer\";\r\nimport {LoginPage} from \"./LoginPage\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const LoginContainer = () => {\r\n\r\n    const isFetching = useSelector<AppRootStateType, boolean>((state) => state.login.isFetching)\r\n    const emailError = useSelector<AppRootStateType, string | null>((state) => state.login.emailError)\r\n    const passwordError = useSelector<AppRootStateType, string | null>((state) => state.login.passwordError)\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    let [email, setEmail] = useState<string>('nya-admin@nya.nya')\r\n    let [password, setPassword] = useState<string>('1qazxcvBG')\r\n    let [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const onChangeEmail = (email: string) => {\r\n        setEmail(email)\r\n        if (emailError !== null) {\r\n            dispatch(setEmailErrorAC(null))\r\n        }\r\n    }\r\n    const onChangePassword = (password: string) => {\r\n        setPassword(password)\r\n        if (passwordError !== null) {\r\n            dispatch(setPasswordErrorAC(null))\r\n        }\r\n    }\r\n    const onChangeRememberMe = (rememberMe: boolean) => {\r\n        setRememberMe(!rememberMe)\r\n    }\r\n\r\n    let onclickHandler = () => {\r\n        if (email === \"\") {\r\n            dispatch(setEmailErrorAC('Required'))\r\n        } else if (password === \"\") {\r\n            dispatch(setPasswordErrorAC('Required'))\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            dispatch(setEmailErrorAC('Invalid email address'))\r\n        } else if (password.length < 8) {\r\n            dispatch(setPasswordErrorAC('Password must be more 7 symbols'))\r\n        } else {\r\n            dispatch(getAuthUserData(email, password, rememberMe))\r\n            setEmail('')\r\n            setPassword('')\r\n            setRememberMe(false)\r\n        }\r\n    }\r\n\r\n    if (isFetching) {\r\n        return <div>Loading...</div>\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={'/packs'}/>\r\n    }\r\n\r\n    return <LoginPage email={email}\r\n                      emailError={emailError}\r\n                      passwordError={passwordError}\r\n                      password={password}\r\n                      rememberMe={rememberMe}\r\n                      onclickHandler={onclickHandler}\r\n                      onChangeEmail={onChangeEmail}\r\n                      onChangePassword={onChangePassword}\r\n                      onChangeRememberMe={onChangeRememberMe}/>\r\n\r\n\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0'\r\n})\r\n\r\nconst from = 'shamashov87@mail.ru';\r\nconst message = `<div>password recover link: <a href='https://pavelmalta.github.io/friday-project/#/newPassword/$token$'>Link</a></div>`\r\n\r\nexport const passwordRecoverAPI = {\r\n    recover(email: string) {\r\n        return instance.post('auth/forgot', {email, from, message})\r\n    }\r\n}","import {Dispatch} from \"redux\"\r\nimport {passwordRecoverAPI} from \"../ui/content/components/passwordRecover/api-passwordRecover\";\r\n\r\nconst initialState = {\r\n    isFetching: false,\r\n    error: null as null | string\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const passwordRecoverReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"IS-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const isFetchingAC = (isFetching: boolean) => ({type: \"IS-FETCHING\", isFetching} as const)\r\nexport const setErrorAC = (error: string | null) => ({type: \"SET-ERROR\", error} as const)\r\n\r\nexport const recoverTC = (email: string) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(isFetchingAC(true))\r\n    passwordRecoverAPI.recover(email)\r\n        .then(res => {\r\n            console.log(res.data)\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response ? e.response.data.error : (e.message + \", more details in the console\")\r\n            dispatch(setErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\ntype ActionType = ReturnType<typeof isFetchingAC> | ReturnType<typeof setErrorAC>","import s from \"./ForgotPassword.module.scss\";\r\nimport {Input} from \"../../../../common/input/Input\";\r\nimport {Button} from \"../../../../common/button/Button\";\r\nimport {Logo} from \"../../../../common/logo/Logo\";\r\nimport {TitleH2} from \"../../../../common/titleh2/TitleH2\";\r\n\r\nexport type ForgotPasswordPropsType = {\r\n    email: string\r\n    error: string | null\r\n    onChangeEmail: (value: string) => void\r\n    onclickHandler: () => void\r\n    isFetching: boolean\r\n}\r\n\r\nexport const ForgotPassword = (props: ForgotPasswordPropsType) => {\r\n    return (\r\n        <div className={s.forgotPassword}>\r\n            <div className={s.wrapper}>\r\n                <div className={s.inner}>\r\n                    <Logo/>\r\n                    <TitleH2 value=\"Sign In\"/>\r\n                    <div className={s.form}>\r\n                        <Input title=\"Email\"\r\n                               type=\"email\"\r\n                               name=\"email\"\r\n                               value={props.email}\r\n                               onChange={props.onChangeEmail}\r\n                               error={props.error}\r\n                        /> {/*Нужно убрать глазик (логика)*/}\r\n                    </div>\r\n                    <span className={s.text}>Enter your email address and we will send you further instructions </span>\r\n                    <div className={s.btn}>\r\n                        {props.isFetching\r\n                            ? <span>Loading...</span>\r\n                            : <Button value=\"Send Instructions\"\r\n                                      onClick={props.onclickHandler}\r\n                            />}\r\n                    </div>\r\n                    <div className={s.singUp}>\r\n                        <a className={s.link} href=\"#\">Did you remember your password?</a>\r\n                        <a className={s.linkSingUp} href=\"#\">Try logging in</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport {recoverTC, setErrorAC} from \"../../../../store/passwordRecover-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport {ForgotPassword} from \"./forgotPassword/ForgotPassword\";\r\n\r\n\r\nexport const PasswordRecoverContainer = () => {\r\n    const [email, setEmail] = useState(\"shamashov87@mail.ru\")\r\n\r\n    const isFetching = useSelector<AppRootStateType, boolean>((state) => state.passwordRecover.isFetching)\r\n    const error = useSelector<AppRootStateType, string | null>((state) => state.passwordRecover.error)\r\n    const dispatch = useDispatch();\r\n\r\n    const onChangeEmail = (value: string) => {\r\n        setEmail(value)\r\n        if (error !== null) {\r\n            dispatch(setErrorAC(null))\r\n        }\r\n    }\r\n\r\n    const onclickHandler = () => {\r\n        if (email === \"\") {\r\n            dispatch(setErrorAC('Required'))\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            dispatch(setErrorAC('Invalid email address'))\r\n        } else {\r\n            dispatch(recoverTC(email))\r\n            setEmail(\"\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ForgotPassword email={email}\r\n                         error={error}\r\n                         onChangeEmail={onChangeEmail}\r\n                         onclickHandler={onclickHandler}\r\n                        isFetching={isFetching}\r\n        />\r\n    )\r\n}\r\n\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/'\r\n})\r\n\r\n\r\nexport const packsAPI = {\r\n    getPacks(packQueryParams: PacksQueryParamsType) {\r\n        return instance.get('cards/pack', {params: packQueryParams})\r\n    },\r\n    addPack(addPackPayload: AddPackPayloadType) {\r\n        return instance.post('cards/pack', {cardsPack: addPackPayload})\r\n    },\r\n    deletePack(idPack: string) {\r\n        return instance.delete(`cards/pack?id=${idPack}`)\r\n    },\r\n    updatePack(updatePackPayload: updatePackPayloadType) {\r\n        return instance.put('cards/pack', {cardsPack: updatePackPayload})\r\n    }\r\n}\r\n\r\nexport type cardPacksType = {\r\n    _id: string\r\n    user_id: string\r\n    user_name: string\r\n    private: boolean\r\n    name: string\r\n    path: string\r\n    grate: number\r\n    shots: number\r\n    deckCover: string\r\n    cardsCount: number\r\n    type: string\r\n    rating: number\r\n    created: string\r\n    updated: string\r\n    more_id: string\r\n    __v: string\r\n}\r\n\r\nexport type PackResponseType = {\r\n    cardPacks: Array<cardPacksType>\r\n    page: number\r\n    pageCount: number\r\n    cardPacksTotalCount: number\r\n    minCardsCount: number\r\n    maxCardsCount: number\r\n\r\n}\r\n\r\nexport type PacksQueryParamsType = {\r\n    packName?: string\r\n    pageCount?: number\r\n    min?: number\r\n    max?: number\r\n    page?: number\r\n}\r\n\r\nexport type AddPackPayloadType = {\r\n    name?: string\r\n    path?: string\r\n    grade?: number\r\n    shots?: number\r\n    rating?: number\r\n    deckCover?: string\r\n    private?: boolean\r\n    type?: string\r\n}\r\n\r\nexport type updatePackPayloadType = {\r\n    _id: string\r\n    name?: string\r\n}\r\n\r\n","import {\r\n    AddPackPayloadType,\r\n    PackResponseType,\r\n    packsAPI,\r\n    PacksQueryParamsType, updatePackPayloadType\r\n} from \"../ui/content/components/packs/api-packs\";\r\nimport {Dispatch} from \"redux\";\r\n\r\n\r\nconst initialState = {\r\n    packsTableData: {\r\n        cardPacks: [],\r\n        cardPacksTotalCount: 0,\r\n        maxCardsCount: 0,\r\n        minCardsCount: 0,\r\n        page: 0,\r\n        pageCount: 0\r\n    },\r\n    isFetching: false\r\n}\r\ntype InitialStateType = {\r\n    packsTableData: PackResponseType\r\n    isFetching: boolean\r\n}\r\n\r\nexport const packsReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"GET-PACKS\":\r\n            return {...state, packsTableData: action.packsTableData}\r\n        case \"IS-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getPacksAC = (packsTableData: PackResponseType) => {\r\n    return {type: \"GET-PACKS\", packsTableData} as const\r\n}\r\nconst isFetchingAC = (isFetching: boolean) => ({type: \"IS-FETCHING\", isFetching} as const)\r\n\r\nexport const getPacksTC = (packQueryParams: PacksQueryParamsType) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(isFetchingAC(true))\r\n    packsAPI.getPacks(packQueryParams)\r\n        .then(res => {\r\n            dispatch(getPacksAC(res.data))\r\n        })\r\n        .catch((e) => {\r\n\r\n        })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\nexport const addCardsPackTC = (addPackPayload: AddPackPayloadType, packQueryParams: PacksQueryParamsType) => (dispatch: Dispatch) => {\r\n    dispatch(isFetchingAC(true))\r\n    packsAPI.addPack(addPackPayload)\r\n        .then(() => {\r\n            // @ts-ignore\r\n            dispatch(getPacksTC(packQueryParams))\r\n        })\r\n}\r\nexport const deleteCardsPackTC = (idPack: string, packQueryParams: PacksQueryParamsType) => (dispatch: Dispatch) => {\r\n    dispatch(isFetchingAC(true))\r\n    packsAPI.deletePack(idPack)\r\n        .then(() => {\r\n            // @ts-ignore\r\n            dispatch(getPacksTC(packQueryParams))\r\n        })\r\n}\r\nexport const updateCardsPackTC = (updatePackPayload: updatePackPayloadType, packQueryParams: PacksQueryParamsType) => (dispatch: Dispatch) => {\r\n    dispatch(isFetchingAC(true))\r\n    packsAPI.updatePack(updatePackPayload)\r\n        .then(() => {\r\n            // @ts-ignore\r\n            dispatch(getPacksTC(packQueryParams))\r\n        })\r\n}\r\n\r\ntype ActionType = ReturnType<typeof getPacksAC> | ReturnType<typeof isFetchingAC> | ReturnType<typeof isFetchingAC>","import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/'\r\n})\r\n\r\n\r\nexport const cardsAPI = {\r\n    getCards(cardQueryParams: cardQueryParamsType) {\r\n        return instance.get('cards/card', {params: cardQueryParams})\r\n    },\r\n    addCard(newCardPayload: NewCardPayloadType) {\r\n        return instance.post('cards/card',{card: newCardPayload})\r\n    },\r\n    deleteCard(cardID: string) {\r\n        return instance.delete(`cards/card/?id=${cardID}`)\r\n    },\r\n    updateCard(updateCardPayload: UpdateCardPayloadType) {\r\n        return instance.put('cards/card', {card: updateCardPayload})\r\n    }\r\n}\r\n\r\n\r\nexport type cardQueryParamsType = {\r\n    cardAnswer?: string\r\n    cardQuestion?: string\r\n    cardsPack_id: string\r\n    min?: number\r\n    max?: number\r\n    page?: number\r\n    pageCount?: number\r\n}\r\n\r\nexport type CardsResponseType = {\r\n    cards: Array<CardsType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n}\r\n\r\nexport type CardsType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    user_id: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport type NewCardPayloadType = {\r\n    cardsPack_id: string\r\n    question?: string\r\n    answer?: string\r\n    grade?: number\r\n    shots?: number\r\n    rating?: number\r\n    answerImg?: string\r\n    questionImg?: string\r\n    questionVideo?: string\r\n    answerVideo?: string\r\n    type?: string\r\n}\r\n\r\nexport type UpdateCardPayloadType = {\r\n    _id: string\r\n    question?: string\r\n    answer?: string\r\n    comments?: string\r\n}\r\n","import {\r\n    cardQueryParamsType,\r\n    cardsAPI,\r\n    CardsResponseType,\r\n    NewCardPayloadType, UpdateCardPayloadType\r\n} from \"../ui/content/components/cards/api-cards\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst initialState = {\r\n     cardsTableData: {\r\n         cards: [],\r\n         cardsTotalCount: 0,\r\n         maxGrade: 0,\r\n         minGrade: 0,\r\n         page: 0,\r\n         pageCount: 0\r\n     },\r\n    isFetching: false,\r\n    cardsPackId: \"\"\r\n}\r\ntype InitialStateType = {\r\n    cardsTableData: CardsResponseType\r\n    isFetching: boolean\r\n    cardsPackId: string\r\n}\r\n\r\nexport const cardsReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"GET-CARDS\":\r\n            return {...state, cardsTableData: action.cardsTableData}\r\n        case \"IS-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"SET-CARDS-PACK-ID\":\r\n            return {...state, cardsPackId: action.cardsPackId}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst getCardsAC = (cardsTableData: CardsResponseType) => {\r\n    return {type: \"GET-CARDS\", cardsTableData} as const\r\n}\r\nconst isFetchingAC = (isFetching: boolean) => ({type: \"IS-FETCHING\", isFetching} as const)\r\nexport const setCardsPackIdAC = (cardsPackId: string) => ({type: \"SET-CARDS-PACK-ID\", cardsPackId} as const)\r\n\r\n\r\nexport const getCardsTC = (cardQueryParams: cardQueryParamsType) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(isFetchingAC(true))\r\n    cardsAPI.getCards(cardQueryParams)\r\n        .then(res => {\r\n            dispatch(getCardsAC(res.data))\r\n        })\r\n        .catch((e) => {\r\n\r\n        })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\nexport const addCardTC = (newCardPayload: NewCardPayloadType, cardQueryParams: cardQueryParamsType) => (dispatch: Dispatch) => {\r\n    dispatch(isFetchingAC(true))\r\n    cardsAPI.addCard(newCardPayload)\r\n        .then(res => {\r\n            // @ts-ignore\r\n            dispatch(getCardsTC(cardQueryParams))\r\n        })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\nexport const deleteCardTC = (cardID: string, cardQueryParams: cardQueryParamsType) => (dispatch: Dispatch) => {\r\n    dispatch(isFetchingAC(true))\r\n    cardsAPI.deleteCard(cardID)\r\n        .then(res => {\r\n            // @ts-ignore\r\n            dispatch(getCardsTC(cardQueryParams))\r\n        })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\nexport const updateCardTC = (updateCardPayload: UpdateCardPayloadType, cardQueryParams: cardQueryParamsType) => (dispatch: Dispatch) => {\r\n    dispatch(isFetchingAC(true))\r\n    cardsAPI.updateCard(updateCardPayload)\r\n        .then(res => {\r\n            // @ts-ignore\r\n            dispatch(getCardsTC(cardQueryParams))\r\n        })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\ntype ActionType = ReturnType<typeof getCardsAC>\r\n                | ReturnType<typeof isFetchingAC>\r\n                | ReturnType<typeof setCardsPackIdAC>","import s from \"./Dropdown.module.scss\";\r\n\r\nexport const Dropdown = () => {\r\n    return (\r\n        <div className={s.dropdown}>\r\n            <span className={s.text}>Show</span>\r\n            <div className={s.dropdownSelect}>\r\n                <select className={s.item}>\r\n                    <option value=\"1\">1</option>\r\n                    <option value=\"2\">2</option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"4\">4</option>\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"6\">6</option>\r\n                    <option value=\"7\">7</option>\r\n                    <option value=\"8\">8</option>\r\n                    <option value=\"9\">9</option>\r\n                    <option value=\"10\">10</option>\r\n                </select>\r\n            </div>\r\n            <span className={s.text}>Cards per Page</span>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& > *': {\r\n        // marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function PaginationRounded() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Pagination count={10} shape=\"rounded\" />\r\n    </div>\r\n    \r\n  );\r\n}\r\n","import s from \"./RangeSlider.module.scss\";\r\n\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 196,\r\n    },\r\n    rail: {\r\n        backgroundColor: \"#919DC8\",\r\n        height: 5,  \r\n    },\r\n    track: {\r\n        backgroundColor: \"#21268F\",\r\n        height: 5,  \r\n    },\r\n    thumb: {\r\n        width:16,\r\n        height: 16,\r\n        boxSizing: \"border-box\",\r\n        border: \"4px solid #21268F\",\r\n        backgroundColor: \"#fff\",\r\n    },\r\n});\r\n\r\nfunction valuetext(value: number) {\r\n    return `${value}°C`;\r\n}\r\n\r\nexport default function RangeSlider() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState<number[]>([20, 37]);\r\n\r\n    const handleChange = (event: any, newValue: number | number[]) => {\r\n    setValue(newValue as number[]);\r\n    };\r\n\r\nreturn (\r\n        <Slider\r\n        value={value}\r\n        onChange={handleChange}\r\n        valueLabelDisplay=\"auto\"\r\n        aria-labelledby=\"range-slider\"\r\n        getAriaValueText={valuetext}\r\n        classes={classes}\r\n        />\r\n);\r\n}\r\n","import s from \"./Search.module.scss\";\r\n\r\nexport const Search = () => {\r\n    return (\r\n        <form className={s.search}>\r\n            <input className={s.input} type=\"text\" placeholder=\"Search...\"></input>\r\n        </form>\r\n    )\r\n}","import s from \"./SideButton.module.scss\";\r\n\r\nexport const SideButton = () => {\r\n    return (\r\n        <div className={s.sideButton}>\r\n            <button className={s.btnActive}>My</button>\r\n            <button className={s.btn}>All</button>\r\n        </div>\r\n    )\r\n}","import s from \"./Actions.module.scss\";\r\n\r\nexport const Actions = (props: any) => {\r\n    const onClickHandler = () => {\r\n        props.onClick(props.packId)\r\n    }\r\n    return (\r\n        <button className={s.btn} style={props.style} onClick={onClickHandler}>\r\n            {props.value}\r\n        </button>\r\n            \r\n    )\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Actions} from \"../actions/Actions\";\r\nimport s from \"./String.module.scss\";\r\n\r\ntype StringPropsType = {\r\n    value1: string\r\n    value2: number\r\n    value3: string\r\n    value4: string\r\n    packUserId: string\r\n    userId: string\r\n    packId: string\r\n    deletePack: (packID: string) => void\r\n    updatePack: (packID: string, title: string) => void\r\n    learnPack: (packID: string) => void\r\n}\r\n\r\nexport const String = (props: any) => {\r\n    return (\r\n        <>\r\n            <td>{props.value1}</td>\r\n            <td>{props.value2}</td>\r\n            <td>{props.value3}</td>\r\n            <td>{props.value4}</td>\r\n            {props.packUserId === props.userId\r\n                ? <td>\r\n                    <Actions value=\"Delete\"\r\n                             style={{backgroundColor: \"#F1453D\", color: \"#fff\"}}\r\n                             onClick={props.deletePack}\r\n                             packId={props.packId}\r\n                    />\r\n                    <Actions value=\"Edit\"\r\n                             onClick={props.updatePack}\r\n                             packId={props.packId}\r\n                    />\r\n                    <NavLink to={`/cards/${props.packId}`}>\r\n                        <Actions value=\"Learn\"\r\n                                 onClick={props.learnPack}\r\n                                 packId={props.packId}\r\n                        />\r\n                    </NavLink>\r\n                </td>\r\n                : <td>\r\n                    <NavLink to={`/cards/${props.packId}`}>\r\n                        <Actions value=\"Learn\"\r\n                                 onClick={props.learnPack}\r\n                                 packId={props.packId}\r\n                        />\r\n                    </NavLink>\r\n                </td>\r\n            }\r\n\r\n        </>\r\n    )\r\n}","import { Button } from \"../../../../common/button/Button\";\r\nimport { Dropdown } from \"../../../../common/dropdown/Dropdown\";\r\nimport PaginationRounded from \"../../../../common/pagination/Pagination\";\r\nimport RangeSlider from \"../../../../common/rangeSlider/RangeSlider\";\r\nimport { Search } from \"../../../../common/search/Search\";\r\nimport { SideButton } from \"../../../../common/sideButton/SideButton\";\r\nimport { String } from \"../../../../common/string/String\";\r\nimport { TitleH2 } from \"../../../../common/titleh2/TitleH2\";\r\nimport s from \"./PacksList.module.scss\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../../store/store\";\r\nimport {PackResponseType} from \"../api-packs\";\r\n\r\ntype PacksListType = {\r\n    userID: string\r\n    addNewPack: () => void\r\n    deletePack: (packID: string) => void\r\n    updatePack: (packID: string ,title: string) => void\r\n    learnPack: (packID: string) => void\r\n}\r\n\r\nexport const PacksList = (props: PacksListType) => {\r\n\r\n    const packsData = useSelector<AppRootStateType, PackResponseType>(state => state.packs.packsTableData)\r\n\r\n    const formatDate = (date: string): string => {\r\n        return new Date(date).toLocaleDateString(\"ru\", {\r\n            day: \"2-digit\",\r\n            month: \"2-digit\",\r\n            year: \"numeric\"\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={s.packsList}>\r\n            <aside className={s.aside}>\r\n                <h3 className={s.titleH3}>Show packs cards</h3>\r\n                <SideButton />\r\n                <h3 className={s.titleH3}>Number of cards</h3>\r\n                <div className={s.rangeSlider}>\r\n                    <RangeSlider/>\r\n                </div>               \r\n            </aside>\r\n            <div className={s.content}>\r\n                <TitleH2 value=\"Packs list\"\r\n                    style={{ textAlign: \"start\", padding: \"24px 0 15px 0\"}} />\r\n                <div className={s.form}>\r\n                    <Search/>\r\n                    <Button value=\"Add new pack\"\r\n                            style= {{width: \"184px\", marginLeft: \"24px\" }}\r\n                            onClick= {props.addNewPack}/>\r\n                </div>\r\n                \r\n                <div className={s.wrap}>\r\n                    <table>\r\n                        <tr>\r\n                            <th className={s.item1}>Name</th>\r\n                            <th className={s.item2}>Cards</th>\r\n                            <th className={s.item3}>Last Updated</th>\r\n                            <th className={s.item4}>Created by</th>\r\n                            <th className={s.item5}>Actions</th>\r\n                        </tr>\r\n                        {packsData.cardPacks.map((item) => {\r\n                            return (\r\n                        <tr>\r\n\r\n                            <String\r\n                                value1={item.name}\r\n                                value2={item.cardsCount}\r\n                                value3={formatDate(item.updated)}\r\n                                value4={item.user_name}\r\n                                packUserId={item.user_id}\r\n                                userId={props.userID}\r\n                                packId={item._id}\r\n                                deletePack={props.deletePack}\r\n                                updatePack={props.updatePack}\r\n                                learnPack={props.learnPack}\r\n                                />\r\n                        </tr>)})}\r\n                    </table>\r\n                </div>\r\n                <div className={s.pagination}>\r\n                    <PaginationRounded/>\r\n                    <Dropdown/>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addCardsPackTC, deleteCardsPackTC, getPacksTC, updateCardsPackTC} from \"../../../../store/packs-reducer\";\r\nimport {PacksTable} from \"./packTable/PacksTable\";\r\nimport {getCardsTC, setCardsPackIdAC} from \"../../../../store/cards-reducer\";\r\nimport {isAuthUserData} from \"../../../../store/login-reducer\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PacksList} from \"./packsList/PacksList\";\r\n\r\n\r\nexport const Packs = () => {\r\n\r\n    const userID = useSelector<AppRootStateType, string>(state => state.login.userID)\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(isAuthUserData())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacksTC({pageCount: 7}))\r\n    }, [dispatch, isAuth])\r\n\r\n    const addPack = () => {\r\n        dispatch(addCardsPackTC({name: \"Y menia polychilos\"}, {pageCount: 7}))\r\n    }\r\n    const deletePack = (PackID: string) => {\r\n        dispatch(deleteCardsPackTC(PackID, {pageCount: 7}))\r\n    }\r\n    const updatePack = (PackID: string) => {\r\n        dispatch(updateCardsPackTC({_id: PackID, name: \"Voy voy polegche!\"}, {pageCount: 7}))\r\n    }\r\n    const learnPack = (PackID: string) => {\r\n        dispatch(getCardsTC({cardsPack_id: PackID, pageCount: 100}))\r\n        dispatch(setCardsPackIdAC(PackID))\r\n    }\r\n\r\n    if (!isAuth) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n           {/* <button onClick={addPack}>Add new pack</button>*/}\r\n           {/* <PacksTable userID={userID}\r\n                        deletePack={deletePack}\r\n                        updatePack={updatePack}\r\n                        learnPack={learnPack}\r\n            />*/}\r\n            <PacksList userID={userID}\r\n                       addNewPack={addPack}\r\n                       deletePack={deletePack}\r\n                       updatePack={updatePack}\r\n                       learnPack={learnPack}/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../../store/store\";\r\nimport {CardsResponseType} from \"../api-cards\";\r\nimport s from \"./CardsTable.module.css\"\r\nimport {v1} from \"uuid\";\r\n\r\ntype CardsTableType = {\r\n    userID: string\r\n    deleteCard: (cardID: string) => void\r\n    updateCard: (cardID: string) => void\r\n}\r\n\r\nexport const CardsTable = (props: CardsTableType) => {\r\n\r\n    const cardsData = useSelector<AppRootStateType, CardsResponseType>(state => state.cards.cardsTableData)\r\n\r\n    const formatDate = (date: string): string => {\r\n        return new Date(date).toLocaleDateString(\"ru\", {\r\n            day: \"2-digit\",\r\n            month: \"2-digit\",\r\n            year: \"numeric\"\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {cardsData.cards.map((item) => {\r\n                    return (\r\n                        <div key={v1()} className={s.row}>\r\n                            <div className={s.item}>\r\n                                {item.question}\r\n                            </div>\r\n                            <div className={s.item}>\r\n                                {item.answer}\r\n                            </div>\r\n                            <div className={s.item}>\r\n                                {formatDate(item.updated)}\r\n                            </div>\r\n                            <div className={s.item}>\r\n                                {item.grade}\r\n                            </div>\r\n                            {item.user_id === props.userID\r\n                                ? <div>\r\n                                    <button onClick={() => {props.deleteCard(item._id)}}>Delete</button>\r\n                                    <button onClick={() => {props.updateCard(item._id)}}>Edit</button>\r\n                                </div>\r\n                                : <div></div>\r\n                            }\r\n                        </div>\r\n                    )\r\n                }\r\n            )\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addCardTC, deleteCardTC, updateCardTC} from \"../../../../store/cards-reducer\";\r\nimport {CardsTable} from \"./cardsTable/CardsTable\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nexport const Cards = () => {\r\n\r\n    const userID = useSelector<AppRootStateType, string>(state => state.login.userID)\r\n    const cardsPackId = useSelector<AppRootStateType, string>(state => state.cards.cardsPackId)\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n    const dispatch = useDispatch()\r\n\r\n    const newCardPayload = {\r\n        cardsPack_id: cardsPackId,\r\n        question: 'Who is she?',\r\n        answer: 'She is pokemoniha'\r\n    }\r\n\r\n    const addCards = () => {\r\n        dispatch(addCardTC(newCardPayload, {cardsPack_id: cardsPackId, pageCount: 100}))\r\n    }\r\n\r\n    const deleteCard = (cardID: string) => {\r\n        dispatch(deleteCardTC(cardID, {cardsPack_id: cardsPackId, pageCount: 100}))\r\n    }\r\n\r\n    const updateCard = (cardID: string) => {\r\n        const updateCardPayload = {\r\n            _id: cardID,\r\n            question: 'What?'\r\n        }\r\n        dispatch(updateCardTC(updateCardPayload, {cardsPack_id: cardsPackId, pageCount: 100}))\r\n    }\r\n\r\n    if (!isAuth) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={addCards}>Add cards</button>\r\n            <CardsTable userID={userID}\r\n                        deleteCard={deleteCard}\r\n                        updateCard={updateCard}\r\n            />\r\n        </div>\r\n    )\r\n}","import s from \"./Error.module.scss\";\r\n\r\nexport const Error = () => {\r\n    return (\r\n        <div className={s.error}>\r\n            <div className={s.wrapper}>\r\n                <span className={s.text}>\r\n                    The page were looking for doesn’t exist\r\n                </span>\r\n                <button className={s.btn}>\r\n                    GO BACK\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport s from \"./Content.module.css\"\r\nimport {routes} from \"../../router/routes\";\r\nimport {Profile} from \"./components/profile/Profile\";\r\nimport {NotFound} from \"./components/notFound/NotFound\";\r\nimport {NewPassword} from \"./components/newPassword/NewPassword\";\r\nimport {Presentation} from \"./components/presentation/Presentation\";\r\nimport {RegistrationPage} from \"./components/registration/RegistrationPage\";\r\nimport {LoginContainer} from \"./components/login/LoginContainer\";\r\nimport {PasswordRecoverContainer} from \"./components/passwordRecover/PasswordRecoverContainer\";\r\nimport {Packs} from \"./components/packs/Packs\";\r\nimport {Cards} from \"./components/cards/Cards\";\r\nimport {Error} from \"../pages/error/Error\";\r\n\r\n\r\nexport const Content = () => {\r\n    return (\r\n        <div className={s.contentContainer}>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Redirect to={routes.login}/>}/>\r\n                <Route exact path={routes.login} render={() => <LoginContainer/>} />\r\n                <Route exact path={routes.registration} render={() => <RegistrationPage/>} />\r\n                <Route exact path={routes.profile} render={() => <Profile/>} />\r\n                <Route exact path={routes.passwordRecover} render={() => <PasswordRecoverContainer/>} />\r\n                <Route exact path={routes.newPassword} render={() => <NewPassword/>} />\r\n                <Route exact path={routes.presentation} render={() => <Presentation/>} />\r\n                <Route exact path={routes.packs} render={() => <Packs/>} />\r\n                <Route path={routes.cards} render={() => <Cards/>} />\r\n                <Route render={() => <Error/>} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./Header.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {routes} from \"../../router/routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {logoutTC} from \"../../store/login-reducer\";\r\n\r\nexport const Header = () => {\r\n\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    return (\r\n        <div className={s.headerContainer}>\r\n            <div className={s.navLinkContainer}>\r\n                {isAuth\r\n                    ? <button onClick={logoutHandler}>Logout</button>\r\n                    : <NavLink to={routes.login}>Login</NavLink>\r\n                }\r\n                <NavLink to={routes.registration}>Registration</NavLink>\r\n                <NavLink to={routes.profile}>Profile</NavLink>\r\n                <NavLink to={routes.notFound}>404</NavLink>\r\n                <NavLink to={routes.passwordRecover}>Password Recover</NavLink>\r\n                <NavLink to={routes.newPassword}>New Password</NavLink>\r\n                <NavLink to={routes.presentation}>Presentation</NavLink>\r\n                <NavLink to={routes.packs}>Packs</NavLink>\r\n                <NavLink to={routes.cards}>Cards</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/packList.7af4644a.svg\";","export default __webpack_public_path__ + \"static/media/profole.36eee9e3.svg\";","import s from \"./Tab.module.scss\";\r\nimport List from \"./../../../assets/images/head/packList.svg\";\r\nimport Profile from \"./../../../assets/images/head/profole.svg\";\r\n\r\n\r\nexport const Tab = () => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n        <button className={s.btn}>\r\n            <img className={s.icon} src= {List} alt=\"icon list\"/>\r\n            <span className={s.span}>Packs list</span>\r\n        </button>\r\n        <button className={s.btn}>\r\n            <img className={s.icon} src= {Profile} alt=\"icon list\"/>\r\n            <span className={s.span}>Profile</span>\r\n        </button>\r\n        </div>\r\n    )\r\n}","import s from \"./Head.module.scss\";\r\nimport { Tab } from \"./tab/Tab\";\r\nimport { Logo } from \"../logo/Logo\";\r\n\r\n\r\nexport const Head = () => {\r\n    return (\r\n        <div className={s.head}>\r\n            <div className={s.container}>\r\n                <Logo style= {{justifyContent: \"start\", padding: \"10px 0\", marginRight: \"168px\"}}/>\r\n                <Tab/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './App.module.scss';\r\nimport { Content } from './main/ui/content/Content';\r\nimport { Header } from './main/ui/header/Header';\r\nimport { Navigation } from './main/ui/navigation/Navigation';\r\nimport {RegistrationPage} from \"./main/ui/content/components/registration/RegistrationPage\";\r\n\r\n// Прошу не удалять я с этим работаю (Люба;))\r\nimport { LoginPage } from './main/ui/pages/auth/loginPage/LoginPage';\r\nimport { Register } from './main/ui/pages/auth/register/Register';\r\nimport { ForgotPassword } from './main/ui/content/components/passwordRecover/forgotPassword/ForgotPassword';\r\nimport { LoginPageTest } from './main/ui/pages/auth/loginPageTest/LoginPageTest';\r\nimport { CheckEmail } from './main/ui/pages/auth/сheckEmail/CheckEmail';\r\nimport { CreateNewPassword } from './main/ui/pages/auth/createNewPassword/CreateNewPassword';\r\nimport { Head } from './main/ui/common/head/Head';\r\nimport {PacksList} from \"./main/ui/pages/main/packsList/PacksList\";\r\n\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.app}>\r\n\r\n            {/* Осталось от фронта */}\r\n            <Header/>\r\n           {/* <Content/>*/}\r\n            {/* Тут подключены сверстанные странички */}\r\n            <Head/>\r\n            <div className={s.content}>\r\n                <Content/>\r\n                {/*<PacksList/>*/}\r\n\r\n\r\n            {/* <LoginPage/> */}\r\n            {/* <Register/> */}\r\n            {/* <ForgotPassword/> */}\r\n            {/* <CheckEmail/> */}\r\n            {/* <CreateNewPassword/> */}\r\n\r\n\r\n\r\n            {/* <LoginPageTest/>  Material UI*/}\r\n            </div>\r\n                {/* <Error/> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nconst initialState = {\r\n\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType = {\r\n    type: string\r\n}","\r\nconst initialState = {\r\n\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const newPasswordReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType = {\r\n    type: string\r\n}","\r\nconst initialState = {\r\n\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType = {\r\n    type: string\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from \"./app-reducer\";\r\nimport {loginReducer} from \"./login-reducer\";\r\nimport {newPasswordReducer} from \"./newPassword-reducer\";\r\nimport {passwordRecoverReducer} from \"./passwordRecover-reducer\";\r\nimport { profileReducer } from \"./profile-reducer\";\r\nimport {registrationReducer} from \"./registration-reducer\";\r\nimport {packsReducer} from \"./packs-reducer\";\r\nimport {cardsReducer} from \"./cards-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login: loginReducer,\r\n    newPassword: newPasswordReducer,\r\n    passwordRecover: passwordRecoverReducer,\r\n    profile: profileReducer,\r\n    registration: registrationReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./main/store/store\";\r\n\r\nReactDOM.render(\r\n\r\n\r\n            <HashRouter>\r\n                <Provider store={store}>\r\n                <App/>\r\n                </Provider>\r\n            </HashRouter>\r\n\r\n  ,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsList\":\"PacksList_packsList__16Oow\",\"aside\":\"PacksList_aside__2D1R_\",\"titleH3\":\"PacksList_titleH3__2kgRF\",\"rangeSlider\":\"PacksList_rangeSlider__176Ho\",\"content\":\"PacksList_content__dqveu\",\"form\":\"PacksList_form__9JcOw\",\"wrap\":\"PacksList_wrap__3605h\",\"pagination\":\"PacksList_pagination__dccMW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"LoginPage_loginPage__qEFAn\",\"wrapper\":\"LoginPage_wrapper__-2biH\",\"inner\":\"LoginPage_inner__2clEu\",\"form\":\"LoginPage_form__3-rTG\",\"wrap\":\"LoginPage_wrap__1xLgl\",\"checkbox\":\"LoginPage_checkbox__3bbTY\",\"checkboxInput\":\"LoginPage_checkboxInput__3OAOa\",\"checkboxLable\":\"LoginPage_checkboxLable__3Udfu\",\"linkPassword\":\"LoginPage_linkPassword__209Q3\",\"btn\":\"LoginPage_btn__2FN60\",\"singUp\":\"LoginPage_singUp__118j5\",\"span\":\"LoginPage_span__2Cd-O\",\"linkSingUp\":\"LoginPage_linkSingUp__2EW2I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgotPassword\":\"ForgotPassword_forgotPassword__2MlHL\",\"wrapper\":\"ForgotPassword_wrapper__3bdcd\",\"inner\":\"ForgotPassword_inner__348n1\",\"form\":\"ForgotPassword_form__1KQ49\",\"text\":\"ForgotPassword_text__iVqTU\",\"btn\":\"ForgotPassword_btn__2aD94\",\"singUp\":\"ForgotPassword_singUp__305sf\",\"link\":\"ForgotPassword_link__3s4ac\",\"linkSingUp\":\"ForgotPassword_linkSingUp__3ybFi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Input_wrapper__sgEY7\",\"label\":\"Input_label__2TTl5\",\"input__item\":\"Input_input__item__3jSC1\",\"icon\":\"Input_icon__1E6-D\",\"span\":\"Input_span__2Jcmt\",\"checkbox\":\"Input_checkbox__2bqf6\",\"checkboxInput\":\"Input_checkboxInput__P_T-B\",\"checkboxLable\":\"Input_checkboxLable__3VCdo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Tab_wrapper__1uAkk\",\"btn\":\"Tab_btn__3_DnP\",\"icon\":\"Tab_icon__3Dobh\",\"span\":\"Tab_span__EGs9d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Register_loginPage__3xiEa\",\"wrapper\":\"Register_wrapper__3fFdv\",\"inner\":\"Register_inner__35eRX\",\"form\":\"Register_form__1wCvI\",\"btn\":\"Register_btn__1F_93\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"Dropdown_dropdown__2kQYU\",\"text\":\"Dropdown_text__3EieB\",\"dropdownSelect\":\"Dropdown_dropdownSelect__1_M1j\",\"item\":\"Dropdown_item__y0zB4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"CardsTable_row__1w-5B\",\"item\":\"CardsTable_item__192ox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__2eTSF\",\"wrapper\":\"Error_wrapper__1D50E\",\"text\":\"Error_text__3I6Le\",\"btn\":\"Error_btn__3T6gc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideButton\":\"SideButton_sideButton__2GYUP\",\"btnActive\":\"SideButton_btnActive__1gx1h\",\"btn\":\"SideButton_btn__2SRDQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"App_content__INdBb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__T7yg_\",\"input\":\"Search_input__a-msh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Header_headerContainer__unZf7\",\"navLinkContainer\":\"Header_navLinkContainer__2cpJi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"Head_head__19Vea\",\"container\":\"Head_container__ZPF3P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"Content_contentContainer__3_tBf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3YXc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__2s_vA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"TitleH2_title__1oyIA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Actions_btn__1f3Dp\"};"],"sourceRoot":""}