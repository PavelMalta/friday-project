{"version":3,"sources":["main/router/routes.ts","main/ui/content/components/profile/Profile.tsx","main/ui/content/components/presentation/Presentation.tsx","main/ui/common/input/Input.tsx","main/ui/common/button/Button.tsx","main/ui/common/logo/Logo.tsx","main/ui/common/titleh2/TitleH2.tsx","main/ui/content/components/registration/Registration.tsx","main/ui/content/components/registration/api/api-registr.ts","main/ui/content/components/login/api-login.ts","main/store/login-reducer.ts","main/store/registration-reducer.ts","main/ui/content/components/registration/RegistrationPage.tsx","main/ui/content/components/login/LoginPage.tsx","main/ui/content/components/login/LoginContainer.tsx","main/ui/content/components/passwordRecover/api-passwordRecover.ts","main/store/passwordRecover-reducer.ts","main/ui/content/components/passwordRecover/forgotPassword/ForgotPassword.tsx","main/ui/content/components/passwordRecover/PasswordRecoverContainer.tsx","main/ui/content/components/packs/api-packs.ts","main/store/packs-reducer.ts","main/ui/content/components/cards/api-cards.ts","main/store/cards-reducer.ts","main/ui/common/dropdown/Dropdown.tsx","main/ui/common/pagination/Pagination.tsx","main/ui/common/rangeSlider/RangeSlider.tsx","main/ui/common/search/Search.tsx","main/ui/common/sideButton/SideButton.tsx","main/ui/common/actions/Actions.tsx","main/ui/content/components/packs/packsList/stringTablePL/StringTablePL.tsx","main/ui/content/components/packs/packsList/PacksList.tsx","main/ui/content/components/packs/Packs.tsx","main/ui/assets/images/main/back.svg","main/ui/common/rating/Rating.tsx","main/ui/content/components/cards/cardsList/stringTablePN/StringTablePN.tsx","main/ui/content/components/cards/cardsList/CardsList.tsx","main/ui/content/components/cards/Cards.tsx","main/ui/pages/error/Error.tsx","main/ui/content/components/newPassword/api-newPassword.ts","main/store/newPassword-reducer.ts","main/ui/content/components/newPassword/NewPasswordContainer.tsx","main/ui/content/Content.tsx","main/ui/header/Header.tsx","main/ui/assets/images/head/packList.svg","main/ui/assets/images/head/profole.svg","main/ui/common/head/tab/Tab.tsx","main/ui/common/head/Head.tsx","App.tsx","reportWebVitals.ts","main/store/app-reducer.ts","main/store/profile-reducer.ts","main/store/store.ts","index.tsx","main/ui/content/components/packs/packsList/PacksList.module.scss","main/ui/content/components/login/LoginPage.module.scss","main/ui/content/components/cards/cardsList/CardsList.module.scss","main/ui/content/components/passwordRecover/forgotPassword/ForgotPassword.module.scss","main/ui/content/components/newPassword/NewPassword.module.scss","main/ui/common/input/Input.module.scss","main/ui/common/head/tab/Tab.module.scss","main/ui/pages/auth/register/Register.module.scss","main/ui/common/dropdown/Dropdown.module.scss","main/ui/pages/error/Error.module.scss","main/ui/common/sideButton/SideButton.module.scss","App.module.scss","main/ui/common/search/Search.module.scss","main/ui/header/Header.module.css","main/ui/common/head/Head.module.scss","main/ui/content/Content.module.css","main/ui/common/button/Button.module.scss","main/ui/common/logo/Logo.module.scss","main/ui/common/titleh2/TitleH2.module.scss","main/ui/common/actions/Actions.module.scss"],"names":["routes","Profile","Presentation","Input","props","className","s","wrapper","style","label","title","input__item","type","name","placeholder","value","onChange","e","currentTarget","id","idName","checkbox","checkboxInput","changeVision","checkboxLable","htmlFor","span","error","Button","btn","onClick","Logo","logo","href","TitleH2","Registration","useState","passwordType","setPasswordType","passwordConfirmType","setPasswordConfirmType","loginPage","inner","form","email","emailError","onEmailChange","password","passwordError","onPasswordChange","marginTop","passwordConfirm","onPasswordConfirmChange","cancelClick","width","backgroundColor","color","marginRight","registrationButtonClick","instance","axios","create","withCredentials","baseURL","regAPI","post","authAPI","rememberMe","delete","initialState","user","isFetching","isAuth","userID","setAuthUserDataAC","payload","isFetchingAC","setEmailErrorAC","setPasswordErrorAC","setUserID","newUser","RegistrationPage","useSelector","state","login","registration","dispatch","useDispatch","setEmail","setPassword","setPasswordConfirm","to","test","length","then","response","console","log","data","catch","message","finally","setNewUserTC","LoginPage","onChangeEmail","onChangePassword","wrap","linkPassword","onclickHandler","singUp","linkSingUp","LoginContainer","setRememberMe","_id","getAuthUserData","onChangeRememberMe","passwordRecoverAPI","from","setErrorAC","ForgotPassword","forgotPassword","text","link","PasswordRecoverContainer","passwordRecover","res","recoverTC","packsAPI","packQueryParams","get","params","addPackPayload","cardsPack","idPack","updatePackPayload","put","packsTableData","cardPacks","cardPacksTotalCount","maxCardsCount","minCardsCount","page","pageCount","getPacksAC","getPacksTC","cardsAPI","cardQueryParams","newCardPayload","card","cardID","updateCardPayload","cardsTableData","cards","cardsTotalCount","maxGrade","minGrade","cardsPackId","packName","getCardsTC","Dropdown","dropdown","dropdownSelect","item","onChangeOption","target","useStyles","makeStyles","theme","createStyles","root","PaginationRounded","classes","count","Math","ceil","totalCount","Pagination","shape","event","onChangePage","rail","height","track","thumb","boxSizing","border","valuetext","RangeSlider","React","setValue","Slider","newValue","valueLabelDisplay","aria-labelledby","getAriaValueText","Search","search","input","SideButton","sideButton","btnActive","Actions","StringTablePL","onClickLearnPack","learnPack","packId","value1","value2","value3","value4","packUserId","userId","deletePack","updatePack","PacksList","packsData","packs","packsList","aside","titleH3","rangeSlider","content","textAlign","padding","marginLeft","addNewPack","item1","item2","item3","item4","item5","map","cardsCount","date","updated","Date","toLocaleDateString","day","month","year","user_name","user_id","v1","pagination","options","Packs","setOptions","useEffect","setPackNameAC","HalfRating","Rating","defaultValue","rating","precision","size","StringTablePN","CardsList","cardsData","back","icon","src","Back","alt","paddingTop","question","answer","Cards","cardsPack_id","addCardTC","deleteCard","deleteCardTC","updateCard","updateCardTC","Error","newPasswordAPI","resetPasswordToken","resetPassword","success","NewPasswordContainer","token","useParams","newPassword","resetPasswordTC","Content","contentContainer","path","exact","render","Header","headerContainer","navLinkContainer","Tab","List","Head","head","container","justifyContent","App","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","profile","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1d1af2d5.chunk.js","sourcesContent":["\r\nexport const routes = {\r\n    profile: \"/\",\r\n    login: \"/login\",\r\n    registration: \"/registration\",\r\n    notFound: \"/404\",\r\n    passwordRecover: \"/recover\",\r\n    newPassword: \"/newPassword/:token\",\r\n    presentation: \"/presentation\",\r\n    packs: \"/packs\",\r\n    cards: \"/cards\"\r\n}","import React from \"react\";\r\n\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\nexport const Presentation = () => {\r\n    return (\r\n        <div>\r\n            Presentation\r\n        </div>\r\n    )\r\n}","import s from \"./Input.module.scss\";\r\nimport React, {ChangeEvent} from \"react\";\r\n\r\ntype InputPropsType = {\r\n    title?: string\r\n    type?: string\r\n    name?: string\r\n    value?: string\r\n    style?: {}\r\n    placeholder?: string\r\n    onChange?: (string: string) => void\r\n    id?: string\r\n    htmlFor?: string\r\n    error?: string | null\r\n    idName?: string\r\n    changeVision?: () => void\r\n}\r\n\r\nexport const Input = (props: InputPropsType) => {\r\n\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.onChange && props.onChange(e.currentTarget.value)\r\n    }\r\n\r\n    const ChangeTextVision = () => {\r\n        props.changeVision && props.changeVision()\r\n    }\r\n\r\n   /* function togglePassword() {\r\n\r\n        let input = document.getElementById('inputPassword');\r\n\r\n        if (input !== null) {\r\n            if (input.getAttribute('type') === 'password') {\r\n\r\n                input.setAttribute('type', 'text');\r\n            } else {\r\n\r\n                input.setAttribute('type', 'password');\r\n            }\r\n        }\r\n        return false;\r\n    }*/\r\n\r\n\r\n\r\n    return (\r\n        <form className={s.wrapper} style={props.style}>\r\n            <label className={s.label}>{props.title}</label>\r\n            <input className={s.input__item}\r\n                   type={props.type}\r\n                   name={props.name}\r\n                   placeholder={props.placeholder}\r\n                   value={props.value}\r\n                   onChange={onChangeHandler}\r\n                   id={props.idName}>\r\n            </input>\r\n\r\n            {/*Глазик чекбокс*/}\r\n            <div className={s.checkbox}>\r\n                <div>{props.idName === 'inputPassword'\r\n                    ? <><input className={s.checkboxInput} type=\"checkbox\" onChange={ChangeTextVision} id={props.id}/>\r\n                        <label className={s.checkboxLable} htmlFor={props.htmlFor}></label></>\r\n                    : null}</div>\r\n            </div>\r\n\r\n\r\n            <span className={s.span}>{props.error !== null ? <span>{props.error}</span> : null}</span>\r\n        </form>\r\n    )\r\n}","import s from \"./Button.module.scss\";\r\n\r\ntype ButtonPropsType = {\r\n\tstyle?: {}\r\n\tonClick: () => void\r\n\tvalue?: string\r\n}\r\n\r\nexport const Button = (props: ButtonPropsType) => {\r\n\r\n\tconst onClickHandler = () => {\r\n\t\tprops.onClick()\r\n\t}\r\n\r\n    return (\r\n        <button\r\n\t\t\tclassName={s.btn}\r\n\t\t\tstyle={props.style}\r\n\t\t\tonClick={onClickHandler}\r\n\t\t> \r\n\t\t\t{props.value}\r\n\t\t</button>\r\n    );\r\n}","import s from \"./Logo.module.scss\";\r\n\r\nexport const Logo = (props: any) => {\r\n    return (\r\n        <a className={s.logo} style={props.style} href=\"#\">It-incubator</a>                  \r\n    )\r\n}","import s from \"./TitleH2.module.scss\";\r\n\r\nexport const TitleH2 = (props: any) => {\r\n    return (\r\n        <h2 className={s.title} style={props.style}>{props.value}</h2>                 \r\n    )\r\n}","import s from \"./../../../../ui/pages/auth/register/Register.module.scss\";\r\nimport {Input} from \"../../../common/input/Input\";\r\nimport {Button} from \"../../../common/button/Button\";\r\nimport {Logo} from \"../../../common/logo/Logo\";\r\nimport {TitleH2} from \"../../../common/titleh2/TitleH2\";\r\nimport React, {useState} from \"react\";\r\n\r\ntype RegistrationPropsType = {\r\n    email: string\r\n    password: string\r\n    passwordConfirm: string\r\n    emailError: string | null\r\n    passwordError: string | null\r\n    onEmailChange: (email: string) => void\r\n    onPasswordChange: (password: string) => void\r\n    onPasswordConfirmChange: (passwordConfirm: string) => void\r\n    registrationButtonClick: () => void\r\n    cancelClick: () => void\r\n}\r\n\r\nexport const Registration = (props: RegistrationPropsType) => {\r\n\r\n    const emailChange = (value: string) => {\r\n        props.onEmailChange(value)\r\n    }\r\n\r\n    const passwordChange = (value: string) => {\r\n        props.onPasswordChange(value)\r\n    }\r\n\r\n    const passwordConfirmChange = (value: string) => {\r\n        props.onPasswordConfirmChange(value)\r\n    }\r\n\r\n\r\n    const [passwordType, setPasswordType] = useState<\"password\" | \"text\">(\"password\");\r\n    const [passwordConfirmType, setPasswordConfirmType] = useState<\"password\" | \"text\">(\"password\");\r\n\r\n    const togglePasswordType = () => {\r\n            if (passwordType === 'text') {\r\n                setPasswordType('password')\r\n            } else setPasswordType('text')\r\n    }\r\n\r\n    const togglePasswordConfirmType = () => {\r\n        if (passwordConfirmType === 'text') {\r\n            setPasswordConfirmType('password')\r\n        } else setPasswordConfirmType('text')\r\n    }\r\n\r\n    return (\r\n        <div className={s.loginPage}>\r\n            <div className={s.wrapper}>\r\n                <div className={s.inner}>\r\n                    <Logo/>\r\n                    <TitleH2/>\r\n                    <div className={s.form}>\r\n                        <Input title=\"Email\"\r\n                               type=\"email\"\r\n                               name=\"email\"\r\n                               value={props.email}\r\n                               error={props.emailError}\r\n                               onChange={emailChange}/> {/* Нужно убрать глазик (логика) */}\r\n\r\n                        <Input title=\"Password\"\r\n                               type={passwordType}\r\n                               name=\"password\"\r\n                               id= \"checkbox2\"\r\n                               htmlFor= \"checkbox2\"\r\n                               value={props.password}\r\n                               error={props.passwordError}\r\n                               onChange={passwordChange}\r\n                               changeVision={togglePasswordType}\r\n                               idName='inputPassword'\r\n                               style={{marginTop: \"25px\"}}/>\r\n\r\n                        <Input title=\"Confirm password\"\r\n                               type={passwordConfirmType}\r\n                               name=\"Confirm password\"\r\n                               idName='inputPassword'\r\n                               id= \"checkbox\"\r\n                               htmlFor= \"checkbox\"\r\n                               error={props.passwordError}\r\n                               value={props.passwordConfirm}\r\n                               onChange={passwordConfirmChange}\r\n                               changeVision={togglePasswordConfirmType}\r\n                               style={{marginTop: \"25px\"}}/>\r\n                    </div>\r\n                    <form className={s.btn}>\r\n                        <Button value=\"Cancel\"\r\n                                onClick={props.cancelClick}\r\n                                style={{\r\n                                    width: \"124px\",\r\n                                    backgroundColor: \"#CDCEF4\",\r\n                                    color: \"#21268F\",\r\n                                    marginRight: \"36px\"\r\n                                }}/>\r\n                        <Button value=\"Registration\"\r\n                                onClick={props.registrationButtonClick}\r\n                                style={{width: \"187px\"}}\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/'\r\n})\r\n\r\nexport const regAPI = {\r\n\r\n    registration(email: string, password: string) {\r\n        return instance.post('auth/register', {email, password})\r\n\r\n    }\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/'\r\n})\r\n\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.post(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post('auth/login', {email, password, rememberMe})\r\n\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/me')\r\n    }\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../ui/content/components/login/api-login\";\r\n\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    user: {},\r\n    isFetching: false,\r\n    emailError: null as null | string,\r\n    passwordError: null as null | string,\r\n    isAuth: false,\r\n    userID: \"\"\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_USER_DATA':\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                isAuth: true\r\n            }\r\n        case \"IS-FETCHING\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case \"SET-EMAIL-ERROR\":\r\n            return {\r\n                ...state,\r\n                emailError: action.error\r\n            }\r\n        case \"SET-PASSWORD-ERROR\":\r\n            return {\r\n                ...state,\r\n                passwordError: action.error\r\n            }\r\n        case \"SET-USER-ID\":\r\n            return {\r\n                ...state,\r\n                userID: action.userID\r\n            }\r\n        case \"LOGOUT\":\r\n            return {\r\n                ...state,\r\n                user: {},\r\n                isAuth: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserDataAC = (payload: InitialStateType) => ({type: 'SET_USER_DATA', payload}) as const\r\nexport const isFetchingAC = (isFetching: boolean) => ({type: \"IS-FETCHING\", isFetching} as const)\r\nexport const setEmailErrorAC = (error: string | null) => ({type: \"SET-EMAIL-ERROR\", error} as const)\r\nexport const setPasswordErrorAC = (error: string | null) => ({type: \"SET-PASSWORD-ERROR\", error} as const)\r\nexport const setUserID = (userID: string) => ({type: \"SET-USER-ID\", userID} as const)\r\nexport const logoutAC = () => ({type: \"LOGOUT\"} as const)\r\n\r\n\r\nexport const getAuthUserData = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\r\n    dispatch(isFetchingAC(true))\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(response => {\r\n                console.log(response.data)\r\n                dispatch(setAuthUserDataAC(response.data))\r\n                dispatch(setUserID(response.data._id))\r\n            }\r\n        ).catch((e) => {\r\n        const error = e.response ? e.response.data.error : (e.message + \", more details in the console\")\r\n        console.log(error)\r\n        dispatch(setEmailErrorAC(error))\r\n    })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\nexport const isAuthUserData = () => (dispatch: Dispatch) => {\r\n    authAPI.getAuth()\r\n        .then(response => {\r\n                dispatch(setAuthUserDataAC(response.data))\r\n                dispatch(setUserID(response.data._id))\r\n            }\r\n        ).catch((e) => {\r\n        const error = e.response ? e.response.data.error : (e.message + \", more details in the console\")\r\n        dispatch(setEmailErrorAC(error))\r\n    })\r\n}\r\n\r\nexport const logoutTC = () => (dispatch: Dispatch) => {\r\n    authAPI.logout()\r\n        .then(response => {\r\n                dispatch(logoutAC())\r\n            }\r\n        ).catch((e) => {\r\n        const error = e.response ? e.response.data.error : (e.message + \", more details in the console\")\r\n        dispatch(setEmailErrorAC(error))\r\n    })\r\n}\r\n\r\n\r\nexport type ActionsType =\r\n    | ReturnType<typeof setAuthUserDataAC>\r\n    | ReturnType<typeof setEmailErrorAC>\r\n    | ReturnType<typeof setPasswordErrorAC>\r\n    | ReturnType<typeof isFetchingAC>\r\n    | ReturnType<typeof setUserID>\r\n    | ReturnType<typeof logoutAC>\r\n\r\n\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {regAPI} from \"../ui/content/components/registration/api/api-registr\";\r\nimport {isFetchingAC} from \"./login-reducer\";\r\n\r\nconst initialState = {\r\n    newUser: {},\r\n    emailError: null as null | string,\r\n    passwordError: null as null | string,\r\n\r\n}\r\n\r\ntype newUserType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET_NEW_USER\": {\r\n            return {\r\n                ...state,\r\n                newUser: action.payload\r\n            }\r\n        }\r\n        case \"SET-EMAIL-ERROR\":\r\n            return {...state,\r\n                emailError: action.error}\r\n        case \"SET-PASSWORD-ERROR\":\r\n            return {...state,\r\n                passwordError: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setNewUserAC = (payload: InitialStateType) => ({type: 'SET_NEW_USER', payload} as const);\r\nexport const setEmailErrorAC = (error: string | null) => ({type: \"SET-EMAIL-ERROR\", error} as const);\r\nexport const setPasswordErrorAC = (error: string | null) => ({type: \"SET-PASSWORD-ERROR\", error} as const);\r\n\r\nexport const setNewUserTC = (email: string, password: string) => (dispatch: Dispatch) => {\r\n    dispatch(isFetchingAC(true))\r\n    regAPI.registration(email, password)\r\n        .then(response => {\r\n            console.log(response.data)\r\n            dispatch(setNewUserAC(response.data))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response ? e.response.data.error : (e.message + \", more details in the console\")\r\n            dispatch(setEmailErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\nexport type SetNewUserType = ReturnType<typeof setNewUserAC>;\r\n\r\ntype ActionType = SetNewUserType\r\n                | ReturnType<typeof setEmailErrorAC>\r\n                | ReturnType<typeof setPasswordErrorAC>;","import {Registration} from \"./Registration\";\r\nimport React, {useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setNewUserTC} from \"../../../../store/registration-reducer\";\r\nimport {setEmailErrorAC, setPasswordErrorAC} from \"../../../../store/registration-reducer\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nexport const RegistrationPage = () => {\r\n    const isFetching = useSelector<AppRootStateType, boolean>((state) => state.login.isFetching);\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n    const emailError = useSelector<AppRootStateType, string | null>((state) => state.registration.emailError)\r\n    const passwordError = useSelector<AppRootStateType, string | null>((state) => state.registration.passwordError)\r\n    const dispatch = useDispatch()\r\n\r\n    let [email, setEmail] = useState<string>('nya-admin@nya.nya');\r\n    let [password, setPassword] = useState<string>('1qazxcvBG');\r\n    let [passwordConfirm, setPasswordConfirm] = useState<string>('1qazxcvBG');\r\n\r\n    const onEmailChange = (email: string) => {\r\n        setEmail(email)\r\n        if (emailError !== null) {\r\n            dispatch(setEmailErrorAC(null))\r\n        }\r\n    }\r\n    const onPasswordChange = (password: string) => {\r\n        setPassword(password)\r\n        if (passwordError !== null) {\r\n            dispatch(setPasswordErrorAC(null))\r\n        }\r\n    }\r\n    const onPasswordConfirm = (passwordConfirm: string) => {\r\n        setPasswordConfirm(passwordConfirm)\r\n        if (passwordError !== null) {\r\n            dispatch(setPasswordErrorAC(null))\r\n        }\r\n    }\r\n\r\n    const registrationButtonClick = () => {\r\n        if (email === \"\") {\r\n            dispatch(setEmailErrorAC('Required'))\r\n        } else if (password === \"\") {\r\n            dispatch(setPasswordErrorAC('Required'))\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            dispatch(setEmailErrorAC('Invalid email address'))\r\n        } else if (password.length < 8) {\r\n            dispatch(setPasswordErrorAC('Password must be more 7 symbols'))\r\n        } else if (password !== passwordConfirm) {\r\n            dispatch(setPasswordErrorAC('Password & confirm password fields are not equally'));\r\n            setPassword('');\r\n            setPasswordConfirm('');\r\n        } else {\r\n            dispatch(setNewUserTC(email, password));\r\n            // setPassword('');\r\n            // setPasswordConfirm('');\r\n        }\r\n    }\r\n\r\n    const cancelClick = () => {\r\n        setEmail('');\r\n        setPassword('');\r\n        setPasswordConfirm('');\r\n    }\r\n\r\n    if (isFetching) {\r\n        return <div>Loading...</div>\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <Registration email={email}\r\n                         password={password}\r\n                         emailError={emailError}\r\n                         passwordError={passwordError}\r\n                         passwordConfirm={passwordConfirm}\r\n                         onEmailChange={onEmailChange}\r\n                         onPasswordChange={onPasswordChange}\r\n                         onPasswordConfirmChange={onPasswordConfirm}\r\n                         registrationButtonClick={registrationButtonClick}\r\n                         cancelClick={cancelClick}\r\n    />\r\n\r\n}","import s from \"./LoginPage.module.scss\";\r\nimport {Input} from \"../../../common/input/Input\";\r\nimport {Button} from \"../../../common/button/Button\";\r\nimport {Logo} from \"../../../common/logo/Logo\";\r\nimport {TitleH2} from \"../../../common/titleh2/TitleH2\";\r\nimport React, {ChangeEvent, useState} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {routes} from \"../../../../router/routes\";\r\n\r\ntype LoginPagePropsType = {\r\n    email: string\r\n    emailError: string | null\r\n    passwordError: string | null\r\n    password: string\r\n    rememberMe: boolean\r\n    onclickHandler: () => void\r\n    onChangeEmail: (email: string) => void\r\n    onChangePassword: (password: string)=> void\r\n    onChangeRememberMe: (rememberMe: boolean) => void\r\n\r\n}\r\n\r\nexport const LoginPage = (props:LoginPagePropsType) => {\r\n\r\n    const changeEmail = (value: string) => {\r\n        props.onChangeEmail(value)\r\n    }\r\n    const changePassword = (value: string) => {\r\n        props.onChangePassword(value)\r\n    }\r\n    const changeRememberMe = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.onChangeRememberMe(e.currentTarget.checked)\r\n    }\r\n\r\n    const [passwordType, setPasswordType] = useState<\"password\" | \"text\">(\"password\");\r\n\r\n    const togglePasswordType = () => {\r\n        if (passwordType === 'text') {\r\n            setPasswordType('password')\r\n        } else setPasswordType('text')\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.loginPage}>\r\n            <div className={s.wrapper}>\r\n                <div className={s.inner}>\r\n                    <Logo/>\r\n                    <TitleH2 value= \"Sign In\"/>\r\n                    <div className={s.form}>\r\n                        <Input title=\"Email\"\r\n                               type= \"email\"\r\n                               name=\"email\"\r\n                               error={props.emailError}\r\n                               placeholder={'email'}\r\n                               value={props.email}\r\n                               onChange={changeEmail}\r\n                               style= {{marginTop:\"25px\"}}\r\n                               idName={'inputEmail'}\r\n                        />\r\n\r\n                        {/* Нужно убрать глазик (логика) */}\r\n                        <Input title=\"Password\"\r\n                               // type= \"password\"\r\n                               type= {passwordType}\r\n                               name=\"password\"\r\n                               error={props.passwordError}\r\n                               placeholder={'password'}\r\n                               value={props.password}\r\n                               onChange={changePassword}\r\n                               style= {{marginTop:\"25px\"}}\r\n                               idName={'inputPassword'}\r\n                               id= \"checkbox2\"\r\n                               htmlFor= \"checkbox2\"\r\n                               changeVision={togglePasswordType}\r\n                        />\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className={s.wrap}>\r\n                        <div className={s.checkbox}>\r\n\r\n                            <input className={s.checkboxInput} type=\"checkbox\" id=\"checkbox1\"\r\n                            />\r\n                            <label className={s.checkboxLable} htmlFor=\"checkbox1\">Rememder me</label>\r\n                        </div>\r\n                        <NavLink className={s.linkPassword} to={routes.passwordRecover}>Forgot Password</NavLink>\r\n                        {/*<a className={s.linkPassword} href=\"\">Forgot Password</a>*/}\r\n                    </div>\r\n                    <div className={s.btn}>\r\n                        <Button value=\"Login\"\r\n                                onClick={props.onclickHandler}\r\n\r\n                        />\r\n                    </div>\r\n                    <div className={s.singUp}>\r\n                        <label className={s.span} >Don’t have an account?</label>\r\n                        <NavLink className={s.linkSingUp} to={routes.registration}>Sign Up</NavLink>\r\n                        {/*<a className={s.linkSingUp} href=\"#\">Sign Up</a>*/}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useDispatch, useSelector} from \"react-redux\"\r\nimport React, {useState} from \"react\";\r\nimport {getAuthUserData, setEmailErrorAC, setPasswordErrorAC} from \"../../../../store/login-reducer\";\r\nimport {LoginPage} from \"./LoginPage\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const LoginContainer = () => {\r\n\r\n    const isFetching = useSelector<AppRootStateType, boolean>((state) => state.login.isFetching)\r\n    const emailError = useSelector<AppRootStateType, string | null>((state) => state.login.emailError)\r\n    const passwordError = useSelector<AppRootStateType, string | null>((state) => state.login.passwordError)\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    let [email, setEmail] = useState<string>('nya-admin@nya.nya')\r\n    let [password, setPassword] = useState<string>('1qazxcvBG')\r\n    let [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const onChangeEmail = (email: string) => {\r\n        setEmail(email)\r\n        if (emailError !== null) {\r\n            dispatch(setEmailErrorAC(null))\r\n        }\r\n    }\r\n    const onChangePassword = (password: string) => {\r\n        setPassword(password)\r\n        if (passwordError !== null) {\r\n            dispatch(setPasswordErrorAC(null))\r\n        }\r\n    }\r\n    const onChangeRememberMe = (rememberMe: boolean) => {\r\n        setRememberMe(!rememberMe)\r\n    }\r\n\r\n    let onclickHandler = () => {\r\n        if (email === \"\") {\r\n            dispatch(setEmailErrorAC('Required'))\r\n        } else if (password === \"\") {\r\n            dispatch(setPasswordErrorAC('Required'))\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            dispatch(setEmailErrorAC('Invalid email address'))\r\n        } else if (password.length < 8) {\r\n            dispatch(setPasswordErrorAC('Password must be more 7 symbols'))\r\n        } else {\r\n            dispatch(getAuthUserData(email, password, rememberMe))\r\n            setEmail('')\r\n            setPassword('')\r\n            setRememberMe(false)\r\n        }\r\n    }\r\n\r\n    if (isFetching) {\r\n        return <div>Loading...</div>\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={'/packs'}/>\r\n    }\r\n\r\n    return <LoginPage email={email}\r\n                      emailError={emailError}\r\n                      passwordError={passwordError}\r\n                      password={password}\r\n                      rememberMe={rememberMe}\r\n                      onclickHandler={onclickHandler}\r\n                      onChangeEmail={onChangeEmail}\r\n                      onChangePassword={onChangePassword}\r\n                      onChangeRememberMe={onChangeRememberMe}/>\r\n\r\n\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0'\r\n})\r\n\r\nconst from = 'shamashov87@mail.ru';\r\nconst message = `<div>password recover link: <a href='https://pavelmalta.github.io/friday-project/#/newPassword/$token$'>Link</a></div>`\r\n\r\nexport const passwordRecoverAPI = {\r\n    recover(email: string) {\r\n        return instance.post('auth/forgot', {email, from, message})\r\n    }\r\n}","import {Dispatch} from \"redux\"\r\nimport {passwordRecoverAPI} from \"../ui/content/components/passwordRecover/api-passwordRecover\";\r\n\r\nconst initialState = {\r\n    isFetching: false,\r\n    error: null as null | string\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const passwordRecoverReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"IS-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const isFetchingAC = (isFetching: boolean) => ({type: \"IS-FETCHING\", isFetching} as const)\r\nexport const setErrorAC = (error: string | null) => ({type: \"SET-ERROR\", error} as const)\r\n\r\nexport const recoverTC = (email: string) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(isFetchingAC(true))\r\n    passwordRecoverAPI.recover(email)\r\n        .then(res => {\r\n            console.log(res.data)\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response ? e.response.data.error : (e.message + \", more details in the console\")\r\n            dispatch(setErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\ntype ActionType = ReturnType<typeof isFetchingAC> | ReturnType<typeof setErrorAC>","import s from \"./ForgotPassword.module.scss\";\r\nimport {Input} from \"../../../../common/input/Input\";\r\nimport {Button} from \"../../../../common/button/Button\";\r\nimport {Logo} from \"../../../../common/logo/Logo\";\r\nimport {TitleH2} from \"../../../../common/titleh2/TitleH2\";\r\n\r\nexport type ForgotPasswordPropsType = {\r\n    email: string\r\n    error: string | null\r\n    onChangeEmail: (value: string) => void\r\n    onclickHandler: () => void\r\n    isFetching: boolean\r\n}\r\n\r\nexport const ForgotPassword = (props: ForgotPasswordPropsType) => {\r\n    return (\r\n        <div className={s.forgotPassword}>\r\n            <div className={s.wrapper}>\r\n                <div className={s.inner}>\r\n                    <Logo/>\r\n                    <TitleH2 value=\"Sign In\"/>\r\n                    <div className={s.form}>\r\n                        <Input title=\"Email\"\r\n                               type=\"email\"\r\n                               name=\"email\"\r\n                               value={props.email}\r\n                               onChange={props.onChangeEmail}\r\n                               error={props.error}\r\n                        /> {/*Нужно убрать глазик (логика)*/}\r\n                    </div>\r\n                    <span className={s.text}>Enter your email address and we will send you further instructions </span>\r\n                    <div className={s.btn}>\r\n                        {props.isFetching\r\n                            ? <span>Loading...</span>\r\n                            : <Button value=\"Send Instructions\"\r\n                                      onClick={props.onclickHandler}\r\n                            />}\r\n                    </div>\r\n                    <div className={s.singUp}>\r\n                        <a className={s.link} href=\"#\">Did you remember your password?</a>\r\n                        <a className={s.linkSingUp} href=\"#\">Try logging in</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport {recoverTC, setErrorAC} from \"../../../../store/passwordRecover-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport {ForgotPassword} from \"./forgotPassword/ForgotPassword\";\r\n\r\n\r\nexport const PasswordRecoverContainer = () => {\r\n    const [email, setEmail] = useState(\"shamashov87@mail.ru\")\r\n\r\n    const isFetching = useSelector<AppRootStateType, boolean>((state) => state.passwordRecover.isFetching)\r\n    const error = useSelector<AppRootStateType, string | null>((state) => state.passwordRecover.error)\r\n    const dispatch = useDispatch();\r\n\r\n    const onChangeEmail = (value: string) => {\r\n        setEmail(value)\r\n        if (error !== null) {\r\n            dispatch(setErrorAC(null))\r\n        }\r\n    }\r\n\r\n    const onclickHandler = () => {\r\n        if (email === \"\") {\r\n            dispatch(setErrorAC('Required'))\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            dispatch(setErrorAC('Invalid email address'))\r\n        } else {\r\n            dispatch(recoverTC(email))\r\n            setEmail(\"\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ForgotPassword email={email}\r\n                         error={error}\r\n                         onChangeEmail={onChangeEmail}\r\n                         onclickHandler={onclickHandler}\r\n                        isFetching={isFetching}\r\n        />\r\n    )\r\n}\r\n\r\n","import axios, {AxiosResponse} from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/'\r\n})\r\n\r\n\r\nexport const packsAPI = {\r\n    getPacks(packQueryParams: PacksQueryParamsType) {\r\n        return instance.get<PackResponseType, AxiosResponse<PackResponseType>>('cards/pack', {params: packQueryParams})\r\n    },\r\n    addPack(addPackPayload: AddPackPayloadType) {\r\n        return instance.post('cards/pack', {cardsPack: addPackPayload})\r\n    },\r\n    deletePack(idPack: string) {\r\n        return instance.delete(`cards/pack?id=${idPack}`)\r\n    },\r\n    updatePack(updatePackPayload: updatePackPayloadType) {\r\n        return instance.put('cards/pack', {cardsPack: updatePackPayload})\r\n    }\r\n}\r\n\r\nexport type cardPacksType = {\r\n    _id: string\r\n    user_id: string\r\n    user_name: string\r\n    private: boolean\r\n    name: string\r\n    path: string\r\n    grate: number\r\n    shots: number\r\n    deckCover: string\r\n    cardsCount: number\r\n    type: string\r\n    rating: number\r\n    created: string\r\n    updated: string\r\n    more_id: string\r\n    __v: string\r\n}\r\n\r\nexport type PackResponseType = {\r\n    cardPacks: Array<cardPacksType>\r\n    page: number\r\n    pageCount: number\r\n    cardPacksTotalCount: number\r\n    minCardsCount: number\r\n    maxCardsCount: number\r\n\r\n}\r\n\r\nexport type PacksQueryParamsType = {\r\n    packName?: string\r\n    pageCount?: number\r\n    min?: number\r\n    max?: number\r\n    page?: number\r\n}\r\n\r\nexport type AddPackPayloadType = {\r\n    name?: string\r\n    path?: string\r\n    grade?: number\r\n    shots?: number\r\n    rating?: number\r\n    deckCover?: string\r\n    private?: boolean\r\n    type?: string\r\n}\r\n\r\nexport type updatePackPayloadType = {\r\n    _id: string\r\n    name?: string\r\n}\r\n\r\n","import {\r\n    AddPackPayloadType,\r\n    PackResponseType,\r\n    packsAPI,\r\n    PacksQueryParamsType, updatePackPayloadType\r\n} from \"../ui/content/components/packs/api-packs\";\r\nimport {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../ui/content/components/login/api-login\";\r\nimport {setAuthUserDataAC, setUserID} from \"./login-reducer\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppRootStateType} from \"./store\";\r\n\r\n\r\nconst initialState = {\r\n    packsTableData: {\r\n        cardPacks: [],\r\n        cardPacksTotalCount: 0,\r\n        maxCardsCount: 0,\r\n        minCardsCount: 0,\r\n        page: 1,\r\n        pageCount: 0\r\n    },\r\n    isFetching: false\r\n}\r\n\r\nexport const packsReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"GET-PACKS\":\r\n            return {...state, packsTableData: action.packsTableData}\r\n        case \"IS-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// Actions\r\nexport const getPacksAC = (packsTableData: PackResponseType) => ({type: \"GET-PACKS\", packsTableData} as const)\r\nconst isFetchingAC = (isFetching: boolean) => ({type: \"IS-FETCHING\", isFetching} as const)\r\n\r\n\r\n// Thunks\r\nexport const getStartPacksTC = (packQueryParams: PacksQueryParamsType) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(isFetchingAC(true))\r\n    authAPI.getAuth()\r\n        .then(res => {\r\n            dispatch(setAuthUserDataAC(res.data))\r\n            dispatch(setUserID(res.data._id))\r\n            packsAPI.getPacks(packQueryParams)\r\n                .then(res => {\r\n                    dispatch(getPacksAC(res.data))\r\n                })\r\n                .catch((e) => {\r\n                })\r\n        })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\nexport const getPacksTC = (packQueryParams: PacksQueryParamsType) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(isFetchingAC(true))\r\n    packsAPI.getPacks(packQueryParams)\r\n        .then(res => {\r\n            dispatch(getPacksAC(res.data))\r\n        })\r\n        .catch((e) => {\r\n\r\n        })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\nexport const addCardsPackTC = (addPackPayload: AddPackPayloadType, packQueryParams: PacksQueryParamsType): ThunkType => (dispatch) => {\r\n    dispatch(isFetchingAC(true))\r\n    packsAPI.addPack(addPackPayload)\r\n        .then(() => {\r\n            dispatch(getPacksTC(packQueryParams))\r\n        })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\nexport const deleteCardsPackTC = (idPack: string, packQueryParams: PacksQueryParamsType): ThunkType => (dispatch) => {\r\n    dispatch(isFetchingAC(true))\r\n    packsAPI.deletePack(idPack)\r\n        .then(() => {\r\n            dispatch(getPacksTC(packQueryParams))\r\n        })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\nexport const updateCardsPackTC = (updatePackPayload: updatePackPayloadType, packQueryParams: PacksQueryParamsType): ThunkType => (dispatch) => {\r\n    dispatch(isFetchingAC(true))\r\n    packsAPI.updatePack(updatePackPayload)\r\n        .then(() => {\r\n            dispatch(getPacksTC(packQueryParams))\r\n        })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\n\r\n// Types\r\ntype InitialStateType = {\r\n    packsTableData: PackResponseType\r\n    isFetching: boolean\r\n}\r\n\r\ntype ThunkType = ThunkAction<void, AppRootStateType, {}, ActionType>\r\n\r\ntype ActionType = ReturnType<typeof getPacksAC>\r\n    | ReturnType<typeof isFetchingAC>\r\n    | ReturnType<typeof isFetchingAC>\r\n    | ReturnType<typeof setAuthUserDataAC>\r\n    | ReturnType<typeof setUserID>","import axios, {AxiosResponse} from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/'\r\n})\r\n\r\n\r\nexport const cardsAPI = {\r\n    getCards(cardQueryParams: cardQueryParamsType) {\r\n        return instance.get<CardsResponseType, AxiosResponse<CardsResponseType>>('cards/card', {params: cardQueryParams})\r\n    },\r\n    addCard(newCardPayload: NewCardPayloadType) {\r\n        return instance.post('cards/card',{card: newCardPayload})\r\n    },\r\n    deleteCard(cardID: string) {\r\n        return instance.delete(`cards/card/?id=${cardID}`)\r\n    },\r\n    updateCard(updateCardPayload: UpdateCardPayloadType) {\r\n        return instance.put('cards/card', {card: updateCardPayload})\r\n    }\r\n}\r\n\r\n\r\nexport type cardQueryParamsType = {\r\n    cardAnswer?: string\r\n    cardQuestion?: string\r\n    cardsPack_id: string\r\n    min?: number\r\n    max?: number\r\n    page?: number\r\n    pageCount?: number\r\n}\r\n\r\nexport type CardsResponseType = {\r\n    cards: Array<CardsType>\r\n    cardsTotalCount: number\r\n    maxGrade: number\r\n    minGrade: number\r\n    page: number\r\n    pageCount: number\r\n}\r\n\r\nexport type CardsType = {\r\n    answer: string\r\n    question: string\r\n    cardsPack_id: string\r\n    grade: number\r\n    rating: number\r\n    shots: number\r\n    type: string\r\n    user_id: string\r\n    created: string\r\n    updated: string\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport type NewCardPayloadType = {\r\n    cardsPack_id: string\r\n    question?: string\r\n    answer?: string\r\n    grade?: number\r\n    shots?: number\r\n    rating?: number\r\n    answerImg?: string\r\n    questionImg?: string\r\n    questionVideo?: string\r\n    answerVideo?: string\r\n    type?: string\r\n}\r\n\r\nexport type UpdateCardPayloadType = {\r\n    _id: string\r\n    question?: string\r\n    answer?: string\r\n    comments?: string\r\n}\r\n","import {\r\n    cardQueryParamsType,\r\n    cardsAPI,\r\n    CardsResponseType,\r\n    NewCardPayloadType, UpdateCardPayloadType\r\n} from \"../ui/content/components/cards/api-cards\";\r\nimport {Dispatch} from \"redux\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppRootStateType} from \"./store\";\r\n\r\nconst initialState = {\r\n     cardsTableData: {\r\n         cards: [],\r\n         cardsTotalCount: 0,\r\n         maxGrade: 0,\r\n         minGrade: 0,\r\n         page: 0,\r\n         pageCount: 0\r\n     },\r\n    isFetching: false,\r\n    cardsPackId: \"\",\r\n    packName: \"\"\r\n}\r\n\r\nexport const cardsReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"GET-CARDS\":\r\n            return {...state, cardsTableData: action.cardsTableData}\r\n        case \"IS-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"SET-CARDS-PACK-ID\":\r\n            return {...state, cardsPackId: action.cardsPackId}\r\n        case \"SET-PACK-NAME\":\r\n            return {...state, packName: action.packName}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Actions\r\nconst getCardsAC = (cardsTableData: CardsResponseType) => ({type: \"GET-CARDS\", cardsTableData} as const)\r\nconst isFetchingAC = (isFetching: boolean) => ({type: \"IS-FETCHING\", isFetching} as const)\r\nexport const setCardsPackIdAC = (cardsPackId: string) => ({type: \"SET-CARDS-PACK-ID\", cardsPackId} as const)\r\nexport const setPackNameAC = (packName: string) => ({type: \"SET-PACK-NAME\", packName} as const)\r\n\r\n\r\n//Thunks\r\nexport const getCardsTC = (cardQueryParams: cardQueryParamsType) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(isFetchingAC(true))\r\n    cardsAPI.getCards(cardQueryParams)\r\n        .then(res => {\r\n            dispatch(getCardsAC(res.data))\r\n        })\r\n        .catch((e) => {\r\n\r\n        })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\nexport const addCardTC = (newCardPayload: NewCardPayloadType, cardQueryParams: cardQueryParamsType):ThunkType => (dispatch) => {\r\n    dispatch(isFetchingAC(true))\r\n    cardsAPI.addCard(newCardPayload)\r\n        .then(res => {\r\n            dispatch(getCardsTC(cardQueryParams))\r\n        })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\nexport const deleteCardTC = (cardID: string, cardQueryParams: cardQueryParamsType):ThunkType => (dispatch) => {\r\n    dispatch(isFetchingAC(true))\r\n    cardsAPI.deleteCard(cardID)\r\n        .then(res => {\r\n            dispatch(getCardsTC(cardQueryParams))\r\n        })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\nexport const updateCardTC = (updateCardPayload: UpdateCardPayloadType, cardQueryParams: cardQueryParamsType):ThunkType => (dispatch) => {\r\n    dispatch(isFetchingAC(true))\r\n    cardsAPI.updateCard(updateCardPayload)\r\n        .then(res => {\r\n            dispatch(getCardsTC(cardQueryParams))\r\n        })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\n\r\n//Types\r\nexport type InitialStateType = {\r\n    cardsTableData: CardsResponseType\r\n    isFetching: boolean\r\n    cardsPackId: string\r\n    packName: string\r\n}\r\n\r\ntype ThunkType = ThunkAction<void, AppRootStateType, {}, ActionType>\r\n\r\ntype ActionType = ReturnType<typeof getCardsAC>\r\n                | ReturnType<typeof isFetchingAC>\r\n                | ReturnType<typeof setCardsPackIdAC>\r\n                | ReturnType<typeof setPackNameAC>","import React from \"react\";\r\nimport { ChangeEvent } from \"react\";\r\n\r\nimport s from \"./Dropdown.module.scss\";\r\n\r\nexport const Dropdown = (props: any) => {\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        props.onChangeOption(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dropdown}>\r\n            <span className={s.text}>Show</span>\r\n            <div className={s.dropdownSelect}>\r\n                <select className={s.item} onChange={onChangeHandler}>\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"10\">10</option>\r\n                    <option value=\"25\">25</option>\r\n                    <option value=\"50\">50</option>\r\n                    <option value=\"100\">100</option>\r\n                </select>\r\n            </div>\r\n            <span className={s.text}>Cards per Page</span>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& > *': {\r\n        // marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function PaginationRounded(props: any) {\r\n  const classes = useStyles();\r\n\r\n  const count = Math.ceil(props.totalCount / props.pageCount)\r\n    const onChangeHandler = (event: object, page: number) => {\r\n      props.onChangePage(page)\r\n    }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Pagination count={count} shape=\"rounded\" onChange={onChangeHandler} page={props.page}/>\r\n    </div>\r\n    \r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 196,\r\n    },\r\n    rail: {\r\n        backgroundColor: \"#919DC8\",\r\n        height: 5,  \r\n    },\r\n    track: {\r\n        backgroundColor: \"#21268F\",\r\n        height: 5,  \r\n    },\r\n    thumb: {\r\n        width:16,\r\n        height: 16,\r\n        boxSizing: \"border-box\",\r\n        border: \"4px solid #21268F\",\r\n        backgroundColor: \"#fff\",\r\n    },\r\n});\r\n\r\nfunction valuetext(value: number) {\r\n    return `${value}°C`;\r\n}\r\n\r\nexport default function RangeSlider() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState<number[]>([20, 37]);\r\n\r\n    const handleChange = (event: any, newValue: number | number[]) => {\r\n    setValue(newValue as number[]);\r\n    };\r\n\r\nreturn (\r\n        <Slider\r\n        value={value}\r\n        onChange={handleChange}\r\n        valueLabelDisplay=\"auto\"\r\n        aria-labelledby=\"range-slider\"\r\n        getAriaValueText={valuetext}\r\n        classes={classes}\r\n        />\r\n);\r\n}\r\n","import s from \"./Search.module.scss\";\r\n\r\nexport const Search = (props: any) => {\r\n    return (\r\n        <form className={s.search} style={props.style}>\r\n            <input className={s.input} type=\"text\" placeholder=\"Search...\"></input>\r\n        </form>\r\n    )\r\n}","import s from \"./SideButton.module.scss\";\r\n\r\nexport const SideButton = () => {\r\n    return (\r\n        <div className={s.sideButton}>\r\n            <button className={s.btnActive}>My</button>\r\n            <button className={s.btn}>All</button>\r\n        </div>\r\n    )\r\n}","import s from \"./Actions.module.scss\";\r\n\r\nexport const Actions = (props: any) => {\r\n    const onClickHandler = () => {\r\n        props.onClick()\r\n    }\r\n    return (\r\n        <button className={s.btn} style={props.style} onClick={onClickHandler}>\r\n            {props.value}\r\n        </button>\r\n            \r\n    )\r\n}","import React from \"react\";\r\nimport { Actions } from \"../../../../../common/actions/Actions\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype StringPropsType = {\r\n    value1: string\r\n    value2: number\r\n    value3: string\r\n    value4: string\r\n    packUserId: string\r\n    userId: string\r\n    packId: string\r\n    deletePack: (packID: string) => void\r\n    updatePack: (packID: string, title: string) => void\r\n    learnPack: (packID: string, packName: string) => void\r\n}\r\n\r\nexport const StringTablePL = (props: StringPropsType) => {\r\n\r\n    const onClickDeletePack = () => {\r\n        props.deletePack(props.packId)\r\n    }\r\n    const onClickUpdatePack = () => {\r\n        props.updatePack(props.packId, \"Update successful\")\r\n    }\r\n    const onClickLearnPack = () => {\r\n        props.learnPack(props.packId, props.value1)\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <td>{props.value1}</td>\r\n            <td>{props.value2}</td>\r\n            <td>{props.value3}</td>\r\n            <td>{props.value4}</td>\r\n            {props.packUserId === props.userId\r\n                ? <td>\r\n                    <Actions value=\"Delete\"\r\n                             style={{backgroundColor: \"#F1453D\", color: \"#fff\"}}\r\n                             onClick={onClickDeletePack}\r\n                    />\r\n                    <Actions value=\"Edit\"\r\n                             onClick={onClickUpdatePack}\r\n                    />\r\n                    <NavLink to={`/cards/${props.packId}`}>\r\n                        <Actions value=\"Learn\"\r\n                                 onClick={onClickLearnPack}\r\n                        />\r\n                    </NavLink>\r\n                </td>\r\n                : <td>\r\n                    <NavLink to={`/cards/${props.packId}`}>\r\n                        <Actions value=\"Learn\"\r\n                                 onClick={onClickLearnPack}\r\n                        />\r\n                    </NavLink>\r\n                </td>\r\n            }\r\n\r\n        </tr>\r\n    )\r\n}","import { Button } from \"../../../../common/button/Button\";\r\nimport { Dropdown } from \"../../../../common/dropdown/Dropdown\";\r\nimport PaginationRounded from \"../../../../common/pagination/Pagination\";\r\nimport RangeSlider from \"../../../../common/rangeSlider/RangeSlider\";\r\nimport { Search } from \"../../../../common/search/Search\";\r\nimport { SideButton } from \"../../../../common/sideButton/SideButton\";\r\nimport { StringTablePL } from \"./stringTablePL/StringTablePL\";\r\nimport { TitleH2 } from \"../../../../common/titleh2/TitleH2\";\r\nimport s from \"./PacksList.module.scss\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../../store/store\";\r\nimport {PackResponseType} from \"../../../../content/components/packs/api-packs\";\r\nimport {v1} from \"uuid\";\r\nimport {SelectValueType} from \"../Packs\";\r\n\r\ntype PacksListType = {\r\n    userID: string\r\n    addNewPack: () => void\r\n    deletePack: (packID: string) => void\r\n    updatePack: (packID: string, title: string) => void\r\n    learnPack: (packID: string, packName: string) => void\r\n    onChangePage: (page: number) => void\r\n    value: SelectValueType\r\n    onChangeOption: (value: SelectValueType) => void\r\n}\r\n\r\nexport const PacksList = (props: PacksListType) => {\r\n\r\n    const packsData = useSelector<AppRootStateType, PackResponseType>(state => state.packs.packsTableData)\r\n\r\n    const formatDate = (date: string): string => {\r\n        return new Date(date).toLocaleDateString(\"ru\", {\r\n            day: \"2-digit\",\r\n            month: \"2-digit\",\r\n            year: \"numeric\"\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={s.packsList}>\r\n            <aside className={s.aside}>\r\n                <h3 className={s.titleH3}>Show packs cards</h3>\r\n                <SideButton />\r\n                <h3 className={s.titleH3}>Number of cards</h3>\r\n                <div className={s.rangeSlider}>\r\n                    <RangeSlider/>\r\n                </div>               \r\n            </aside>\r\n            <div className={s.content}>\r\n                <TitleH2 value=\"Packs list\"\r\n                    style={{ textAlign: \"start\", padding: \"24px 0 15px 0\"}} />\r\n                <div className={s.form}>\r\n                    <Search/>\r\n                    <Button value=\"Add new pack\"\r\n                            style= {{width: \"184px\", marginLeft: \"24px\" }}\r\n                            onClick= {props.addNewPack}\r\n                    />\r\n                </div>\r\n                \r\n                <div className={s.wrap}>\r\n                    <table>\r\n                        <tr>\r\n                            <th className={s.item1}>Name</th>\r\n                            <th className={s.item2}>Cards</th>\r\n                            <th className={s.item3}>Last Updated</th>\r\n                            <th className={s.item4}>Created by</th>\r\n                            <th className={s.item5}>Actions</th>\r\n                        </tr>\r\n                        {packsData.cardPacks.map((item) => {\r\n                            return (\r\n                                    <StringTablePL\r\n                                        key={v1()}\r\n                                        value1={item.name}\r\n                                        value2={item.cardsCount}\r\n                                        value3={formatDate(item.updated)}\r\n                                        value4={item.user_name}\r\n                                        packUserId={item.user_id}\r\n                                        userId={props.userID}\r\n                                        packId={item._id}\r\n                                        deletePack={props.deletePack}\r\n                                        updatePack={props.updatePack}\r\n                                        learnPack={props.learnPack}\r\n                                    />\r\n                                )})}\r\n                    </table>\r\n                </div>\r\n                <div className={s.pagination}>\r\n                    <PaginationRounded totalCount={packsData.cardPacksTotalCount}\r\n                                       pageCount={packsData.pageCount}\r\n                                       page={packsData.page}\r\n                                       onChangePage={props.onChangePage}\r\n                    />\r\n                    <Dropdown\r\n                        options={[5, 10, 25, 50, 100]}\r\n                        value={props.value}\r\n                        onChangeOption={props.onChangeOption}\r\n                    />\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    addCardsPackTC,\r\n    deleteCardsPackTC, getPacksTC,\r\n    getStartPacksTC,\r\n    updateCardsPackTC\r\n} from \"../../../../store/packs-reducer\";\r\nimport {setCardsPackIdAC, setPackNameAC} from \"../../../../store/cards-reducer\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PackResponseType} from \"./api-packs\";\r\nimport {PacksList} from \"./packsList/PacksList\";\r\n\r\nexport type SelectValueType = 5 | 10 | 25 | 50 | 100;\r\n\r\nexport const Packs = () => {\r\n\r\n    const [options, setOptions] = useState<SelectValueType>(10)\r\n\r\n    const userID = useSelector<AppRootStateType, string>(state => state.login.userID)\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n    const packsData = useSelector<AppRootStateType, PackResponseType>(state => state.packs.packsTableData)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getStartPacksTC({pageCount: options, page: packsData.page}))\r\n    }, [dispatch, options])\r\n\r\n    const addPack = () => {\r\n        dispatch(addCardsPackTC({name: \"Y menia polychilos\"}, {pageCount: options}))\r\n    }\r\n    const deletePack = (packId: string) => {\r\n        dispatch(deleteCardsPackTC(packId, {pageCount: options, page: packsData.page}))\r\n    }\r\n    const updatePack = (packId: string, title: string) => {\r\n        dispatch(updateCardsPackTC({_id: packId, name: title}, {pageCount: options, page: packsData.page}))\r\n    }\r\n    const learnPack = (packId: string, packName: string) => {\r\n        debugger\r\n        dispatch(setCardsPackIdAC(packId))\r\n        dispatch(setPackNameAC(packName))\r\n    }\r\n    const onChangePage = (page: number) => {\r\n        dispatch(getPacksTC({pageCount: options, page: page}))\r\n    }\r\n    const onChangeOption = (value: SelectValueType) => {\r\n        setOptions(value)\r\n    }\r\n\r\n    if (!isAuth) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <PacksList userID={userID}\r\n                       addNewPack={addPack}\r\n                       deletePack={deletePack}\r\n                       updatePack={updatePack}\r\n                       learnPack={learnPack}\r\n                       onChangePage={onChangePage}\r\n                       value={options}\r\n                       onChangeOption={onChangeOption}\r\n            />\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/back.54207b29.svg\";","import React from 'react';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n        color: \"#21268F\",\r\n    },\r\n  }),\r\n);\r\n\r\nexport default function HalfRating(props: any) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n        {/* <Rating name=\"size-small\" defaultValue={2} size=\"small\" /> */}\r\n      <Rating name=\"half-rating\" defaultValue={props.rating} precision={0.5} size=\"small\"  classes={classes}/>\r\n    </div>\r\n  );\r\n}\r\n","import HalfRating from \"../../../../../common/rating/Rating\";\r\n\r\ntype StringTablePNType = {\r\n    value1: string\r\n    value2: string\r\n    value3: string\r\n    rating: number\r\n}\r\n\r\nexport const StringTablePN = (props: StringTablePNType) => {\r\n    return (\r\n        <tr>\r\n            <td>{props.value1}</td>\r\n            <td>{props.value2}</td>\r\n            <td>{props.value3}</td>\r\n            <td>\r\n                <HalfRating/>\r\n            </td>\r\n        </tr>\r\n    )\r\n}","import s from \"./CardsList.module.scss\";\r\nimport Back from \"./../../../../assets/images/main/back.svg\"\r\nimport {TitleH2} from \"../../../../common/titleh2/TitleH2\";\r\nimport {Search} from \"../../../../common/search/Search\";\r\nimport {StringTablePN} from \"./stringTablePN/StringTablePN\";\r\nimport PaginationRounded from \"../../../../common/pagination/Pagination\";\r\nimport {Dropdown} from \"../../../../common/dropdown/Dropdown\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../../store/store\";\r\nimport {CardsResponseType} from \"../api-cards\";\r\nimport {v1} from \"uuid\";\r\nimport {SelectValueType} from \"../../packs/Packs\";\r\nimport {InitialStateType} from \"../../../../../store/cards-reducer\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype CardsListType = {\r\n    userID: string\r\n    deleteCard: (cardID: string) => void\r\n    updateCard: (cardID: string) => void\r\n    onChangePage: (page: number) => void\r\n    value: SelectValueType\r\n    onChangeOption: (value: SelectValueType) => void\r\n}\r\n\r\nexport const CardsList = (props: CardsListType) => {\r\n\r\n    const cardsData = useSelector<AppRootStateType, InitialStateType>(state => state.cards)\r\n\r\n    const formatDate = (date: string): string => {\r\n        return new Date(date).toLocaleDateString(\"ru\", {\r\n            day: \"2-digit\",\r\n            month: \"2-digit\",\r\n            year: \"numeric\"\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={s.packName}>\r\n            <div className={s.content}>\r\n                <button className={s.back}>\r\n                    <NavLink to={`/packs`}>\r\n                        <img className={s.icon} src={Back} alt=\"icon\"/>\r\n                    </NavLink>\r\n                    <TitleH2 value={cardsData.packName}\r\n                             style={{textAlign: \"left\", paddingTop: \"0\"}}\r\n                    />\r\n                </button>\r\n                <div className={s.search}>\r\n                    <Search style={{width: \"100%\"}}/>\r\n                </div>\r\n                <div className={s.wrap}>\r\n                    <table>\r\n                        <tr>\r\n                            <th className={s.item1}>Question</th>\r\n                            <th className={s.item2}>Answer</th>\r\n                            <th className={s.item3}>Last Updated</th>\r\n                            <th className={s.item4}>Grade</th>\r\n                        </tr>\r\n                        {cardsData.cardsTableData.cards.map((item) => {\r\n                            return (\r\n                                <StringTablePN\r\n                                    key={v1()}\r\n                                    value1={item.question}\r\n                                    value2={item.answer}\r\n                                    value3={formatDate(item.updated)}\r\n                                    rating={item.rating}\r\n                                />)\r\n                        })}\r\n                    </table>\r\n                </div>\r\n                <div className={s.pagination}>\r\n                    <PaginationRounded\r\n                        totalCount={cardsData.cardsTableData.cardsTotalCount}\r\n                        pageCount={cardsData.cardsTableData.pageCount}\r\n                        page={cardsData.cardsTableData.page}\r\n                        onChangePage={props.onChangePage}\r\n                    />\r\n                    <Dropdown\r\n                        options={[5, 10, 25, 50, 100]}\r\n                        value={props.value}\r\n                        onChangeOption={props.onChangeOption}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addCardTC, deleteCardTC, getCardsTC, updateCardTC} from \"../../../../store/cards-reducer\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {CardsList} from \"./cardsList/CardsList\";\r\nimport {SelectValueType} from \"../packs/Packs\";\r\n\r\n\r\n\r\nexport const Cards = () => {\r\n\r\n    const [options, setOptions] = useState<SelectValueType>(10)\r\n\r\n    const userID = useSelector<AppRootStateType, string>(state => state.login.userID)\r\n    const cardsPackId = useSelector<AppRootStateType, string>(state => state.cards.cardsPackId)\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getCardsTC({cardsPack_id: cardsPackId, pageCount: options}))\r\n    }, [dispatch, options])\r\n\r\n    const newCardPayload = {\r\n        cardsPack_id: cardsPackId,\r\n        question: 'Who is she?',\r\n        answer: 'She is pokemoniha'\r\n    }\r\n\r\n    const addCards = () => {\r\n        dispatch(addCardTC(newCardPayload, {cardsPack_id: cardsPackId, pageCount: 100}))\r\n    }\r\n\r\n    const deleteCard = (cardID: string) => {\r\n        dispatch(deleteCardTC(cardID, {cardsPack_id: cardsPackId, pageCount: 100}))\r\n    }\r\n\r\n    const updateCard = (cardID: string) => {\r\n        const updateCardPayload = {\r\n            _id: cardID,\r\n            question: 'What?'\r\n        }\r\n        dispatch(updateCardTC(updateCardPayload, {cardsPack_id: cardsPackId, pageCount: 100}))\r\n    }\r\n\r\n    const onChangePage = (page: number) => {\r\n        dispatch(getCardsTC({cardsPack_id: cardsPackId,pageCount: options, page: page}))\r\n    }\r\n\r\n    const onChangeOption = (value: SelectValueType) => {\r\n        debugger\r\n        setOptions(value)\r\n    }\r\n\r\n    if (!isAuth) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={addCards}>Add cards</button>\r\n            {/*<CardsTable userID={userID}\r\n                        deleteCard={deleteCard}\r\n                        updateCard={updateCard}\r\n            />*/}\r\n            <CardsList userID={userID}\r\n                       deleteCard={deleteCard}\r\n                       updateCard={updateCard}\r\n                       onChangePage={onChangePage}\r\n                       value={options}\r\n                       onChangeOption={onChangeOption}\r\n            />\r\n        </div>\r\n    )\r\n}","import s from \"./Error.module.scss\";\r\n\r\nexport const Error = () => {\r\n    return (\r\n        <div className={s.error}>\r\n            <div className={s.wrapper}>\r\n                <span className={s.text}>\r\n                    The page were looking for doesn’t exist\r\n                </span>\r\n                <button className={s.btn}>\r\n                    GO BACK\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0'\r\n})\r\n\r\n\r\nexport const newPasswordAPI = {\r\n    resetPassword(password: string, resetPasswordToken: string | undefined)  {\r\n        return instance.post('auth/set-new-password', {password, resetPasswordToken})\r\n    }\r\n}","\r\nimport {Dispatch} from \"redux\"\r\nimport {newPasswordAPI} from \"../ui/content/components/newPassword/api-newPassword\";\r\n\r\n\r\nconst initialState = {\r\n    resetPassword: null as string | null,\r\n    isFetching: false,\r\n    error: null as null | string,\r\n    success: false,\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const resetPasswordReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case \"IS-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case 'SET-NEW-PASSWORD': {\r\n            return {...state, resetPassword: action.newPassword}\r\n        }\r\n        case \"SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        case 'NEW_PASSWORD/SET_SUCCESS': {\r\n            return {...state, success: action.success}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const isFetchingAC = (isFetching: boolean) => ({type: \"IS-FETCHING\", isFetching} as const)\r\nexport const setErrorAC = (error: string | null) => ({type: \"SET-ERROR\", error} as const)\r\nexport const resetPasswordAC = (newPassword: string) => {return {type: 'SET-NEW-PASSWORD', newPassword} as const}\r\nexport const setNewPasswordSuccessAC = (success: boolean) => ({type: 'NEW_PASSWORD/SET_SUCCESS', success}) as const\r\n\r\nexport const resetPasswordTC = (password: string, resetPasswordToken: string | undefined) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(isFetchingAC(true))\r\n    newPasswordAPI.resetPassword(password, resetPasswordToken )\r\n           .then(res => {\r\n            console.log(res.data)\r\n            dispatch(setNewPasswordSuccessAC(true))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response ? e.response.data.error : (e.message + \", more details in the console\")\r\n            dispatch(setErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\ntype ActionType = ReturnType<typeof isFetchingAC>\r\n    | ReturnType<typeof setErrorAC>\r\n    | ReturnType<typeof resetPasswordAC>\r\n    | ReturnType<typeof setNewPasswordSuccessAC>","import React, {useState} from \"react\";\r\nimport {setErrorAC} from \"../../../../store/passwordRecover-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport {NewPassword} from \"./NewPassword\";\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {resetPasswordTC} from \"../../../../store/newPassword-reducer\";\r\nimport s from \"./NewPassword.module.scss\";\r\nimport {Logo} from \"../../../common/logo/Logo\";\r\nimport {TitleH2} from \"../../../common/titleh2/TitleH2\";\r\nimport {Input} from \"../../../common/input/Input\";\r\nimport {Button} from \"../../../common/button/Button\";\r\n\r\n\r\nexport const NewPasswordContainer = () => {\r\n\r\n    const {token} = useParams<{ token: string }>();\r\n    const [password, setPassword] = useState(\"\")\r\n    const isFetching = useSelector<AppRootStateType, boolean>((state) => state.newPassword.isFetching)\r\n    const error = useSelector<AppRootStateType, string | null>((state) => state.newPassword.error)\r\n    const success = useSelector<AppRootStateType, boolean>((state) => state.newPassword.success)\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const onChangePassword = (password: string) => {\r\n        setPassword(password)\r\n        if (error !== null) {\r\n            dispatch(setErrorAC(null))\r\n        }\r\n    }\r\n\r\n    const onclickHandler = () => {\r\n        if (password === \"\") {\r\n            dispatch(setErrorAC('Required'))\r\n        }  else if (password.length < 8) {\r\n            dispatch(setErrorAC('Password must be more 7 symbols'))\r\n        } else {\r\n            debugger\r\n            dispatch(resetPasswordTC(password, token))\r\n        }\r\n    }\r\n\r\n    if (isFetching) {\r\n        return <div>Loading...</div>\r\n    }\r\n    if (success) {\r\n        return (\r\n            <div>\r\n                <Redirect to={'/login'}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={s.newPassword}>\r\n            <div className={s.wrapper}>\r\n                <div className={s.inner}>\r\n                    <Logo/>\r\n                    <TitleH2 value=\"Create new password\"/>\r\n                    <div className={s.form}>\r\n                        <Input title=\"New password\"\r\n                               type=\"password\"\r\n                               name=\"password\"\r\n                               value={password}\r\n                               onChange={onChangePassword}\r\n                               error={error}\r\n                        /> {/*Нужно убрать глазик (логика)*/}\r\n                    </div>\r\n                    <span className={s.text}>Create new password and we will send you further instructions to email </span>\r\n                    <div className={s.btn}>\r\n                        {isFetching\r\n                            ? <span>Loading...</span>\r\n                            : <Button value=\"Create new password\"\r\n                                      onClick={onclickHandler}\r\n                            />}\r\n                    </div>\r\n                    <div className={s.singUp}>\r\n                        <a className={s.link} href=\"#\">Did you remember your password?</a>\r\n                        <a className={s.linkSingUp} href=\"#\">Try logging in</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        // <NewPassword     password={password}\r\n        //                  error={error}\r\n        //                  onChangePassword={onChangePassword}\r\n        //                  onclickHandler={onclickHandler}\r\n        //                  isFetching={isFetching}\r\n        // />\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport s from \"./Content.module.css\"\r\nimport {routes} from \"../../router/routes\";\r\nimport {Profile} from \"./components/profile/Profile\";\r\nimport {NotFound} from \"./components/notFound/NotFound\";\r\nimport {NewPassword} from \"./components/newPassword/NewPassword\";\r\nimport {Presentation} from \"./components/presentation/Presentation\";\r\nimport {RegistrationPage} from \"./components/registration/RegistrationPage\";\r\nimport {LoginContainer} from \"./components/login/LoginContainer\";\r\nimport {PasswordRecoverContainer} from \"./components/passwordRecover/PasswordRecoverContainer\";\r\nimport {Packs} from \"./components/packs/Packs\";\r\nimport {Cards} from \"./components/cards/Cards\";\r\nimport {Error} from \"../pages/error/Error\";\r\nimport { NewPasswordContainer } from \"./components/newPassword/NewPasswordContainer\";\r\n\r\n\r\nexport const Content = () => {\r\n    return (\r\n        <div className={s.contentContainer}>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Redirect to={routes.login}/>}/>\r\n                <Route exact path={routes.login} render={() => <LoginContainer/>} />\r\n                <Route exact path={routes.registration} render={() => <RegistrationPage/>} />\r\n                <Route exact path={routes.profile} render={() => <Profile/>} />\r\n                <Route exact path={routes.passwordRecover} render={() => <PasswordRecoverContainer/>} />\r\n                <Route exact path={routes.newPassword} render={() => <NewPasswordContainer/>} />\r\n                <Route exact path={routes.presentation} render={() => <Presentation/>} />\r\n                <Route exact path={routes.packs} render={() => <Packs/>} />\r\n                <Route path={routes.cards} render={() => <Cards/>} />\r\n                <Route render={() => <Error/>} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./Header.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {routes} from \"../../router/routes\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../store/store\";\r\nimport {logoutTC} from \"../../store/login-reducer\";\r\n\r\nexport const Header = () => {\r\n\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    return (\r\n        <div className={s.headerContainer}>\r\n            <div className={s.navLinkContainer}>\r\n                {isAuth\r\n                    ? <button onClick={logoutHandler}>Logout</button>\r\n                    : <NavLink to={routes.login}>Login</NavLink>\r\n                }\r\n                <NavLink to={routes.registration}>Registration</NavLink>\r\n                <NavLink to={routes.profile}>Profile</NavLink>\r\n                <NavLink to={routes.notFound}>404</NavLink>\r\n                <NavLink to={routes.passwordRecover}>Password Recover</NavLink>\r\n                <NavLink to={routes.newPassword}>New Password</NavLink>\r\n                <NavLink to={routes.presentation}>Presentation</NavLink>\r\n                <NavLink to={routes.packs}>Packs</NavLink>\r\n                <NavLink to={routes.cards}>Cards</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/packList.7af4644a.svg\";","export default __webpack_public_path__ + \"static/media/profole.36eee9e3.svg\";","import s from \"./Tab.module.scss\";\r\nimport List from \"./../../../assets/images/head/packList.svg\";\r\nimport Profile from \"./../../../assets/images/head/profole.svg\";\r\n\r\n\r\nexport const Tab = () => {\r\n    return (\r\n        <div className={s.wrapper}>\r\n        <button className={s.btn}>\r\n            <img className={s.icon} src= {List} alt=\"icon list\"/>\r\n            <span className={s.span}>Packs list</span>\r\n        </button>\r\n        <button className={s.btn}>\r\n            <img className={s.icon} src= {Profile} alt=\"icon list\"/>\r\n            <span className={s.span}>Profile</span>\r\n        </button>\r\n        </div>\r\n    )\r\n}","import s from \"./Head.module.scss\";\r\nimport { Tab } from \"./tab/Tab\";\r\nimport { Logo } from \"../logo/Logo\";\r\n\r\n\r\nexport const Head = () => {\r\n    return (\r\n        <div className={s.head}>\r\n            <div className={s.container}>\r\n                <Logo style= {{justifyContent: \"start\", padding: \"10px 0\", marginRight: \"168px\"}}/>\r\n                <Tab/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './App.module.scss';\r\nimport { Content } from './main/ui/content/Content';\r\nimport { Header } from './main/ui/header/Header';\r\nimport { Navigation } from './main/ui/navigation/Navigation';\r\nimport {RegistrationPage} from \"./main/ui/content/components/registration/RegistrationPage\";\r\n\r\n// Прошу не удалять я с этим работаю (Люба;))\r\nimport { LoginPage } from './main/ui/pages/auth/loginPage/LoginPage';\r\nimport { Register } from './main/ui/pages/auth/register/Register';\r\nimport { ForgotPassword } from './main/ui/content/components/passwordRecover/forgotPassword/ForgotPassword';\r\nimport { LoginPageTest } from './main/ui/pages/auth/loginPageTest/LoginPageTest';\r\nimport { CheckEmail } from './main/ui/pages/auth/сheckEmail/CheckEmail';\r\nimport { CreateNewPassword } from './main/ui/pages/auth/createNewPassword/CreateNewPassword';\r\nimport { Head } from './main/ui/common/head/Head';\r\nimport {PacksList} from \"./main/ui/pages/main/packsList/PacksList\";\r\n\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.app}>\r\n\r\n            {/* Осталось от фронта */}\r\n            <Header/>\r\n           {/* <Content/>*/}\r\n            {/* Тут подключены сверстанные странички */}\r\n            <Head/>\r\n            <div className={s.content}>\r\n                <Content/>\r\n                {/*<PacksList/>*/}\r\n\r\n\r\n            {/* <LoginPage/> */}\r\n            {/* <Register/> */}\r\n            {/* <ForgotPassword/> */}\r\n            {/* <CheckEmail/> */}\r\n            {/* <CreateNewPassword/> */}\r\n\r\n\r\n\r\n            {/* <LoginPageTest/>  Material UI*/}\r\n            </div>\r\n                {/* <Error/> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nconst initialState = {\r\n\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType = {\r\n    type: string\r\n}","\r\nconst initialState = {\r\n\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType = {\r\n    type: string\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from \"./app-reducer\";\r\nimport {loginReducer} from \"./login-reducer\";\r\nimport {passwordRecoverReducer} from \"./passwordRecover-reducer\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {registrationReducer} from \"./registration-reducer\";\r\nimport {packsReducer} from \"./packs-reducer\";\r\nimport {cardsReducer} from \"./cards-reducer\";\r\nimport {resetPasswordReducer} from \"./newPassword-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login: loginReducer,\r\n    newPassword: resetPasswordReducer,\r\n    passwordRecover: passwordRecoverReducer,\r\n    profile: profileReducer,\r\n    registration: registrationReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./main/store/store\";\r\n\r\nReactDOM.render(\r\n\r\n\r\n            <HashRouter>\r\n                <Provider store={store}>\r\n                <App/>\r\n                </Provider>\r\n            </HashRouter>\r\n\r\n  ,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packsList\":\"PacksList_packsList__16Oow\",\"aside\":\"PacksList_aside__2D1R_\",\"titleH3\":\"PacksList_titleH3__2kgRF\",\"rangeSlider\":\"PacksList_rangeSlider__176Ho\",\"content\":\"PacksList_content__dqveu\",\"form\":\"PacksList_form__9JcOw\",\"wrap\":\"PacksList_wrap__3605h\",\"item1\":\"PacksList_item1__Qt_rc\",\"item2\":\"PacksList_item2__1w9py\",\"item3\":\"PacksList_item3__3GUHw\",\"item4\":\"PacksList_item4__2uHEt\",\"item5\":\"PacksList_item5__2SM_M\",\"pagination\":\"PacksList_pagination__dccMW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"LoginPage_loginPage__qEFAn\",\"wrapper\":\"LoginPage_wrapper__-2biH\",\"inner\":\"LoginPage_inner__2clEu\",\"form\":\"LoginPage_form__3-rTG\",\"wrap\":\"LoginPage_wrap__1xLgl\",\"checkbox\":\"LoginPage_checkbox__3bbTY\",\"checkboxInput\":\"LoginPage_checkboxInput__3OAOa\",\"checkboxLable\":\"LoginPage_checkboxLable__3Udfu\",\"linkPassword\":\"LoginPage_linkPassword__209Q3\",\"btn\":\"LoginPage_btn__2FN60\",\"singUp\":\"LoginPage_singUp__118j5\",\"span\":\"LoginPage_span__2Cd-O\",\"linkSingUp\":\"LoginPage_linkSingUp__2EW2I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packName\":\"CardsList_packName__1hJHs\",\"content\":\"CardsList_content__251pN\",\"back\":\"CardsList_back__3DYlF\",\"icon\":\"CardsList_icon__25J3f\",\"search\":\"CardsList_search__1VIsM\",\"wrap\":\"CardsList_wrap__3-HTq\",\"item1\":\"CardsList_item1__RPRqp\",\"item2\":\"CardsList_item2__3dqBk\",\"item3\":\"CardsList_item3__1Moy1\",\"item4\":\"CardsList_item4__34Wc5\",\"pagination\":\"CardsList_pagination__3IL9k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgotPassword\":\"ForgotPassword_forgotPassword__2MlHL\",\"wrapper\":\"ForgotPassword_wrapper__3bdcd\",\"inner\":\"ForgotPassword_inner__348n1\",\"form\":\"ForgotPassword_form__1KQ49\",\"text\":\"ForgotPassword_text__iVqTU\",\"btn\":\"ForgotPassword_btn__2aD94\",\"singUp\":\"ForgotPassword_singUp__305sf\",\"link\":\"ForgotPassword_link__3s4ac\",\"linkSingUp\":\"ForgotPassword_linkSingUp__3ybFi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPassword\":\"NewPassword_newPassword__2uvL8\",\"wrapper\":\"NewPassword_wrapper__20tPN\",\"inner\":\"NewPassword_inner__1gLgp\",\"form\":\"NewPassword_form__v80h7\",\"text\":\"NewPassword_text__11Qz6\",\"btn\":\"NewPassword_btn__1LRsl\",\"singUp\":\"NewPassword_singUp__3KIe5\",\"link\":\"NewPassword_link__gmxUG\",\"linkSingUp\":\"NewPassword_linkSingUp__1jx7c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Input_wrapper__sgEY7\",\"label\":\"Input_label__2TTl5\",\"input__item\":\"Input_input__item__3jSC1\",\"icon\":\"Input_icon__1E6-D\",\"span\":\"Input_span__2Jcmt\",\"checkbox\":\"Input_checkbox__2bqf6\",\"checkboxInput\":\"Input_checkboxInput__P_T-B\",\"checkboxLable\":\"Input_checkboxLable__3VCdo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Tab_wrapper__1uAkk\",\"btn\":\"Tab_btn__3_DnP\",\"icon\":\"Tab_icon__3Dobh\",\"span\":\"Tab_span__EGs9d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Register_loginPage__3xiEa\",\"wrapper\":\"Register_wrapper__3fFdv\",\"inner\":\"Register_inner__35eRX\",\"form\":\"Register_form__1wCvI\",\"btn\":\"Register_btn__1F_93\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"Dropdown_dropdown__2kQYU\",\"text\":\"Dropdown_text__3EieB\",\"dropdownSelect\":\"Dropdown_dropdownSelect__1_M1j\",\"item\":\"Dropdown_item__y0zB4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__2eTSF\",\"wrapper\":\"Error_wrapper__1D50E\",\"text\":\"Error_text__3I6Le\",\"btn\":\"Error_btn__3T6gc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideButton\":\"SideButton_sideButton__2GYUP\",\"btnActive\":\"SideButton_btnActive__1gx1h\",\"btn\":\"SideButton_btn__2SRDQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"App_content__INdBb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__T7yg_\",\"input\":\"Search_input__a-msh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Header_headerContainer__unZf7\",\"navLinkContainer\":\"Header_navLinkContainer__2cpJi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"Head_head__19Vea\",\"container\":\"Head_container__ZPF3P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"Content_contentContainer__3_tBf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3YXc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__2s_vA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"TitleH2_title__1oyIA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Actions_btn__1f3Dp\"};"],"sourceRoot":""}