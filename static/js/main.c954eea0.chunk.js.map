{"version":3,"sources":["main/ui/content/components/passwordRecover/forgotPassword/ForgotPassword.module.scss","main/ui/common/input/Input.module.scss","main/ui/pages/auth/register/Register.module.scss","App.module.scss","main/ui/navigation/Navigation.module.css","main/ui/content/Content.module.css","main/ui/common/button/Button.module.scss","main/ui/common/logo/Logo.module.scss","main/ui/common/titleh2/TitleH2.module.scss","main/ui/header/Header.module.css","main/ui/content/components/login/LoginPage.module.scss","main/router/routes.ts","main/ui/content/components/profile/Profile.tsx","main/ui/content/components/notFound/NotFound.tsx","main/ui/content/components/newPassword/NewPassword.tsx","main/ui/content/components/presentation/Presentation.tsx","main/ui/common/input/Input.tsx","main/ui/common/button/Button.tsx","main/ui/common/logo/Logo.tsx","main/ui/common/titleh2/TitleH2.tsx","main/ui/content/components/registration/Registration.tsx","main/ui/content/components/registration/api/api-registr.ts","main/store/registration-reducer.ts","main/ui/content/components/registration/RegistrationPage.tsx","main/ui/pages/auth/loginPage/api-login.ts","main/store/login-reducer.ts","main/ui/content/components/login/LoginPage.tsx","main/ui/content/components/login/LoginContainer.tsx","main/ui/content/components/passwordRecover/api-passwordRecover.ts","main/store/passwordRecover-reducer.ts","main/ui/content/components/passwordRecover/forgotPassword/ForgotPassword.tsx","main/ui/content/components/passwordRecover/PasswordRecoverContainer.tsx","main/ui/content/Content.tsx","main/ui/header/Header.tsx","main/ui/navigation/Navigation.tsx","App.tsx","reportWebVitals.ts","main/store/app-reducer.ts","main/store/newPassword-reducer.ts","main/store/profile-reducer.ts","main/store/store.ts","index.tsx"],"names":["module","exports","routes","Profile","NotFound","NewPassword","Presentation","Input","props","className","s","wrapper","style","label","title","input__item","type","name","placeholder","value","onChange","e","currentTarget","id","idName","checkbox","checkboxInput","input","document","getElementById","getAttribute","setAttribute","checkboxLable","htmlFor","span","error","Button","btn","onClick","Logo","logo","href","TitleH2","Registration","loginPage","inner","form","email","onEmailChange","password","onPasswordChange","marginTop","passwordConfirm","onPasswordConfirmChange","cancelClick","width","backgroundColor","color","marginRight","registrationButtonClock","instance","axios","create","withCredentials","baseURL","regAPI","post","initialState","newUser","RegistrationPage","dispatch","useDispatch","useState","setEmail","setPassword","setPasswordConfirm","alert","then","response","console","log","data","payload","catch","message","setNewUserTC","authAPI","rememberMe","user","isFetching","isAuth","isFetchingAC","setErrorAC","LoginPage","onChangeEmail","onChangePassword","wrap","linkPassword","to","onclickHandler","singUp","linkSingUp","LoginContainer","useSelector","state","login","setRememberMe","test","length","finally","getAuthUserData","onChangeRememberMe","passwordRecoverAPI","from","ForgotPassword","forgotPassword","text","link","PasswordRecoverContainer","passwordRecover","res","recoverTC","Content","contentContainer","path","exact","render","Header","headerContainer","Navigation","navigationContainer","linksList","App","app","content","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","newPassword","profile","registration","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,QAAU,gCAAgC,MAAQ,8BAA8B,KAAO,6BAA6B,KAAO,6BAA6B,IAAM,4BAA4B,OAAS,+BAA+B,KAAO,6BAA6B,WAAa,qC,mBCA7VD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,qBAAqB,YAAc,2BAA2B,KAAO,oBAAoB,KAAO,oBAAoB,SAAW,wBAAwB,cAAgB,6BAA6B,cAAgB,+B,mBCA/QD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,QAAU,0BAA0B,MAAQ,wBAAwB,KAAO,uBAAuB,IAAM,wB,mBCAlKD,EAAOC,QAAU,CAAC,QAAU,uB,mBCA5BD,EAAOC,QAAU,CAAC,oBAAsB,wCAAwC,UAAY,gC,mBCA5FD,EAAOC,QAAU,CAAC,iBAAmB,oC,mBCArCD,EAAOC,QAAU,CAAC,IAAM,sB,mBCAxBD,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,MAAQ,yB,mBCA1BD,EAAOC,QAAU,CAAC,gBAAkB,kC,uCCApCD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,QAAU,2BAA2B,MAAQ,yBAAyB,KAAO,wBAAwB,KAAO,wBAAwB,SAAW,4BAA4B,cAAgB,iCAAiC,cAAgB,iCAAiC,aAAe,gCAAgC,IAAM,uBAAuB,OAAS,0BAA0B,KAAO,wBAAwB,WAAa,gC,oHCAtdC,EACA,IADAA,EAEF,SAFEA,EAGK,gBAHLA,EAIC,OAJDA,EAKQ,WALRA,EAMI,eANJA,EAOK,gB,OCLLC,EAAU,WACnB,OACI,2CCFKC,EAAW,WACpB,OACI,4CCFKC,EAAc,WACvB,OACI,gDCFKC,EAAe,WACxB,OACI,gD,0CCYKC,EAAQ,SAACC,GAqBlB,OACI,uBAAMC,UAAWC,IAAEC,QAASC,MAAQJ,EAAMI,MAA1C,UACI,uBAAOH,UAAWC,IAAEG,MAApB,SAA4BL,EAAMM,QAClC,uBAAOL,UAAWC,IAAEK,YAChBC,KAAMR,EAAMQ,KACZC,KAAMT,EAAMS,KACZC,YAAaV,EAAMU,YACnBC,MAAOX,EAAMW,MACbC,SA3BY,SAACC,GACrBb,EAAMY,UAAYZ,EAAMY,SAASC,EAAEC,cAAcH,QA2BzCI,GAAIf,EAAMgB,SAId,qBAAKf,UAAWC,IAAEe,SAAlB,SACI,8BAAuB,kBAAhBjB,EAAMgB,OACP,qCAAE,uBAAOf,UAAWC,IAAEgB,cAAeV,KAAK,WAAWI,SA9BvE,WAEI,IAAIO,EAAQC,SAASC,eAAe,iBAUpC,OARa,OAAVF,IACgC,aAA/BA,EAAMG,aAAa,QAEnBH,EAAMI,aAAa,OAAQ,QAG3BJ,EAAMI,aAAa,OAAQ,cAExB,GAkBsFR,GAAIf,EAAMe,KAC3F,uBAAOd,UAAWC,IAAEsB,cAAeC,QAASzB,EAAMyB,aAC/C,SAQX,sBAAMxB,UAAWC,IAAEwB,KAAnB,SAA0C,OAAhB1B,EAAM2B,MAAiB,+BAAO3B,EAAM2B,QAAgB,W,iBCvD7EC,EAAS,SAAC5B,GAMnB,OACI,wBACLC,UAAWC,IAAE2B,IACbzB,MAAOJ,EAAMI,MACb0B,QARqB,WACtB9B,EAAM8B,WAIA,SAKJ9B,EAAMW,S,iBClBGoB,EAAO,SAAC/B,GACjB,OACI,mBAAGC,UAAWC,IAAE8B,KAAM5B,MAAOJ,EAAMI,MAAO6B,KAAK,IAA/C,2B,iBCFKC,EAAU,SAAClC,GACpB,OACI,oBAAIC,UAAWC,IAAEI,MAAOF,MAAOJ,EAAMI,MAArC,SAA6CJ,EAAMW,SCc9CwB,EAAe,SAACnC,GAezB,OACI,qBAAKC,UAAWC,IAAEkC,UAAlB,SACI,qBAAKnC,UAAWC,IAAEC,QAAlB,SACI,sBAAKF,UAAWC,IAAEmC,MAAlB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKpC,UAAWC,IAAEoC,KAAlB,UACI,cAAC,EAAD,CAAOhC,MAAM,QACNE,KAAK,QACLC,KAAK,QACLE,MAAOX,EAAMuC,MACb3B,SAxBP,SAACD,GACjBX,EAAMwC,cAAc7B,MAkBR,IAOI,cAAC,EAAD,CAAOL,MAAM,WACNE,KAAK,WACLC,KAAK,WACLM,GAAI,YACJU,QAAS,YACTd,MAAOX,EAAMyC,SACb7B,SA5BJ,SAACD,GACpBX,EAAM0C,iBAAiB/B,IA4BAK,OAAQ,gBACRZ,MAAO,CAACuC,UAAW,UAE1B,cAAC,EAAD,CAAOrC,MAAM,mBACNE,KAAK,WACLC,KAAK,mBACLO,OAAQ,gBACRD,GAAI,WACJU,QAAS,WACTd,MAAOX,EAAM4C,gBACbhC,SAnCG,SAACD,GAC3BX,EAAM6C,wBAAwBlC,IAmCPP,MAAO,CAACuC,UAAW,aAE9B,uBAAM1C,UAAWC,IAAE2B,IAAnB,UACI,cAAC,EAAD,CAAQlB,MAAM,SACNmB,QAAS9B,EAAM8C,YACf1C,MAAO,CACH2C,MAAO,QACPC,gBAAiB,UACjBC,MAAO,UACPC,YAAa,UAEzB,cAAC,EAAD,CAAQvC,MAAM,eACNmB,QAAS9B,EAAMmD,wBACf/C,MAAO,CAAC2C,MAAO,sB,+BC3EzCK,EAAWC,IAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,yCAGAC,EAAS,SAELlB,EAAeE,GACxB,OAAOW,EAASM,KAAK,gBAAiB,CAACnB,QAAOE,cCPhDkB,EAAe,CACjBC,QAAS,ICEAC,EAAmB,WAE5B,IAAMC,EAAWC,cAFiB,EAIVC,mBAAiB,qBAJP,mBAI7BzB,EAJ6B,KAItB0B,EAJsB,OAKJD,mBAAiB,aALb,mBAK7BvB,EAL6B,KAKnByB,EALmB,OAMUF,mBAAiB,aAN3B,mBAM7BpB,EAN6B,KAMZuB,EANY,KAqClC,OAAO,cAAC,EAAD,CAAc5B,MAAOA,EACPE,SAAUA,EACVG,gBAAiBA,EACjBJ,cAhCC,SAACD,GACnB0B,EAAS1B,IAgCQG,iBA9BI,SAACD,GACtByB,EAAYzB,IA8BKI,wBA5BK,SAACD,GACvBuB,EAAmBvB,IA4BFO,wBAzBW,WAC5B,GAAIV,IAAaG,EAIb,OAHAwB,MAAM,sDACNF,EAAY,SACZC,EAAmB,IAGvBL,EDFoB,SAACvB,EAAeE,GAAhB,OAAqC,SAACqB,GAC9DL,EAAoBlB,EAAOE,GACtB4B,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAASG,MACrBX,EANgD,CAACtD,KAAM,eAAgBkE,QAMjDJ,EAASG,UAElCE,OAAM,SAAC9D,GACJ,IAAMc,EAAQd,EAAEyD,SAAWzD,EAAEyD,SAASG,KAAK9C,MAASd,EAAE+D,QAAU,gCAChEL,QAAQC,IAAI7C,OCNPkD,CAAatC,EAAOE,IAC7BwB,EAAS,IACTC,EAAY,IACZC,EAAmB,KAgBFrB,YAbD,WAChBmB,EAAS,IACTC,EAAY,IACZC,EAAmB,QCtCrBf,EAAWC,IAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,yCAIAsB,EAAU,SAKbvC,EAAeE,EAAkBsC,GACnC,OAAO3B,EAASM,KAAK,aAAc,CAACnB,QAAOE,WAAUsC,gBCTvDpB,EAAe,CACjBqB,KAAM,GACNC,YAAY,EACZtD,MAAO,KACPuD,QAAQ,GAuBCC,EAAe,SAACF,GAAD,MAA0B,CAACzE,KAAM,cAAeyE,eAC/DG,EAAa,SAACzD,GAAD,MAAoB,CAACnB,KAAM,YAAamB,U,wBCZrD0D,GAAY,SAACrF,GAatB,OACI,qBAAKC,UAAWC,IAAEkC,UAAlB,SACI,qBAAKnC,UAAWC,IAAEC,QAAlB,SACI,sBAAKF,UAAWC,IAAEmC,MAAlB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAS1B,MAAO,YAChB,sBAAKV,UAAWC,IAAEoC,KAAlB,UACI,cAAC,EAAD,CAAOhC,MAAM,QACNE,KAAM,QACNC,KAAK,QACLkB,MAAO3B,EAAM2B,MACbjB,YAAa,QACbC,MAAOX,EAAMuC,MACb3B,SAxBP,SAACD,GACjBX,EAAMsF,cAAc3E,IAwBGP,MAAQ,CAACuC,UAAU,QACnB3B,OAAQ,eAIf,cAAC,EAAD,CAAOV,MAAM,WAENG,KAAK,WACLkB,MAAO3B,EAAM2B,MACbjB,YAAa,WACbC,MAAOX,EAAMyC,SACb7B,SAjCJ,SAACD,GACpBX,EAAMuF,iBAAiB5E,IAiCAP,MAAQ,CAACuC,UAAU,QACnB3B,OAAQ,gBACRD,GAAI,YACJU,QAAS,iBAMpB,sBAAKxB,UAAWC,IAAEsF,KAAlB,UACI,sBAAKvF,UAAWC,IAAEe,SAAlB,UAEI,uBAAOhB,UAAWC,IAAEgB,cAAeV,KAAK,WAAWO,GAAG,cAEtD,uBAAOd,UAAWC,IAAEsB,cAAeC,QAAQ,YAA3C,4BAEJ,cAAC,KAAD,CAASxB,UAAWC,IAAEuF,aAAcC,GAAIhG,EAAxC,gCAGJ,qBAAKO,UAAWC,IAAE2B,IAAlB,SACI,cAAC,EAAD,CAAQlB,MAAM,QACNmB,QAAS9B,EAAM2F,mBAI3B,sBAAK1F,UAAWC,IAAE0F,OAAlB,UACI,uBAAO3F,UAAWC,IAAEwB,KAApB,yCACA,cAAC,KAAD,CAASzB,UAAWC,IAAE2F,WAAYH,GAAIhG,EAAtC,gCChFXoG,GAAiB,WAE1B,IAAMb,EAAac,aAAuC,SAACC,GAAD,OAAWA,EAAMC,MAAMhB,cAC3EtD,EAAQoE,aAA6C,SAACC,GAAD,OAAWA,EAAMC,MAAMtE,SAC5EuD,EAASa,aAAuC,SAAAC,GAAK,OAAIA,EAAMC,MAAMf,UAErEpB,EAAWC,cANe,EAQRC,mBAAiB,qBART,mBAQ3BzB,EAR2B,KAQpB0B,EARoB,OASFD,mBAAiB,aATf,mBAS3BvB,EAT2B,KASjByB,EATiB,OAUEF,oBAAkB,GAVpB,mBAU3Be,EAV2B,KAUfmB,EAVe,KAqChC,OAAIjB,EACO,6CAEPC,EACO,cAAC,IAAD,CAAUQ,GAAI,aAGlB,cAAC,GAAD,CAAWnD,MAAOA,EACPZ,MAAOA,EACPc,SAAUA,EACVsC,WAAYA,EACZY,eA1BG,WACH,KAAVpD,GAA6B,KAAbE,EAChBqB,EAASsB,EAAW,aACZ,4CAA4Ce,KAAK5D,GAElDE,EAAS2D,OAAS,EACzBtC,EAASsB,EAAW,qCAEpBtB,EFDmB,SAACvB,EAAeE,EAAkBsC,GAAlC,OAA0D,SAACjB,GACtFA,EAASqB,GAAa,IACtBL,EAAcvC,EAAOE,EAAUsC,GAC1BV,MAAK,SAAAC,GACEC,QAAQC,IAAIF,EAASG,MACrBX,EAViD,CAACtD,KAAM,gBAAiBkE,QAU9CJ,EAASG,UAE1CE,OAAM,SAAC9D,GACT,IAAMc,EAAQd,EAAEyD,SAAWzD,EAAEyD,SAASG,KAAK9C,MAASd,EAAE+D,QAAU,gCAChEL,QAAQC,IAAI7C,GACZmC,EAASsB,EAAWzD,OAEnB0E,SAAQ,WACLvC,EAASqB,GAAa,QEZbmB,CAAgB/D,EAAOE,EAAUsC,IAC1Cd,EAAS,IACTC,EAAY,IACZgC,GAAc,IAPdpC,EAASsB,EAAW,2BAuBVE,cArCI,SAAC/C,GACnB0B,EAAS1B,IAqCKgD,iBAnCO,SAAC9C,GACtByB,EAAYzB,IAmCE8D,mBAjCS,SAACxB,GACxBmB,GAAenB,OCxBjB3B,GAAWC,IAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,wCAMAgD,GAAqB,SACtBjE,GACJ,OAAOa,GAASM,KAAK,cAAe,CAACnB,QAAOkE,KALvC,sBAK6C7B,QAJ7C,2GCLPjB,GAAe,CACjBsB,YAAY,EACZtD,MAAO,MAeEwD,GAAe,SAACF,GAAD,MAA0B,CAACzE,KAAM,cAAeyE,eAC/DG,GAAa,SAACzD,GAAD,MAA2B,CAACnB,KAAM,YAAamB,U,oBCP5D+E,GAAiB,SAAC1G,GAC3B,OACI,qBAAKC,UAAWC,KAAEyG,eAAlB,SACI,qBAAK1G,UAAWC,KAAEC,QAAlB,SACI,sBAAKF,UAAWC,KAAEmC,MAAlB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAS1B,MAAM,YACf,sBAAKV,UAAWC,KAAEoC,KAAlB,UACI,cAAC,EAAD,CAAOhC,MAAM,QACNE,KAAK,QACLC,KAAK,QACLE,MAAOX,EAAMuC,MACb3B,SAAUZ,EAAMsF,cAChB3D,MAAO3B,EAAM2B,QANxB,OASA,sBAAM1B,UAAWC,KAAE0G,KAAnB,iFACA,qBAAK3G,UAAWC,KAAE2B,IAAlB,SACK7B,EAAMiF,WACD,8CACA,cAAC,EAAD,CAAQtE,MAAM,oBACNmB,QAAS9B,EAAM2F,mBAGjC,sBAAK1F,UAAWC,KAAE0F,OAAlB,UACI,mBAAG3F,UAAWC,KAAE2G,KAAM5E,KAAK,IAA3B,6CACA,mBAAGhC,UAAWC,KAAE2F,WAAY5D,KAAK,IAAjC,uCCjCX6E,GAA2B,WAAO,IAAD,EAChB9C,mBAAS,uBADO,mBACnCzB,EADmC,KAC5B0B,EAD4B,KAGpCgB,EAAac,aAAuC,SAACC,GAAD,OAAWA,EAAMe,gBAAgB9B,cACrFtD,EAAQoE,aAA6C,SAACC,GAAD,OAAWA,EAAMe,gBAAgBpF,SACtFmC,EAAWC,cAoBjB,OACI,cAAC,GAAD,CAAgBxB,MAAOA,EACNZ,MAAOA,EACP2D,cArBC,SAAC3E,GACnBsD,EAAStD,GACK,OAAVgB,GACAmC,EAASsB,GAAW,QAmBPO,eAfE,WACL,KAAVpD,EACAuB,EAASsB,GAAW,aACZ,4CAA4Ce,KAAK5D,IAGzDuB,EFJa,SAACvB,GAAD,OAAmB,SAACuB,GACzCA,EAASqB,IAAa,IACtBqB,GAA2BjE,GACtB8B,MAAK,SAAA2C,GACFzC,QAAQC,IAAIwC,EAAIvC,SAEnBE,OAAM,SAAC9D,GACJ,IAAMc,EAAQd,EAAEyD,SAAWzD,EAAEyD,SAASG,KAAK9C,MAASd,EAAE+D,QAAU,gCAChEd,EAASsB,GAAWzD,OAEvB0E,SAAQ,WACLvC,EAASqB,IAAa,QEPb8B,CAAU1E,IACnB0B,EAAS,KAHTH,EAASsB,GAAW,2BAYRH,WAAYA,KCxBvBiC,GAAU,WACnB,OACI,qBAAKjH,UAAWC,IAAEiH,iBAAlB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAM,cAAC,IAAD,CAAU5B,GAAIhG,OACpD,cAAC,IAAD,CAAO2H,OAAK,EAACD,KAAM1H,EAAc4H,OAAQ,kBAAM,cAAC,GAAD,OAC/C,cAAC,IAAD,CAAOD,OAAK,EAACD,KAAM1H,EAAqB4H,OAAQ,kBAAM,cAAC,EAAD,OACtD,cAAC,IAAD,CAAOD,OAAK,EAACD,KAAM1H,EAAgB4H,OAAQ,kBAAM,cAAC,EAAD,OACjD,cAAC,IAAD,CAAOD,OAAK,EAACD,KAAM1H,EAAwB4H,OAAQ,kBAAM,cAAC,GAAD,OACzD,cAAC,IAAD,CAAOD,OAAK,EAACD,KAAM1H,EAAoB4H,OAAQ,kBAAM,cAAC,EAAD,OACrD,cAAC,IAAD,CAAOD,OAAK,EAACD,KAAM1H,EAAqB4H,OAAQ,kBAAM,cAAC,EAAD,OACtD,cAAC,IAAD,CAAOA,OAAQ,kBAAM,cAAC,EAAD,a,oBCrBxBC,GAAS,WAClB,OACI,qBAAKtH,UAAWC,KAAEsH,gBAAlB,SACG,8C,oBCAEC,GAAa,WACtB,OACI,sBAAKxH,UAAWC,KAAEwH,oBAAlB,UACI,4CACA,sBAAKzH,UAAWC,KAAEyH,UAAlB,UACI,cAAC,KAAD,CAASjC,GAAIhG,EAAb,mBACA,cAAC,KAAD,CAASgG,GAAIhG,EAAb,0BACA,cAAC,KAAD,CAASgG,GAAIhG,EAAb,qBACA,cAAC,KAAD,CAASgG,GAAIhG,EAAb,iBACA,cAAC,KAAD,CAASgG,GAAIhG,EAAb,8BACA,cAAC,KAAD,CAASgG,GAAIhG,EAAb,0BACA,cAAC,KAAD,CAASgG,GAAIhG,EAAb,iCC8BDkI,OA7Bf,WACI,OACI,sBAAK3H,UAAWC,IAAE2H,IAAlB,UAGI,cAAC,GAAD,IACA,cAAC,GAAD,IAKA,qBAAK5H,UAAWC,IAAE4H,QAAlB,SACA,cAAC,GAAD,UChBGC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB5D,MAAK,YAAkD,IAA/C6D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,kBCRRrE,GAAe,GCAfA,GAAe,GCAfA,GAAe,GCQf4E,GAAcC,aAAgB,CAChCX,IHJsB,WAAmF,IAAlF7B,EAAiF,uDAAvDrC,GAAc8E,EAAyC,uCAGhG,OAFAA,EAAOjI,KAEAwF,GGEfC,MfCwB,WAAoF,IAAnFD,EAAkF,uDAAxDrC,EAAc8E,EAA0C,uCAC3G,OAAQA,EAAOjI,MACX,IAAK,gBACD,OAAO,2BACAwF,GADP,IAEIhB,KAAMyD,EAAO/D,QACbQ,QAAQ,IAEhB,IAAK,cACD,OAAO,2BAAIc,GAAX,IACIf,WAAYwD,EAAOxD,aAC3B,IAAK,YACD,OAAO,2BAAIe,GAAX,IACIrE,MAAO8G,EAAO9G,QACtB,QACI,OAAOqE,Ieff0C,YFN8B,WAAmF,IAAlF1C,EAAiF,uDAAvDrC,GAAc8E,EAAyC,uCAGxG,OAFAA,EAAOjI,KAEAwF,GEIfe,gBXJkC,WAAmF,IAAlFf,EAAiF,uDAAvDrC,GAAc8E,EAAyC,uCACpH,OAAQA,EAAOjI,MACX,IAAK,cACD,OAAO,2BAAIwF,GAAX,IAAkBf,WAAYwD,EAAOxD,aACzC,IAAK,YACD,OAAO,2BAAIe,GAAX,IAAkBrE,MAAO8G,EAAO9G,QACpC,QACI,OAAOqE,IWFf2C,QDR0B,WAAmF,IAAlF3C,EAAiF,uDAAvDrC,GAAc8E,EAAyC,uCAGpG,OAFAA,EAAOjI,KAEAwF,GCMf4C,alBD+B,WAAmF,IAAlF5C,EAAiF,uDAAvDrC,EAAc8E,EAAyC,uCACjH,OAAQA,EAAOjI,MACX,IAAK,eACD,OAAO,2BACAwF,GADP,IAEIpC,QAAS6E,EAAO/D,UAGxB,QACI,OAAOsB,MkBLN6C,GAAQC,aAAYP,GAAaQ,aAAgBC,OAM9DC,OAAOJ,MAAQA,GCffK,IAAS5B,OAGG,cAAC,KAAD,UACI,cAAC,IAAD,CAAUuB,MAAOA,GAAjB,SACA,cAAC,GAAD,QAKZzH,SAASC,eAAe,SAM5B0G,O","file":"static/js/main.c954eea0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"forgotPassword\":\"ForgotPassword_forgotPassword__2MlHL\",\"wrapper\":\"ForgotPassword_wrapper__3bdcd\",\"inner\":\"ForgotPassword_inner__348n1\",\"form\":\"ForgotPassword_form__1KQ49\",\"text\":\"ForgotPassword_text__iVqTU\",\"btn\":\"ForgotPassword_btn__2aD94\",\"singUp\":\"ForgotPassword_singUp__305sf\",\"link\":\"ForgotPassword_link__3s4ac\",\"linkSingUp\":\"ForgotPassword_linkSingUp__3ybFi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Input_wrapper__sgEY7\",\"label\":\"Input_label__2TTl5\",\"input__item\":\"Input_input__item__3jSC1\",\"icon\":\"Input_icon__1E6-D\",\"span\":\"Input_span__2Jcmt\",\"checkbox\":\"Input_checkbox__2bqf6\",\"checkboxInput\":\"Input_checkboxInput__P_T-B\",\"checkboxLable\":\"Input_checkboxLable__3VCdo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Register_loginPage__3xiEa\",\"wrapper\":\"Register_wrapper__3fFdv\",\"inner\":\"Register_inner__35eRX\",\"form\":\"Register_form__1wCvI\",\"btn\":\"Register_btn__1F_93\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"App_content__INdBb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigationContainer\":\"Navigation_navigationContainer__3jxDD\",\"linksList\":\"Navigation_linksList__2vRX6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"Content_contentContainer__3_tBf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__3YXc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__2s_vA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"TitleH2_title__1oyIA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Header_headerContainer__unZf7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"LoginPage_loginPage__qEFAn\",\"wrapper\":\"LoginPage_wrapper__-2biH\",\"inner\":\"LoginPage_inner__2clEu\",\"form\":\"LoginPage_form__3-rTG\",\"wrap\":\"LoginPage_wrap__1xLgl\",\"checkbox\":\"LoginPage_checkbox__3bbTY\",\"checkboxInput\":\"LoginPage_checkboxInput__3OAOa\",\"checkboxLable\":\"LoginPage_checkboxLable__3Udfu\",\"linkPassword\":\"LoginPage_linkPassword__209Q3\",\"btn\":\"LoginPage_btn__2FN60\",\"singUp\":\"LoginPage_singUp__118j5\",\"span\":\"LoginPage_span__2Cd-O\",\"linkSingUp\":\"LoginPage_linkSingUp__2EW2I\"};","\r\nexport const routes = {\r\n    profile: \"/\",\r\n    login: \"/login\",\r\n    registration: \"/registration\",\r\n    notFound: \"/404\",\r\n    passwordRecover: \"/recover\",\r\n    newPassword: \"/newPassword\",\r\n    presentation: \"/presentation\",\r\n}","import React from \"react\";\r\n\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\nexport const NotFound = () => {\r\n    return (\r\n        <div>\r\n            NotFound\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\nexport const NewPassword = () => {\r\n    return (\r\n        <div>\r\n            New Password\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\n\r\nexport const Presentation = () => {\r\n    return (\r\n        <div>\r\n            Presentation\r\n        </div>\r\n    )\r\n}","import s from \"./Input.module.scss\";\r\nimport React, {ChangeEvent} from \"react\";\r\n\r\ntype InputPropsType = {\r\n    title?: string\r\n    type?: string\r\n    name?: string\r\n    value?: string\r\n    style?: {}\r\n    placeholder?: string\r\n    onChange?:(string: string)=> void\r\n    id?: string\r\n    htmlFor?: string\r\n    error?: string | null\r\n    idName?: string\r\n}\r\n\r\nexport const Input = (props: InputPropsType) => {\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.onChange && props.onChange(e.currentTarget.value)\r\n    }\r\n\r\n    function togglePassword(){\r\n        debugger\r\n        let input = document.getElementById('inputPassword' );\r\n\r\n        if(input !== null){\r\n        if (input.getAttribute('type') === 'password') {\r\n\r\n            input.setAttribute('type', 'text');\r\n        } else {\r\n\r\n            input.setAttribute('type', 'password');\r\n        }}\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        <form className={s.wrapper} style= {props.style}>\r\n            <label className={s.label}>{props.title}</label>\r\n            <input className={s.input__item}\r\n                type={props.type}\r\n                name={props.name}\r\n                placeholder={props.placeholder}\r\n                value={props.value}\r\n                onChange = {onChangeHandler}\r\n                id={props.idName}>\r\n            </input>\r\n\r\n             {/*Глазик чекбокс*/}\r\n            <div className={s.checkbox}>\r\n                <div >{props.idName ==='inputPassword'\r\n                    ? <><input className={s.checkboxInput} type=\"checkbox\" onChange={togglePassword} id={props.id}/>\r\n                    <label className={s.checkboxLable} htmlFor={props.htmlFor}></label></>\r\n                     : null}</div>\r\n\r\n            </div>\r\n\r\n\r\n                {/* Не получается заюзать((( */}\r\n            {/*<Eye id={\"checkbox2\"}  htmlFor= \"checkbox2\"/>*/}\r\n\r\n            <span className={s.span}>{props.error !== null ? <span>{props.error}</span> : null}</span>\r\n        </form>\r\n    )\r\n}","import s from \"./Button.module.scss\";\r\n\r\ntype ButtonPropsType = {\r\n\tstyle?: {}\r\n\tonClick: () => void\r\n\tvalue?: string\r\n}\r\n\r\nexport const Button = (props: ButtonPropsType) => {\r\n\r\n\tconst onClickHandler = () => {\r\n\t\tprops.onClick()\r\n\t}\r\n\r\n    return (\r\n        <button\r\n\t\t\tclassName={s.btn}\r\n\t\t\tstyle={props.style}\r\n\t\t\tonClick={onClickHandler}\r\n\t\t> \r\n\t\t\t{props.value}\r\n\t\t</button>\r\n    );\r\n}","import s from \"./Logo.module.scss\";\r\n\r\nexport const Logo = (props: any) => {\r\n    return (\r\n        <a className={s.logo} style={props.style} href=\"#\">It-incubator</a>                  \r\n    )\r\n}","import s from \"./TitleH2.module.scss\";\r\n\r\nexport const TitleH2 = (props: any) => {\r\n    return (\r\n        <h2 className={s.title} style={props.style}>{props.value}</h2>                 \r\n    )\r\n}","import s from \"./../../../../ui/pages/auth/register/Register.module.scss\";\r\nimport {Input} from \"../../../common/input/Input\";\r\nimport {Button} from \"../../../common/button/Button\";\r\nimport {Logo} from \"../../../common/logo/Logo\";\r\nimport {TitleH2} from \"../../../common/titleh2/TitleH2\";\r\nimport React from \"react\";\r\n\r\ntype RegistrationPropsType = {\r\n    email: string\r\n    password: string\r\n    passwordConfirm: string\r\n    onEmailChange: (email: string) => void\r\n    onPasswordChange: (password: string) => void\r\n    onPasswordConfirmChange: (passwordConfirm: string) => void\r\n    registrationButtonClock: () => void\r\n    cancelClick: () => void\r\n}\r\n\r\nexport const Registration = (props: RegistrationPropsType) => {\r\n\r\n    const emailChange = (value: string) => {\r\n        props.onEmailChange(value)\r\n    }\r\n\r\n    const passwordChange = (value: string) => {\r\n        props.onPasswordChange(value)\r\n    }\r\n\r\n    const passwordConfirmChange = (value: string) => {\r\n        props.onPasswordConfirmChange(value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.loginPage}>\r\n            <div className={s.wrapper}>\r\n                <div className={s.inner}>\r\n                    <Logo/>\r\n                    <TitleH2/>\r\n                    <div className={s.form}>\r\n                        <Input title=\"Email\"\r\n                               type=\"email\"\r\n                               name=\"email\"\r\n                               value={props.email}\r\n                               onChange={emailChange}/> {/* Нужно убрать глазик (логика) */}\r\n\r\n                        <Input title=\"Password\"\r\n                               type=\"password\"\r\n                               name=\"password\"\r\n                               id= \"checkbox2\"\r\n                               htmlFor= \"checkbox2\"\r\n                               value={props.password}\r\n                               onChange={passwordChange}\r\n                               idName={'inputPassword'}\r\n                               style={{marginTop: \"25px\"}}/>\r\n\r\n                        <Input title=\"Confirm password\"\r\n                               type=\"password\"\r\n                               name=\"Confirm password\"\r\n                               idName={'inputPassword'}\r\n                               id= \"checkbox\"\r\n                               htmlFor= \"checkbox\"\r\n                               value={props.passwordConfirm}\r\n                               onChange={passwordConfirmChange}\r\n                               style={{marginTop: \"25px\"}}/>\r\n                    </div>\r\n                    <form className={s.btn}>\r\n                        <Button value=\"Cancel\"\r\n                                onClick={props.cancelClick}\r\n                                style={{\r\n                                    width: \"124px\",\r\n                                    backgroundColor: \"#CDCEF4\",\r\n                                    color: \"#21268F\",\r\n                                    marginRight: \"36px\"\r\n                                }}/>\r\n                        <Button value=\"Registration\"\r\n                                onClick={props.registrationButtonClock}\r\n                                style={{width: \"187px\"}}\r\n                        />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/'\r\n})\r\n\r\nexport const regAPI = {\r\n\r\n    registration(email: string, password: string) {\r\n        return instance.post('auth/register', {email, password})\r\n\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {regAPI} from \"../ui/content/components/registration/api/api-registr\";\r\n\r\nconst initialState = {\r\n    newUser: {}\r\n}\r\n\r\ntype newUserType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const registrationReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SET_NEW_USER\": {\r\n            return {\r\n                ...state,\r\n                newUser: action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setNewUserAC = (payload: InitialStateType) => ({type: 'SET_NEW_USER', payload}) as const\r\n\r\nexport const setNewUserTC = (email: string, password: string) => (dispatch: Dispatch) => {\r\n    regAPI.registration(email, password)\r\n        .then(response => {\r\n            console.log(response.data)\r\n            dispatch(setNewUserAC(response.data))\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response ? e.response.data.error : (e.message + \", more details in the console\")\r\n            console.log(error)\r\n        })\r\n}\r\n\r\nexport type SetNewUserType = ReturnType<typeof setNewUserAC>;\r\n\r\ntype ActionType = SetNewUserType;","import {Registration} from \"./Registration\";\r\nimport {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setNewUserTC} from \"../../../../store/registration-reducer\";\r\n\r\n\r\nexport const RegistrationPage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    let [email, setEmail] = useState<string>('nya-admin@nya.nya');\r\n    let [password, setPassword] = useState<string>('1qazxcvBG');\r\n    let [passwordConfirm, setPasswordConfirm] = useState<string>('1qazxcvBG');\r\n\r\n    const onEmailChange = (email: string) => {\r\n        setEmail(email)\r\n    }\r\n    const onPasswordChange = (password: string) => {\r\n        setPassword(password)\r\n    }\r\n    const onPasswordConfirm = (passwordConfirm: string) => {\r\n        setPasswordConfirm(passwordConfirm)\r\n    }\r\n\r\n    const registrationButtonClick = () => {\r\n        if (password !== passwordConfirm) {\r\n            alert('Password & confirm password fields are not equally');\r\n            setPassword('');\r\n            setPasswordConfirm('');\r\n            return\r\n        }\r\n        dispatch(setNewUserTC(email, password));\r\n        setEmail('');\r\n        setPassword('');\r\n        setPasswordConfirm('');\r\n    }\r\n\r\n    const cancelClick = () => {\r\n        setEmail('');\r\n        setPassword('');\r\n        setPasswordConfirm('');\r\n    }\r\n\r\n    return <Registration email={email}\r\n                         password={password}\r\n                         passwordConfirm={passwordConfirm}\r\n                         onEmailChange={onEmailChange}\r\n                         onPasswordChange={onPasswordChange}\r\n                         onPasswordConfirmChange={onPasswordConfirm}\r\n                         registrationButtonClock={registrationButtonClick}\r\n                         cancelClick={cancelClick}\r\n    />\r\n\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/'\r\n})\r\n\r\n\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.post(`auth/me`)\r\n    },\r\n\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post('auth/login', {email, password, rememberMe})\r\n\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n    }\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../ui/pages/auth/loginPage/api-login\";\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    user: {},\r\n    isFetching: false,\r\n    error: null as null | string,\r\n    isAuth: false\r\n}\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_USER_DATA':\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                isAuth: true\r\n            }\r\n        case \"IS-FETCHING\":\r\n            return {...state,\r\n                isFetching: action.isFetching}\r\n        case \"SET-ERROR\":\r\n            return {...state,\r\n                error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserDataAC = (payload: InitialStateType) => ({type: 'SET_USER_DATA', payload}) as const\r\nexport const isFetchingAC = (isFetching: boolean) => ({type: \"IS-FETCHING\", isFetching} as const)\r\nexport const setErrorAC = (error: string) => ({type: \"SET-ERROR\", error} as const)\r\n\r\n\r\nexport const getAuthUserData = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch) => {\r\n    dispatch(isFetchingAC(true))\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(response => {\r\n                console.log(response.data)\r\n                dispatch(setAuthUserDataAC(response.data))\r\n            }\r\n        ).catch((e) => {\r\n        const error = e.response ? e.response.data.error : (e.message + \", more details in the console\")\r\n        console.log(error)\r\n        dispatch(setErrorAC(error))\r\n    })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\n\r\nexport type ActionsType =\r\n    |  ReturnType<typeof setAuthUserDataAC>\r\n    |  ReturnType<typeof setErrorAC>\r\n    |  ReturnType<typeof isFetchingAC>\r\n\r\n\r\n\r\n","import s from \"./LoginPage.module.scss\";\r\nimport {Input} from \"../../../common/input/Input\";\r\nimport {Button} from \"../../../common/button/Button\";\r\nimport {Logo} from \"../../../common/logo/Logo\";\r\nimport {TitleH2} from \"../../../common/titleh2/TitleH2\";\r\nimport React, {ChangeEvent} from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {routes} from \"../../../../router/routes\";\r\n\r\ntype LoginPagePropsType = {\r\n    email: string\r\n    error: string | null\r\n    password: string\r\n    rememberMe: boolean\r\n    onclickHandler: () => void\r\n    onChangeEmail: (email: string) => void\r\n    onChangePassword: (password: string)=> void\r\n    onChangeRememberMe: (rememberMe: boolean) => void\r\n\r\n}\r\n\r\nexport const LoginPage = (props:LoginPagePropsType) => {\r\n\r\n    const changeEmail = (value: string) => {\r\n        props.onChangeEmail(value)\r\n    }\r\n    const changePassword = (value: string) => {\r\n        props.onChangePassword(value)\r\n    }\r\n    const changeRememberMe = (e: ChangeEvent<HTMLInputElement>) => {\r\n        props.onChangeRememberMe(e.currentTarget.checked)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.loginPage}>\r\n            <div className={s.wrapper}>\r\n                <div className={s.inner}>\r\n                    <Logo/>\r\n                    <TitleH2 value= \"Sign In\"/>\r\n                    <div className={s.form}>\r\n                        <Input title=\"Email\"\r\n                               type= \"email\"\r\n                               name=\"email\"\r\n                               error={props.error}\r\n                               placeholder={'email'}\r\n                               value={props.email}\r\n                               onChange={changeEmail}\r\n                               style= {{marginTop:\"25px\"}}\r\n                               idName={'inputEmail'}\r\n                        />\r\n\r\n                        {/* Нужно убрать глазик (логика) */}\r\n                        <Input title=\"Password\"\r\n                               // type= \"password\"\r\n                               name=\"password\"\r\n                               error={props.error}\r\n                               placeholder={'password'}\r\n                               value={props.password}\r\n                               onChange={changePassword}\r\n                               style= {{marginTop:\"25px\"}}\r\n                               idName={'inputPassword'}\r\n                               id= \"checkbox2\"\r\n                               htmlFor= \"checkbox2\"\r\n                        />\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className={s.wrap}>\r\n                        <div className={s.checkbox}>\r\n\r\n                            <input className={s.checkboxInput} type=\"checkbox\" id=\"checkbox1\"\r\n                            />\r\n                            <label className={s.checkboxLable} htmlFor=\"checkbox1\">Rememder me</label>\r\n                        </div>\r\n                        <NavLink className={s.linkPassword} to={routes.passwordRecover}>Forgot Password</NavLink>\r\n                        {/*<a className={s.linkPassword} href=\"\">Forgot Password</a>*/}\r\n                    </div>\r\n                    <div className={s.btn}>\r\n                        <Button value=\"Login\"\r\n                                onClick={props.onclickHandler}\r\n\r\n                        />\r\n                    </div>\r\n                    <div className={s.singUp}>\r\n                        <label className={s.span} >Don’t have an account?</label>\r\n                        <NavLink className={s.linkSingUp} to={routes.registration}>Sign Up</NavLink>\r\n                        {/*<a className={s.linkSingUp} href=\"#\">Sign Up</a>*/}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useDispatch, useSelector} from \"react-redux\"\r\nimport React, {useState} from \"react\";\r\nimport {getAuthUserData, setErrorAC} from \"../../../../store/login-reducer\";\r\nimport {LoginPage} from \"./LoginPage\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const LoginContainer = () => {\r\n\r\n    const isFetching = useSelector<AppRootStateType, boolean>((state) => state.login.isFetching)\r\n    const error = useSelector<AppRootStateType, string | null>((state) => state.login.error)\r\n    const isAuth = useSelector<AppRootStateType, boolean>(state => state.login.isAuth)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    let [email, setEmail] = useState<string>('nya-admin@nya.nya')\r\n    let [password, setPassword] = useState<string>('1qazxcvBG')\r\n    let [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const onChangeEmail = (email: string) => {\r\n        setEmail(email)\r\n    }\r\n    const onChangePassword = (password: string) => {\r\n        setPassword(password)\r\n    }\r\n    const onChangeRememberMe = (rememberMe: boolean) => {\r\n        setRememberMe(!rememberMe)\r\n    }\r\n\r\n    let onclickHandler = () => {\r\n        if (email === \"\" || password === \"\") {\r\n            dispatch(setErrorAC('Required'))\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            dispatch(setErrorAC('Invalid email address'))\r\n        } else if (password.length < 8) {\r\n            dispatch(setErrorAC('Password must be more 7 symbols'))\r\n        } else {\r\n            dispatch(getAuthUserData(email, password, rememberMe))\r\n            setEmail('')\r\n            setPassword('')\r\n            setRememberMe(false)\r\n        }\r\n    }\r\n\r\n    if (isFetching) {\r\n        return <div>Loading...</div>\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <LoginPage email={email}\r\n                      error={error}\r\n                      password={password}\r\n                      rememberMe={rememberMe}\r\n                      onclickHandler={onclickHandler}\r\n                      onChangeEmail={onChangeEmail}\r\n                      onChangePassword={onChangePassword}\r\n                      onChangeRememberMe={onChangeRememberMe}/>\r\n\r\n\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0'\r\n})\r\n\r\nconst from = 'shamashov87@mail.ru';\r\nconst message = `<div>password recover link: <a href='http://localhost:3000/#/set-new-password/$token$'>Link</a></div>`\r\n\r\nexport const passwordRecoverAPI = {\r\n    recover(email: string) {\r\n        return instance.post('auth/forgot', {email, from, message})\r\n    }\r\n}","import {Dispatch} from \"redux\"\r\nimport {passwordRecoverAPI} from \"../ui/content/components/passwordRecover/api-passwordRecover\";\r\n\r\nconst initialState = {\r\n    isFetching: false,\r\n    error: null as null | string\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const passwordRecoverReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"IS-FETCHING\":\r\n            return {...state, isFetching: action.isFetching}\r\n        case \"SET-ERROR\":\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const isFetchingAC = (isFetching: boolean) => ({type: \"IS-FETCHING\", isFetching} as const)\r\nexport const setErrorAC = (error: string | null) => ({type: \"SET-ERROR\", error} as const)\r\n\r\nexport const recoverTC = (email: string) => (dispatch: Dispatch<ActionType>) => {\r\n    dispatch(isFetchingAC(true))\r\n    passwordRecoverAPI.recover(email)\r\n        .then(res => {\r\n            console.log(res.data)\r\n        })\r\n        .catch((e) => {\r\n            const error = e.response ? e.response.data.error : (e.message + \", more details in the console\")\r\n            dispatch(setErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(isFetchingAC(false))\r\n        })\r\n}\r\n\r\ntype ActionType = ReturnType<typeof isFetchingAC> | ReturnType<typeof setErrorAC>","import s from \"./ForgotPassword.module.scss\";\r\nimport {Input} from \"../../../../common/input/Input\";\r\nimport {Button} from \"../../../../common/button/Button\";\r\nimport {Logo} from \"../../../../common/logo/Logo\";\r\nimport {TitleH2} from \"../../../../common/titleh2/TitleH2\";\r\n\r\nexport type ForgotPasswordPropsType = {\r\n    email: string\r\n    error: string | null\r\n    onChangeEmail: (value: string) => void\r\n    onclickHandler: () => void\r\n    isFetching: boolean\r\n}\r\n\r\nexport const ForgotPassword = (props: ForgotPasswordPropsType) => {\r\n    return (\r\n        <div className={s.forgotPassword}>\r\n            <div className={s.wrapper}>\r\n                <div className={s.inner}>\r\n                    <Logo/>\r\n                    <TitleH2 value=\"Sign In\"/>\r\n                    <div className={s.form}>\r\n                        <Input title=\"Email\"\r\n                               type=\"email\"\r\n                               name=\"email\"\r\n                               value={props.email}\r\n                               onChange={props.onChangeEmail}\r\n                               error={props.error}\r\n                        /> {/*Нужно убрать глазик (логика)*/}\r\n                    </div>\r\n                    <span className={s.text}>Enter your email address and we will send you further instructions </span>\r\n                    <div className={s.btn}>\r\n                        {props.isFetching\r\n                            ? <span>Loading...</span>\r\n                            : <Button value=\"Send Instructions\"\r\n                                      onClick={props.onclickHandler}\r\n                            />}\r\n                    </div>\r\n                    <div className={s.singUp}>\r\n                        <a className={s.link} href=\"#\">Did you remember your password?</a>\r\n                        <a className={s.linkSingUp} href=\"#\">Try logging in</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport {recoverTC, setErrorAC} from \"../../../../store/passwordRecover-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../store/store\";\r\nimport {ForgotPassword} from \"./forgotPassword/ForgotPassword\";\r\n\r\n\r\nexport const PasswordRecoverContainer = () => {\r\n    const [email, setEmail] = useState(\"shamashov87@mail.ru\")\r\n\r\n    const isFetching = useSelector<AppRootStateType, boolean>((state) => state.passwordRecover.isFetching)\r\n    const error = useSelector<AppRootStateType, string | null>((state) => state.passwordRecover.error)\r\n    const dispatch = useDispatch();\r\n\r\n    const onChangeEmail = (value: string) => {\r\n        setEmail(value)\r\n        if (error !== null) {\r\n            dispatch(setErrorAC(null))\r\n        }\r\n    }\r\n\r\n    const onclickHandler = () => {\r\n        if (email === \"\") {\r\n            dispatch(setErrorAC('Required'))\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\r\n            dispatch(setErrorAC('Invalid email address'))\r\n        } else {\r\n            dispatch(recoverTC(email))\r\n            setEmail(\"\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ForgotPassword email={email}\r\n                         error={error}\r\n                         onChangeEmail={onChangeEmail}\r\n                         onclickHandler={onclickHandler}\r\n                        isFetching={isFetching}\r\n        />\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport s from \"./Content.module.css\"\r\nimport {routes} from \"../../router/routes\";\r\nimport {Profile} from \"./components/profile/Profile\";\r\nimport {NotFound} from \"./components/notFound/NotFound\";\r\nimport {NewPassword} from \"./components/newPassword/NewPassword\";\r\nimport {Presentation} from \"./components/presentation/Presentation\";\r\nimport {RegistrationPage} from \"./components/registration/RegistrationPage\";\r\nimport {LoginContainer} from \"./components/login/LoginContainer\";\r\nimport {PasswordRecoverContainer} from \"./components/passwordRecover/PasswordRecoverContainer\";\r\n\r\n\r\nexport const Content = () => {\r\n    return (\r\n        <div className={s.contentContainer}>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Redirect to={routes.login}/>}/>\r\n                <Route exact path={routes.login} render={() => <LoginContainer/>} />\r\n                <Route exact path={routes.registration} render={() => <RegistrationPage/>} />\r\n                <Route exact path={routes.profile} render={() => <Profile/>} />\r\n                <Route exact path={routes.passwordRecover} render={() => <PasswordRecoverContainer/>} />\r\n                <Route exact path={routes.newPassword} render={() => <NewPassword/>} />\r\n                <Route exact path={routes.presentation} render={() => <Presentation/>} />\r\n                <Route render={() => <NotFound/>} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./Header.module.css\"\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className={s.headerContainer}>\r\n           <button>Login</button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Navigation.module.css\"\r\nimport {routes} from \"../../router/routes\";\r\n\r\n\r\nexport const Navigation = () => {\r\n    return (\r\n        <div className={s.navigationContainer}>\r\n            <h2>Navigation</h2>\r\n            <div className={s.linksList}>\r\n                <NavLink to={routes.login}>Login</NavLink>\r\n                <NavLink to={routes.registration}>Registration</NavLink>\r\n                <NavLink to={routes.profile}>Profile</NavLink>\r\n                <NavLink to={routes.notFound}>404</NavLink>\r\n                <NavLink to={routes.passwordRecover}>Password Recover</NavLink>\r\n                <NavLink to={routes.newPassword}>New Password</NavLink>\r\n                <NavLink to={routes.presentation}>Presentation</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './App.module.scss';\r\nimport { Content } from './main/ui/content/Content';\r\nimport { Header } from './main/ui/header/Header';\r\nimport { Navigation } from './main/ui/navigation/Navigation';\r\nimport {RegistrationPage} from \"./main/ui/content/components/registration/RegistrationPage\";\r\n\r\n// Прошу не удалять я с этим работаю (Люба;))\r\nimport { LoginPage } from './main/ui/pages/auth/loginPage/LoginPage';\r\nimport { Register } from './main/ui/pages/auth/register/Register';\r\nimport { ForgotPassword } from './main/ui/content/components/passwordRecover/forgotPassword/ForgotPassword';\r\nimport { LoginPageTest } from './main/ui/pages/auth/loginPageTest/LoginPageTest';\r\nimport { CheckEmail } from './main/ui/pages/auth/сheckEmail/CheckEmail';\r\nimport { CreateNewPassword } from './main/ui/pages/auth/createNewPassword/CreateNewPassword';\r\nimport { Head } from './main/ui/common/head/Head';\r\n\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.app}>\r\n\r\n            {/* Осталось от фронта */}\r\n            <Header/>\r\n            <Navigation/>\r\n\r\n\r\n            {/* Тут подключены сверстанные странички */}\r\n            {/* <Head/> */}\r\n            <div className={s.content}>\r\n            <Content/>\r\n\r\n\r\n            {/* <LoginPage/> */}\r\n            {/* <Register/> */}\r\n            {/* <ForgotPassword/> */}\r\n            {/* <CheckEmail/> */}\r\n            {/* <CreateNewPassword/> */}\r\n\r\n\r\n\r\n            {/* <LoginPageTest/>  Material UI*/}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nconst initialState = {\r\n\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType = {\r\n    type: string\r\n}","\r\nconst initialState = {\r\n\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const newPasswordReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType = {\r\n    type: string\r\n}","\r\nconst initialState = {\r\n\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType = {\r\n    type: string\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from \"./app-reducer\";\r\nimport {loginReducer} from \"./login-reducer\";\r\nimport {newPasswordReducer} from \"./newPassword-reducer\";\r\nimport {passwordRecoverReducer} from \"./passwordRecover-reducer\";\r\nimport { profileReducer } from \"./profile-reducer\";\r\nimport {registrationReducer} from \"./registration-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login: loginReducer,\r\n    newPassword: newPasswordReducer,\r\n    passwordRecover: passwordRecoverReducer,\r\n    profile: profileReducer,\r\n    registration: registrationReducer\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./main/store/store\";\r\n\r\nReactDOM.render(\r\n\r\n\r\n            <HashRouter>\r\n                <Provider store={store}>\r\n                <App/>\r\n                </Provider>\r\n            </HashRouter>\r\n\r\n  ,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}